{"ast":null,"code":"import React from'react';import api from'../api/api';import swal from'sweetalert';import{useHistory}from'react-router-dom';import MenuItem from'@material-ui/core/MenuItem';export default function CompleteButton(props){var jobId={};jobId[\"id\"]=props.id;var data={};data.id=props.id;var history=useHistory();var handleDelete=function handleDelete(){api.deleteSingleActiveJob(data).then(swal({text:\"Done!\",icon:\"success\",buttons:true}).then(function(success){if(success){history.push({pathname:'/homeowneractivejobs/active'});}else{swal.close();}}));};var handleDeleteDone=function handleDeleteDone(){api.deleteSingleCompletedJob(data).then(swal({text:\"Done!\",icon:\"success\",buttons:true}).then(function(success){if(success){history.push({pathname:'/homeowneractivejobs/done'});}else{swal.close();}}));};var handleDeleteUnassigned=function handleDeleteUnassigned(){api.deleteJob(data).then(swal({text:\"Done!\",icon:\"success\",buttons:true}).then(function(success){if(success){history.push({pathname:'/homeowneractivejobs/unassigned'});}else{swal.close();}}));};return/*#__PURE__*/React.createElement(MenuItem,{onClick:function onClick(){return swal({title:\"Are you sure you want to delete this job?\",text:\"This action can not be undone!\",icon:\"warning\",buttons:true,dangerMode:true}).then(function(willDelete){if(willDelete&&props.page==='active'){handleDelete();}else if(willDelete&&props.page==='complete'){handleDeleteDone();}else if(willDelete&&props.page==='unassign'){handleDeleteUnassigned();}else{swal.close();}});}},\"Delete\");}","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ResuableComponents/deleteButton.js"],"names":["React","api","swal","useHistory","MenuItem","CompleteButton","props","jobId","id","data","history","handleDelete","deleteSingleActiveJob","then","text","icon","buttons","success","push","pathname","close","handleDeleteDone","deleteSingleCompletedJob","handleDeleteUnassigned","deleteJob","title","dangerMode","willDelete","page"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../api/api';\nimport swal from 'sweetalert';\nimport {useHistory} from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport default function CompleteButton(props) {\n    var jobId ={};\n    jobId[\"id\"] = props.id\n    let data={}\n    data.id= props.id\n    const history = useHistory();\n    const handleDelete = () => {\n        api.deleteSingleActiveJob(data).then(\n            swal({\n                text: \"Done!\",\n                icon: \"success\",\n                buttons: true,\n            }).then((success) => {\n                if (success) {\n                    history.push({\n                        pathname: '/homeowneractivejobs/active',\n                    })\n                } else {swal.close()}\n            })\n        )\n    }\n    const handleDeleteDone = () => {\n        api.deleteSingleCompletedJob(data).then(\n            swal({\n                text: \"Done!\",\n                icon: \"success\",\n                buttons: true,\n            }).then((success) => {\n                if (success) {\n                    history.push({\n                        pathname: '/homeowneractivejobs/done',\n                    })\n                } else {swal.close()}\n            })\n        )\n    }\n    const handleDeleteUnassigned = () => {\n        api.deleteJob(data).then(\n            swal({\n                text: \"Done!\",\n                icon: \"success\",\n                buttons: true,\n            }).then((success) => {\n                if (success) {\n                    history.push({\n                        pathname: '/homeowneractivejobs/unassigned',\n                    })\n                } else {swal.close()}\n            })\n        )\n    }\n    return(\n        <MenuItem onClick={()=>\n            swal({\n                title: \"Are you sure you want to delete this job?\",\n                text: \"This action can not be undone!\",\n                icon: \"warning\",\n                buttons: true,\n                dangerMode: true,\n            }).then((willDelete) => {\n                if (willDelete && props.page === 'active') {handleDelete()}\n                else if (willDelete && props.page === 'complete') {handleDeleteDone()}\n                else if (willDelete && props.page === 'unassign') {handleDeleteUnassigned()}\n                else {swal.close()}\n            })\n        }>Delete</MenuItem>\n    );\n  }"]},"metadata":{},"sourceType":"module"}