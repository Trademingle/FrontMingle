{"ast":null,"code":"import _toConsumableArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectWithoutProperties from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _excluded=[\"label\",\"onDelete\"];var _templateObject,_templateObject2,_templateObject3;import React from'react';import useAutocomplete from'@material-ui/lab/useAutocomplete';import NoSsr from'@material-ui/core/NoSsr';import CheckIcon from'@material-ui/icons/Check';import CloseIcon from'@material-ui/icons/Close';import styled from'styled-components';// const Label = styled('label')`\n//   padding: 0 0 4px;\n//   line-height: 1.5;\n//   display: block;\n// `;\nvar InputWrapper=styled('div')(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 80%;\\n  border: 1px solid #000000;\\n  background-color: #ffffff;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: left;\\n\\n  &:hover {\\n    border-color: #40a9ff;\\n  }\\n\\n  &.focused {\\n    border-color: #40a9ff;\\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\\n  }\\n\\n  & input {\\n    font-size: 14px;\\n    height: 40px;\\n    box-sizing: border-box;\\n    padding: 4px;\\n    width: 0;\\n    min-width: 30px;\\n    flex-grow: 1;\\n    border: 0;\\n    margin: 0;\\n    outline: 0;\\n  }\\n\"])));var Tag=styled(function(_ref){var label=_ref.label,onDelete=_ref.onDelete,props=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/React.createElement(\"div\",props,/*#__PURE__*/React.createElement(\"span\",null,label),/*#__PURE__*/React.createElement(CloseIcon,{onClick:onDelete}));})(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 18px;\\n  background-color: #ffffff;\\n  border: 2px solid #2B64D2;\\n  border-radius: 38px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n  color:#2B64D2;\\n\\n  &:focus {\\n    border-color: #40a9ff;\\n    background-color: #e6f7ff;\\n  }\\n\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n  }\\n\\n  & svg {\\n    font-size: 14px;\\n    cursor: pointer;\\n    padding: 4px;\\n  }\\n\"])));var Listbox=styled('ul')(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  margin: 2px 0 0;\\n  padding: 0;\\n  position: re lative;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n\\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n\\n    & span {\\n      flex-grow: 1;\\n    }\\n\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n\\n    & svg {\\n      color: #1890ff;\\n    }\\n  }\\n\\n  & li[data-focus='true'] {\\n    background-color: #e6f7ff;\\n    cursor: pointer;\\n\\n    & svg {\\n      color: #000;\\n    }\\n  }\\n\"])));export default function CustomizedHook(props){var _useAutocomplete=useAutocomplete({id:'customized-hook-demo',multiple:true,options:props.options,getOptionLabel:function getOptionLabel(option){return option.title;}}),getRootProps=_useAutocomplete.getRootProps,getInputProps=_useAutocomplete.getInputProps,getTagProps=_useAutocomplete.getTagProps,getListboxProps=_useAutocomplete.getListboxProps,getOptionProps=_useAutocomplete.getOptionProps,groupedOptions=_useAutocomplete.groupedOptions,value=_useAutocomplete.value,focused=_useAutocomplete.focused,setAnchorEl=_useAutocomplete.setAnchorEl;// const optionProps\nreturn/*#__PURE__*/React.createElement(NoSsr,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",getRootProps(),/*#__PURE__*/React.createElement(InputWrapper,{ref:setAnchorEl,style:{paddingLeft:50,width:'90%',height:'auto',borderRadius:'49px/90px',textAlign:'left'},className:focused?'focused':''},value.map(function(option,index){return/*#__PURE__*/React.createElement(Tag,Object.assign({label:option.title},getTagProps({index:index})));}),/*#__PURE__*/React.createElement(\"input\",Object.assign({},getInputProps(),{placeholder:props.placeholder})))),groupedOptions.length>0?/*#__PURE__*/React.createElement(Listbox,getListboxProps(),groupedOptions.map(function(option,index){var optionProps=getOptionProps({option:option,index:index});var currOnClick=optionProps.onClick;var newOnClick=function newOnClick(event){currOnClick(event);// debugger;\nif('type'in props){props.information[props.type]=[].concat(_toConsumableArray(value.map(function(val){return val.title;})),[event.target.innerText]);}};optionProps.onClick=newOnClick;return/*#__PURE__*/React.createElement(\"li\",optionProps,/*#__PURE__*/React.createElement(\"span\",null,option.title),/*#__PURE__*/React.createElement(CheckIcon,{fontSize:\"small\"}));})):null));}// const choosingList = [\n//   { title: 'Electricians'},\n//   { title: 'Plumbers'},\n//   { title: 'Alaram systems'},\n//   { title: 'English'},\n//   { title: 'French'},\n//   { title: 'Montana'},\n//   { title: 'Italy'},\n//   { title: 'Farmer'},\n// ];","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/SignUp/SignUpFlow/search.js"],"names":["React","useAutocomplete","NoSsr","CheckIcon","CloseIcon","styled","InputWrapper","Tag","label","onDelete","props","Listbox","CustomizedHook","id","multiple","options","getOptionLabel","option","title","getRootProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","value","focused","setAnchorEl","paddingLeft","width","height","borderRadius","textAlign","map","index","placeholder","length","optionProps","currOnClick","onClick","newOnClick","event","information","type","val","target","innerText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\n\n// const Label = styled('label')`\n//   padding: 0 0 4px;\n//   line-height: 1.5;\n//   display: block;\n// `;\n\nconst InputWrapper = styled('div')`\n  width: 80%;\n  border: 1px solid #000000;\n  background-color: #ffffff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: left;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 40px;\n    box-sizing: border-box;\n    padding: 4px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n  <div {...props}>\n    <span>{label}</span>\n    <CloseIcon onClick={onDelete} />\n  </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 18px;\n  background-color: #ffffff;\n  border: 2px solid #2B64D2;\n  border-radius: 38px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n  color:#2B64D2;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 14px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  margin: 2px 0 0;\n  padding: 0;\n  position: re lative;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\nexport default function CustomizedHook(props) {\n  const {\n    getRootProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl,\n  } = useAutocomplete({\n    id: 'customized-hook-demo',\n    multiple: true,\n    options: props.options,\n    getOptionLabel: (option) => option.title,\n  });\n\n  // const optionProps\n  return (\n    <NoSsr>\n      <div >\n        <div  {...getRootProps()}>\n          {/* <Label {...getInputLabelProps()}>Customized hook</Label> */}\n          <InputWrapper ref={setAnchorEl} style={{paddingLeft:50, \n            width:'90%',\n             height:'auto',\n             borderRadius: '49px/90px',\n             textAlign: 'left'\n             }} className={focused ? 'focused' : ''}>\n            {value.map((option, index) => (\n              <Tag label={option.title} {...getTagProps({ index })} />\n            ))}\n\n            <input {...getInputProps()} placeholder={props.placeholder}/>\n          </InputWrapper>\n        </div>\n        {groupedOptions.length > 0 ? (\n          <Listbox {...getListboxProps()}>\n            {groupedOptions.map((option, index) => {\n              const optionProps = getOptionProps({ option, index })\n              const currOnClick = optionProps.onClick;\n              const newOnClick = (event) =>{\n                currOnClick(event);\n                // debugger;\n                if ('type' in props){\n                  props.information[props.type] = [...value.map(val=> val.title), event.target.innerText]\n                }\n              }\n              optionProps.onClick = newOnClick\n              return(<li {...optionProps}>\n                <span>{option.title}</span>\n                <CheckIcon fontSize=\"small\" />\n              </li>)\n            })}\n          </Listbox>\n        ) : null}\n      </div>\n    </NoSsr>\n  );\n}\n\n// const choosingList = [\n//   { title: 'Electricians'},\n//   { title: 'Plumbers'},\n//   { title: 'Alaram systems'},\n//   { title: 'English'},\n//   { title: 'French'},\n//   { title: 'Montana'},\n//   { title: 'Italy'},\n//   { title: 'Farmer'},\n// ];\n"]},"metadata":{},"sourceType":"module"}