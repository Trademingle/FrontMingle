{"ast":null,"code":"import _objectSpread from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import TextField from'@material-ui/core/TextField';import Autocomplete from'@material-ui/lab/Autocomplete';import LocationOnIcon from'@material-ui/icons/LocationOn';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';import parse from'autosuggest-highlight/parse';import throttle from'lodash/throttle';import{getLatLng}from'../api/api';function loadScript(src,position,id){if(!position){return;}var script=document.createElement('script');script.setAttribute('async','');script.setAttribute('id',id);script.src=src;position.appendChild(script);}var autocompleteService={current:null};var useStyles=makeStyles(function(theme){return{icon:{color:theme.palette.text.secondary,marginRight:theme.spacing(2)}};});export default function GoogleMaps(props){var classes=useStyles();var defaultValue=null;if('information'in props&&'defaultValue'in props){defaultValue=props.defaultValue;}var _React$useState=React.useState(defaultValue),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var _React$useState3=React.useState(''),_React$useState4=_slicedToArray(_React$useState3,2),inputValue=_React$useState4[0],setInputValue=_React$useState4[1];var _React$useState5=React.useState([]),_React$useState6=_slicedToArray(_React$useState5,2),options=_React$useState6[0],setOptions=_React$useState6[1];var loaded=React.useRef(false);if(typeof window!=='undefined'&&!loaded.current){if(!document.querySelector('#google-maps')){loadScript('https://maps.googleapis.com/maps/api/js?key=AIzaSyBQbOVpM2UKKRF82lw8OVr2KhKKysfjZSU&libraries=places',document.querySelector('head'),'google-maps');}loaded.current=true;}var fetch=React.useMemo(function(){return throttle(function(request,callback){autocompleteService.current.getPlacePredictions(request,callback);},200);},[]);React.useEffect(function(){var active=true;if(!autocompleteService.current&&window.google){autocompleteService.current=new window.google.maps.places.AutocompleteService();}if(!autocompleteService.current){return undefined;}if(inputValue===''){setOptions(value?[value]:[]);return undefined;}fetch({input:inputValue},function(results){if(active){var newOptions=[];if(value){newOptions=[value];}if(results){newOptions=[].concat(_toConsumableArray(newOptions),_toConsumableArray(results));}setOptions(newOptions);}});return function(){active=false;};},[value,inputValue,fetch]);return/*#__PURE__*/React.createElement(Autocomplete,{id:\"google-map-demo\",style:props.type==='side'?{width:props.width,marginTop:'17px'}:{width:props.width,marginTop:'17px'},getOptionLabel:function getOptionLabel(option){return typeof option==='string'?option:option.description;},filterOptions:function filterOptions(x){return x;},options:options,autoComplete:true,includeInputInList:true,filterSelectedOptions:true,value:value,onChange:function onChange(event,newValue){if(newValue){getLatLng(newValue.description).then(function(res){var data=res.data.results[0];var returnVal=_objectSpread({'address':newValue.description},data.geometry.location);returnVal['long']=returnVal['lng'];props.setLocation(_objectSpread(_objectSpread({},props.information),returnVal));}).catch(function(err){console.log(err);});}else{var newProps=_objectSpread({},props.information);delete newProps['lat'];delete newProps['long'];delete newProps['address'];if(props.setLocation){props.setLocation(newProps);}}setOptions(newValue?[newValue].concat(_toConsumableArray(options)):options);setValue(newValue);},onInputChange:function onInputChange(event,newInputValue){setInputValue(newInputValue);},renderInput:function renderInput(params){return/*#__PURE__*/React.createElement(TextField,Object.assign({style:{borderWidth:'10px'}},params,{placeholder:\"Where is your work?\",fullWidth:true}));},renderOption:function renderOption(option){var matches=option.structured_formatting.main_text_matched_substrings;var parts=parse(option.structured_formatting.main_text,matches.map(function(match){return[match.offset,match.offset+match.length];}));return/*#__PURE__*/React.createElement(Grid,{container:true,alignItems:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(LocationOnIcon,{className:classes.icon})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true},parts.map(function(part,index){return/*#__PURE__*/React.createElement(\"span\",{key:index,style:{fontWeight:part.highlight?700:400}},part.text);}),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\"},option.structured_formatting.secondary_text)));}});}","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/LocationTextField/index.js"],"names":["React","TextField","Autocomplete","LocationOnIcon","Grid","Typography","makeStyles","parse","throttle","getLatLng","loadScript","src","position","id","script","document","createElement","setAttribute","appendChild","autocompleteService","current","useStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","GoogleMaps","props","classes","defaultValue","useState","value","setValue","inputValue","setInputValue","options","setOptions","loaded","useRef","window","querySelector","fetch","useMemo","request","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","undefined","input","results","newOptions","type","width","marginTop","option","description","x","event","newValue","then","res","data","returnVal","geometry","location","setLocation","information","catch","err","console","log","newProps","newInputValue","params","borderWidth","matches","structured_formatting","main_text_matched_substrings","parts","main_text","map","match","offset","length","part","index","fontWeight","highlight","secondary_text"],"mappings":"kgBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,+BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,6BAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,OAAQC,SAAR,KAAwB,YAAxB,CAEA,QAASC,CAAAA,UAAT,CAAoBC,GAApB,CAAyBC,QAAzB,CAAmCC,EAAnC,CAAuC,CACrC,GAAI,CAACD,QAAL,CAAe,CACb,OACD,CAED,GAAME,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf,CACAF,MAAM,CAACG,YAAP,CAAoB,OAApB,CAA6B,EAA7B,EACAH,MAAM,CAACG,YAAP,CAAoB,IAApB,CAA0BJ,EAA1B,EACAC,MAAM,CAACH,GAAP,CAAaA,GAAb,CACAC,QAAQ,CAACM,WAAT,CAAqBJ,MAArB,EACD,CAED,GAAMK,CAAAA,mBAAmB,CAAG,CAAEC,OAAO,CAAE,IAAX,CAA5B,CAEA,GAAMC,CAAAA,SAAS,CAAGf,UAAU,CAAC,SAACgB,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,KAAK,CAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmBC,SADtB,CAEJC,WAAW,CAAEN,KAAK,CAACO,OAAN,CAAc,CAAd,CAFT,CADiC,CAAZ,EAAD,CAA5B,CAOA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACxC,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CACA,GAAIY,CAAAA,YAAY,CAAG,IAAnB,CACA,GAAI,eAAiBF,CAAAA,KAAjB,EAA0B,gBAAkBA,CAAAA,KAAhD,CAAsD,CACpDE,YAAY,CAAGF,KAAK,CAACE,YAArB,CACD,CACD,oBAA0BjC,KAAK,CAACkC,QAAN,CAAeD,YAAf,CAA1B,oDAAOE,KAAP,qBAAcC,QAAd,qBACA,qBAAoCpC,KAAK,CAACkC,QAAN,CAAe,EAAf,CAApC,qDAAOG,UAAP,qBAAmBC,aAAnB,qBACA,qBAA8BtC,KAAK,CAACkC,QAAN,CAAe,EAAf,CAA9B,qDAAOK,OAAP,qBAAgBC,UAAhB,qBACA,GAAMC,CAAAA,MAAM,CAAGzC,KAAK,CAAC0C,MAAN,CAAa,KAAb,CAAf,CAEA,GAAI,MAAOC,CAAAA,MAAP,GAAkB,WAAlB,EAAiC,CAACF,MAAM,CAACrB,OAA7C,CAAsD,CACpD,GAAI,CAACL,QAAQ,CAAC6B,aAAT,CAAuB,cAAvB,CAAL,CAA6C,CAC3ClC,UAAU,CACR,sGADQ,CAERK,QAAQ,CAAC6B,aAAT,CAAuB,MAAvB,CAFQ,CAGR,aAHQ,CAAV,CAKD,CAEDH,MAAM,CAACrB,OAAP,CAAiB,IAAjB,CACD,CAED,GAAMyB,CAAAA,KAAK,CAAG7C,KAAK,CAAC8C,OAAN,CACZ,iBACEtC,CAAAA,QAAQ,CAAC,SAACuC,OAAD,CAAUC,QAAV,CAAuB,CAC9B7B,mBAAmB,CAACC,OAApB,CAA4B6B,mBAA5B,CAAgDF,OAAhD,CAAyDC,QAAzD,EACD,CAFO,CAEL,GAFK,CADV,EADY,CAKZ,EALY,CAAd,CAQAhD,KAAK,CAACkD,SAAN,CAAgB,UAAM,CACpB,GAAIC,CAAAA,MAAM,CAAG,IAAb,CAEA,GAAI,CAAChC,mBAAmB,CAACC,OAArB,EAAgCuB,MAAM,CAACS,MAA3C,CAAmD,CACjDjC,mBAAmB,CAACC,OAApB,CAA8B,GAAIuB,CAAAA,MAAM,CAACS,MAAP,CAAcC,IAAd,CAAmBC,MAAnB,CAA0BC,mBAA9B,EAA9B,CACD,CACD,GAAI,CAACpC,mBAAmB,CAACC,OAAzB,CAAkC,CAChC,MAAOoC,CAAAA,SAAP,CACD,CAED,GAAInB,UAAU,GAAK,EAAnB,CAAuB,CACrBG,UAAU,CAACL,KAAK,CAAG,CAACA,KAAD,CAAH,CAAa,EAAnB,CAAV,CACA,MAAOqB,CAAAA,SAAP,CACD,CAEDX,KAAK,CAAC,CAAEY,KAAK,CAAEpB,UAAT,CAAD,CAAwB,SAACqB,OAAD,CAAa,CACxC,GAAIP,MAAJ,CAAY,CACV,GAAIQ,CAAAA,UAAU,CAAG,EAAjB,CAEA,GAAIxB,KAAJ,CAAW,CACTwB,UAAU,CAAG,CAACxB,KAAD,CAAb,CACD,CAED,GAAIuB,OAAJ,CAAa,CACXC,UAAU,8BAAOA,UAAP,qBAAsBD,OAAtB,EAAV,CACD,CAEDlB,UAAU,CAACmB,UAAD,CAAV,CACD,CACF,CAdI,CAAL,CAgBA,MAAO,WAAM,CACXR,MAAM,CAAG,KAAT,CACD,CAFD,CAGD,CAlCD,CAkCG,CAAChB,KAAD,CAAQE,UAAR,CAAoBQ,KAApB,CAlCH,EAoCA,mBACE,oBAAC,YAAD,EACE,EAAE,CAAC,iBADL,CAEE,KAAK,CAAEd,KAAK,CAAC6B,IAAN,GAAa,MAAb,CAAoB,CAAEC,KAAK,CAAE9B,KAAK,CAAC8B,KAAf,CACzBC,SAAS,CAAE,MADc,CAApB,CACc,CAAED,KAAK,CAAE9B,KAAK,CAAC8B,KAAf,CACnBC,SAAS,CAAE,MADQ,CAHvB,CAKE,cAAc,CAAE,wBAACC,MAAD,QAAa,OAAOA,CAAAA,MAAP,GAAkB,QAAlB,CAA6BA,MAA7B,CAAsCA,MAAM,CAACC,WAA1D,EALlB,CAME,aAAa,CAAE,uBAACC,CAAD,QAAOA,CAAAA,CAAP,EANjB,CAOE,OAAO,CAAE1B,OAPX,CAQE,YAAY,KARd,CASE,kBAAkB,KATpB,CAUE,qBAAqB,KAVvB,CAWE,KAAK,CAAEJ,KAXT,CAYE,QAAQ,CAAE,kBAAC+B,KAAD,CAAQC,QAAR,CAAqB,CAC7B,GAAKA,QAAL,CAAe,CACb1D,SAAS,CAAC0D,QAAQ,CAACH,WAAV,CAAT,CAAgCI,IAAhC,CAAqC,SAAAC,GAAG,CAAI,CAC1C,GAAMC,CAAAA,IAAI,CAAGD,GAAG,CAACC,IAAJ,CAASZ,OAAT,CAAiB,CAAjB,CAAb,CACA,GAAMa,CAAAA,SAAS,gBACb,UAAWJ,QAAQ,CAACH,WADP,EAEVM,IAAI,CAACE,QAAL,CAAcC,QAFJ,CAAf,CAIAF,SAAS,CAAC,MAAD,CAAT,CAAoBA,SAAS,CAAC,KAAD,CAA7B,CACAxC,KAAK,CAAC2C,WAAN,gCAAsB3C,KAAK,CAAC4C,WAA5B,EAA4CJ,SAA5C,GACD,CARD,EAQGK,KARH,CAQS,SAAAC,GAAG,CAAI,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAVD,EAWD,CAZD,IAYM,CACJ,GAAMG,CAAAA,QAAQ,kBAAOjD,KAAK,CAAC4C,WAAb,CAAd,CACA,MAAOK,CAAAA,QAAQ,CAAC,KAAD,CAAf,CACA,MAAOA,CAAAA,QAAQ,CAAC,MAAD,CAAf,CACA,MAAOA,CAAAA,QAAQ,CAAC,SAAD,CAAf,CACA,GAAGjD,KAAK,CAAC2C,WAAT,CAAqB,CACnB3C,KAAK,CAAC2C,WAAN,CAAkBM,QAAlB,EACD,CACF,CACDxC,UAAU,CAAC2B,QAAQ,EAAIA,QAAJ,4BAAiB5B,OAAjB,GAA4BA,OAArC,CAAV,CACAH,QAAQ,CAAC+B,QAAD,CAAR,CACD,CApCH,CAqCE,aAAa,CAAE,uBAACD,KAAD,CAAQe,aAAR,CAA0B,CACvC3C,aAAa,CAAC2C,aAAD,CAAb,CACD,CAvCH,CAwCE,WAAW,CAAE,qBAACC,MAAD,qBACX,oBAAC,SAAD,gBAAW,KAAK,CAAE,CAACC,WAAW,CAAC,MAAb,CAAlB,EAA4CD,MAA5C,EACA,WAAW,CAAC,qBADZ,CACkC,SAAS,KAD3C,GADW,EAxCf,CA6CE,YAAY,CAAE,sBAACnB,MAAD,CAAY,CACxB,GAAMqB,CAAAA,OAAO,CAAGrB,MAAM,CAACsB,qBAAP,CAA6BC,4BAA7C,CACA,GAAMC,CAAAA,KAAK,CAAGhF,KAAK,CACjBwD,MAAM,CAACsB,qBAAP,CAA6BG,SADZ,CAEjBJ,OAAO,CAACK,GAAR,CAAY,SAACC,KAAD,QAAW,CAACA,KAAK,CAACC,MAAP,CAAeD,KAAK,CAACC,MAAN,CAAeD,KAAK,CAACE,MAApC,CAAX,EAAZ,CAFiB,CAAnB,CAIA,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,UAAU,CAAC,QAA3B,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,cAAD,EAAgB,SAAS,CAAE5D,OAAO,CAACT,IAAnC,EADF,CADF,cAIE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,KAAb,EACGgE,KAAK,CAACE,GAAN,CAAU,SAACI,IAAD,CAAOC,KAAP,qBACT,4BAAM,GAAG,CAAEA,KAAX,CAAkB,KAAK,CAAE,CAAEC,UAAU,CAAEF,IAAI,CAACG,SAAL,CAAiB,GAAjB,CAAuB,GAArC,CAAzB,EACGH,IAAI,CAACnE,IADR,CADS,EAAV,CADH,cAOE,oBAAC,UAAD,EAAY,OAAO,CAAC,OAApB,CAA4B,KAAK,CAAC,eAAlC,EACGqC,MAAM,CAACsB,qBAAP,CAA6BY,cADhC,CAPF,CAJF,CADF,CAkBD,CArEH,EADF,CAyED","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\nimport {getLatLng} from '../api/api';\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nconst autocompleteService = { current: null };\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    color: theme.palette.text.secondary,\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function GoogleMaps(props) {\n  const classes = useStyles();\n  let defaultValue = null;\n  if ('information' in props && 'defaultValue' in props){\n    defaultValue = props.defaultValue\n  }\n  const [value, setValue] = React.useState(defaultValue);\n  const [inputValue, setInputValue] = React.useState('');\n  const [options, setOptions] = React.useState([]);\n  const loaded = React.useRef(false);\n\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript(\n        'https://maps.googleapis.com/maps/api/js?key=AIzaSyBQbOVpM2UKKRF82lw8OVr2KhKKysfjZSU&libraries=places',\n        document.querySelector('head'),\n        'google-maps',\n      );\n    }\n\n    loaded.current = true;\n  }\n\n  const fetch = React.useMemo(\n    () =>\n      throttle((request, callback) => {\n        autocompleteService.current.getPlacePredictions(request, callback);\n      }, 200),\n    [],\n  );\n\n  React.useEffect(() => {\n    let active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    }\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    if (inputValue === '') {\n      setOptions(value ? [value] : []);\n      return undefined;\n    }\n\n    fetch({ input: inputValue }, (results) => {\n      if (active) {\n        let newOptions = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [...newOptions, ...results];\n        }\n\n        setOptions(newOptions);\n      }\n    });\n\n    return () => {\n      active = false;\n    };\n  }, [value, inputValue, fetch]);\n\n  return (\n    <Autocomplete\n      id=\"google-map-demo\"\n      style={props.type==='side'?{ width: props.width, \n        marginTop: '17px'}:{ width: props.width, \n        marginTop: '17px'}}\n      getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\n      filterOptions={(x) => x}\n      options={options}\n      autoComplete\n      includeInputInList\n      filterSelectedOptions\n      value={value}\n      onChange={(event, newValue) => {\n        if ( newValue ){\n          getLatLng(newValue.description).then(res => {\n            const data = res.data.results[0]\n            const returnVal = {\n              'address': newValue.description,\n              ...data.geometry.location\n            }\n            returnVal['long'] = returnVal['lng']\n            props.setLocation({...props.information, ...returnVal})\n          }).catch(err => {\n            console.log(err)\n          });\n        } else{\n          const newProps = {...props.information}\n          delete newProps['lat']\n          delete newProps['long']\n          delete newProps['address']\n          if(props.setLocation){\n            props.setLocation(newProps)\n          }\n        }\n        setOptions(newValue ? [newValue, ...options] : options);\n        setValue(newValue);\n      }}\n      onInputChange={(event, newInputValue) => {\n        setInputValue(newInputValue);\n      }}\n      renderInput={(params) => (\n        <TextField style={{borderWidth:'10px'}} {...params}  \n        placeholder='Where is your work?' fullWidth       \n        />\n      )}\n      renderOption={(option) => {\n        const matches = option.structured_formatting.main_text_matched_substrings;\n        const parts = parse(\n          option.structured_formatting.main_text,\n          matches.map((match) => [match.offset, match.offset + match.length]),\n        );\n        return (\n          <Grid container alignItems=\"center\">\n            <Grid item>\n              <LocationOnIcon className={classes.icon} />\n            </Grid>\n            <Grid item xs>\n              {parts.map((part, index) => (\n                <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\n                  {part.text}\n                </span>\n              ))}\n\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                {option.structured_formatting.secondary_text}\n              </Typography>\n            </Grid>\n          </Grid>\n        );\n      }}\n    />\n  );\n}"]},"metadata":{},"sourceType":"module"}