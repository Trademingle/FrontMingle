{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ResuableComponents/bookmarkButton.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport swal from 'sweetalert';\nimport SignUpPage from '../SignUp';\nimport SignIn from '../Login';\nimport api from '../api/api';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst BookmarkButton = props => {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [open1, setOpen1] = React.useState(false);\n\n  const handleOnClick = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    swal({\n      title: \"You are not signed in!\",\n      text: \"Please log in or sign up as Client to use this feature!\",\n      icon: \"info\",\n      buttons: {\n        cancel: \"Cancel\",\n        login: {\n          text: \"Log in\",\n          value: \"login\"\n        },\n        signup: {\n          text: \"Sign up\",\n          value: \"signup\"\n        }\n      }\n    }).then(value => {\n      switch (value) {\n        case \"login\":\n          setOpen(true);\n          break;\n\n        case \"signup\":\n          setOpen1(true);\n          break;\n\n        default:\n          swal.close();\n      }\n    });\n  };\n\n  const [buttonClicked, setButtonClicked] = React.useState(false);\n  let profileId = {};\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    let tempJobs = localStorage.getItem('savedJobList');\n    let tempSavedJobs = [];\n\n    if (tempJobs === \"\") {\n      tempSavedJobs = [];\n    } else {\n      tempSavedJobs = localStorage.getItem('savedJobList').split(`,`).map(x => +x);\n    }\n\n    const indexx = tempSavedJobs.indexOf(props.id);\n\n    if (tempSavedJobs.includes(props.id)) {\n      tempSavedJobs.splice(indexx, 1);\n    } else {\n      tempSavedJobs.push(props.id);\n    }\n\n    localStorage.setItem('savedJobList', tempSavedJobs);\n    profileId['savedJobList'] = tempSavedJobs;\n    api.editProfileForBookmark(profileId).then(res => {\n      console.log(res);\n    }).catch(err => console.log(err));\n    setButtonClicked(!buttonClicked);\n  };\n\n  const ButtonIcon = () => {\n    if (localStorage.getItem('savedJobList').includes(props.id)) {\n      return /*#__PURE__*/React.createElement(BookmarkIcon, {\n        style: {\n          color: \"#2B64D2\",\n          fontSize: 36,\n          marginTop: '-15'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(BookmarkBorderIcon, {\n        style: {\n          color: \"#555555\",\n          fontSize: 36,\n          marginTop: '-15'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  const ButtonIcon2 = () => {\n    if (localStorage.getItem('savedJobList').includes(props.id)) {\n      return /*#__PURE__*/React.createElement(BookmarkIcon, {\n        style: {\n          fontSize: 32,\n          position: 'relative',\n          color: '#22C029',\n          cursor: 'pointer'\n        },\n        onClick: e => handleSubmit(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(BookmarkBorderIcon, {\n        style: {\n          fontSize: 32,\n          position: 'relative',\n          color: '#22C029',\n          cursor: 'pointer'\n        },\n        onClick: e => handleSubmit(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      });\n    }\n  };\n\n  if (localStorage.getItem('usertype') === 'Client') {\n    return null;\n  } else if (localStorage.getItem('usertype') === 'Contractor') {\n    if (props.iconButton === false) {\n      return /*#__PURE__*/React.createElement(ButtonIcon2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(IconButton, {\n        onClick: e => handleSubmit(e),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ButtonIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }));\n    }\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BookmarkBorderIcon, {\n      style: {\n        cursor: \"pointer\",\n        color: 'grey'\n      },\n      onClick: event => handleOnClick(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SignIn, {\n      setOpen: setOpen,\n      open: open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(SignUpPage, {\n      setOpen: setOpen1,\n      open: open1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }));\n  }\n};\n\n_s(BookmarkButton, \"vqTNqC1QHm44n1cun7m8qSgCs4c=\");\n\n_c = BookmarkButton;\nexport default BookmarkButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookmarkButton\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ResuableComponents/bookmarkButton.js"],"names":["React","BookmarkBorderIcon","BookmarkIcon","swal","SignUpPage","SignIn","api","IconButton","BookmarkButton","props","open","setOpen","useState","open1","setOpen1","handleOnClick","event","preventDefault","stopPropagation","title","text","icon","buttons","cancel","login","value","signup","then","close","buttonClicked","setButtonClicked","profileId","handleSubmit","e","tempJobs","localStorage","getItem","tempSavedJobs","split","map","x","indexx","indexOf","id","includes","splice","push","setItem","editProfileForBookmark","res","console","log","catch","err","ButtonIcon","color","fontSize","marginTop","ButtonIcon2","position","cursor","iconButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport swal from 'sweetalert';\nimport SignUpPage from '../SignUp';\nimport SignIn from '../Login';\nimport api from '../api/api';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst BookmarkButton=(props)=>{\n    const [open, setOpen] = React.useState(false);\n    const [open1, setOpen1] = React.useState(false);\n    const handleOnClick = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      swal({\n        title: \"You are not signed in!\",\n        text: \"Please log in or sign up as Client to use this feature!\",\n        icon: \"info\",\n        buttons: {\n          cancel: \"Cancel\",\n          login: {\n            text: \"Log in\",\n            value: \"login\",\n          },\n          signup: {\n            text: \"Sign up\",\n            value: \"signup\",\n          },\n        },\n      })\n      .then((value) => {\n        switch (value) {\n          case \"login\":\n            setOpen(true);\n            break;\n          case \"signup\":\n            setOpen1(true);\n            break;\n          default:\n            swal.close()\n      }});\n    };\n    const [buttonClicked, setButtonClicked] = React.useState(false);\n    let profileId={};\n    const handleSubmit = (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      let tempJobs= localStorage.getItem('savedJobList')\n      let tempSavedJobs=[]\n      if(tempJobs===\"\"){\n        tempSavedJobs=[]\n      }\n      else{\n        tempSavedJobs= localStorage.getItem('savedJobList').split(`,`).map(x=>+x)\n      }\n      const indexx = tempSavedJobs.indexOf(props.id);\n      if (tempSavedJobs.includes(props.id)){\n        tempSavedJobs.splice(indexx,1)\n      }\n      else {\n        tempSavedJobs.push(props.id)\n      }\n      localStorage.setItem('savedJobList', tempSavedJobs)\n      profileId['savedJobList']= tempSavedJobs\n      api.editProfileForBookmark(profileId).then(res => {\n        console.log(res);\n        }).catch(err => console.log(err))\n      setButtonClicked(!buttonClicked)\n    }\n\n    const ButtonIcon=()=>{\n      if (localStorage.getItem('savedJobList').includes(props.id)){\n        return(\n          <BookmarkIcon style={{color:\"#2B64D2\", fontSize:36, marginTop:'-15'}}/>\n        )\n      }\n      else {\n        return(\n          <BookmarkBorderIcon style={{color:\"#555555\", fontSize:36, marginTop:'-15'}}/>)\n      }\n    }\n    const ButtonIcon2=()=>{\n      if (localStorage.getItem('savedJobList').includes(props.id)){\n        return(\n          <BookmarkIcon style={{fontSize:32, position: 'relative', color: '#22C029', cursor: 'pointer'}} onClick={(e)=>handleSubmit(e)}/>\n        )\n      }\n      else {\n        return(\n          <BookmarkBorderIcon style={{fontSize:32, position: 'relative', color: '#22C029', cursor: 'pointer'}} onClick={(e)=>handleSubmit(e)}/>)\n      }\n    }\n\n    if (localStorage.getItem('usertype') === 'Client'){\n      return( null )}\n    else if (localStorage.getItem('usertype') === 'Contractor'){  \n      if(props.iconButton === false){\n        return(<ButtonIcon2/>)\n      } \n      else{ \n        return(                     \n          <IconButton onClick={(e)=>handleSubmit(e)}>\n            <ButtonIcon/>\n          </IconButton>  \n        )\n      }\n    }\n    else{\n      return(\n      <div>\n          <BookmarkBorderIcon style={{cursor:\"pointer\", color:'grey'}} onClick={(event)=>handleOnClick(event)}/>\n          <SignIn setOpen={setOpen} open={open}/>\n          <SignUpPage setOpen={setOpen1} open={open1}/>\n      </div>\n      )\n    }\n}\n\nexport default BookmarkButton;"]},"metadata":{},"sourceType":"module"}