{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/PostingPage_Completed/body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from '../PostingPage/posting.module.css';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport api from '../api/api';\nimport Button from '@material-ui/core/Button';\nimport Popup from \"reactjs-popup\";\nimport Review from \"../Review\";\nimport ImageViewer from '../ImageViewer';\nimport SimpleMenu from './dropDown';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport swal from 'sweetalert';\nimport { Grid } from '@material-ui/core';\nimport ReviewCard from '../ProfileView/reviews';\nimport moment from 'moment';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\nconst CompleteButton = withStyles(theme => ({\n  root: {\n    borderRadius: 44,\n    backgroundColor: '#eeeeee',\n    border: '1px solid #2B64D2',\n    height: '50px',\n    fontSize: '15px',\n    fontWeight: '550',\n    width: '100%',\n    maxWidth: '413px',\n    minWidth: '200px',\n    '&:hover': {\n      backgroundColor: '#2B64D2',\n      color: 'white'\n    },\n    marginLeft: 0\n  }\n}))(Button);\nexport default function ActiveBody(props) {\n  _s();\n\n  const history = useHistory();\n\n  const handleOnClick = event => {\n    event.preventDefault();\n    history.goBack();\n  };\n\n  const [singleCompletedJob, setSingleCompletedJob] = useState({\n    downloadurl: [],\n    serviceTypeList: [],\n    languageList: []\n  });\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  var jobId = {};\n  jobId['id'] = props.id;\n\n  const getSingleCompletedJob = () => {\n    api.getSingleCompletedJob(jobId).then(res => {\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setSingleCompletedJob(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setOpen(true);\n    });\n  };\n\n  let jobTitle = singleCompletedJob.title;\n  let jobDetails = singleCompletedJob.jobDetails;\n  let locationDetail = singleCompletedJob.locationDetail;\n  let imagesList = singleCompletedJob.downloadurl;\n\n  const handleLink = event => {\n    event.preventDefault();\n\n    if (localStorage.getItem('usertype') === 'Contractor') {\n      history.push({\n        pathname: '/ClientProfile/' + singleCompletedJob.clientId.toString()\n      });\n    } else {\n      history.push({\n        pathname: '/profile/' + singleCompletedJob.contractorId.toString()\n      });\n    }\n\n    ;\n  };\n\n  let name = \"\";\n  let userID = \"\";\n\n  if (localStorage.getItem('usertype') == 'Contractor') {\n    name = singleCompletedJob.clientFirstName + \" \" + singleCompletedJob.clientLastName;\n    userID = singleCompletedJob.clientId;\n  } else {\n    name = singleCompletedJob.contractorFirstName + \" \" + singleCompletedJob.contractorLastName;\n    userID = singleCompletedJob.contractorId;\n  }\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    history.push({\n      pathname: '/invoice/' + props.id.toString()\n    });\n  };\n\n  const handleInvoice = event => {\n    event.preventDefault();\n    swal({\n      title: \"Downloaded!\",\n      text: \"Invoice successfully downloaded!\",\n      icon: \"success\",\n      button: \"OK\"\n    });\n    window.open(singleCompletedJob.invoices[-0], \"_blank\");\n  };\n\n  const ts = moment(singleCompletedJob.dateCompleted);\n  let timeVal;\n\n  if (moment().diff(ts, 'minutes') < 60) {\n    timeVal = String(moment().diff(ts, 'minutes')) + 'm';\n  } else if (moment().diff(ts, 'hours') < 24) {\n    timeVal = String(moment().diff(ts, 'hours')) + 'h';\n  } else if (moment().diff(ts, 'days') < 24) {\n    timeVal = String(moment().diff(ts, 'days')) + 'd';\n  } else {\n    timeVal = String(moment().diff(ts, 'weeks')) + 'w';\n  }\n\n  const renderTitle = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.headerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n      style: {\n        height: 25,\n        cursor: \"pointer\"\n      },\n      onClick: handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.header1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \" \", jobTitle, \" \"), /*#__PURE__*/React.createElement(SimpleMenu, {\n      id: props.id,\n      contractorId: userID,\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.name,\n      onClick: handleLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 52\n      }\n    }, \"\\u2022\"), \" \", locationDetail)), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"Completed \", timeVal, \" ago\")));\n  };\n\n  function Tags(props) {\n    if (!props.tagname) return null;\n    return /*#__PURE__*/React.createElement(\"box\", {\n      className: styles2.tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles2.tagfont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, props.tagname));\n  }\n\n  ;\n\n  const renderTags = () => {\n    let i = 0;\n    let services = singleCompletedJob.serviceTypeList;\n    let tagsCount = services.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: services[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 27\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  const renderLTags = () => {\n    let i = 0;\n    let lang = singleCompletedJob.languageList; // for(var j = 0 ; j < lang.length ; j++){\n    //     let temp= lang[j].toLowerCase()\n    //     lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n    // }\n\n    let tagsCount = lang.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: lang[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 27\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  }; //Code for Contractor review\n\n\n  const [contractorReview, setContractorReview] = useState([]);\n  var profileId = {};\n  profileId.id = singleCompletedJob.contractorId;\n\n  const getContractorReview = () => {\n    api.getContractorReview(profileId).then(res => {\n      console.log(\"Review loaded successfully\");\n      console.log(res);\n      setContractorReview(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getSingleCompletedJob();\n  }, []);\n  useEffect(() => {\n    getContractorReview();\n  }, [singleCompletedJob]);\n\n  const renderReviews = () => {\n    // let i = 0;\n    // let reviewsCount = contractorReview.length;\n    let tempJobs = [];\n    var i;\n\n    for (i in contractorReview) {\n      let review = contractorReview[i];\n\n      if (review.clientId === singleCompletedJob.clientId && review.contractorId === singleCompletedJob.contractorId && review.completedJobId.toString() === props.id) {\n        let title = review.clientFirstName + \" \" + review.clientLastName;\n        let reviewDate = review.reviewDate;\n        let reviewBody = review.reviewContent;\n        let avatar = review.downloadurl;\n        let reviewTitle = review.reviewTitle;\n        let reviewRating = review.reviewRating;\n        tempJobs.push( /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(ReviewCard, {\n          reviewRating: reviewRating,\n          reviewTitle: reviewTitle,\n          avatar: avatar,\n          clientId: review.clientId,\n          id: review.id,\n          title: title,\n          subheader: reviewDate,\n          body: reviewBody,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }\n        })));\n      }\n    }\n\n    return tempJobs;\n  };\n\n  let reviews = renderReviews();\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.posting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"box\", {\n    className: styles.postingbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, renderTitle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImageViewer, {\n    imagesList: imagesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.buttonsII,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, localStorage.getItem('usertype') === 'Client' && localStorage.getItem('client_id') === singleCompletedJob.clientId ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, reviews.length === 0 ? /*#__PURE__*/React.createElement(Popup, {\n    trigger: /*#__PURE__*/React.createElement(CompleteButton, {\n      className: styles.completeButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 33\n      }\n    }, \"Review Contractor\"),\n    modal: true,\n    contentStyle: contentStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 29\n    }\n  }, close => /*#__PURE__*/React.createElement(Review, {\n    close: close,\n    name: singleCompletedJob.contractorFirstName + \" \" + singleCompletedJob.contractorLastName,\n    jobId: singleCompletedJob.id,\n    contractorId: singleCompletedJob.contractorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(CompleteButton, {\n    className: styles.completeButton,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 30\n    }\n  }, \"\\u2714 Contractor Reviewed\"), singleCompletedJob.invoices.length === 0 ? null : /*#__PURE__*/React.createElement(CompleteButton, {\n    className: styles.completeButton,\n    onClick: handleInvoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 34\n    }\n  }, \"Download Invoice\")) : localStorage.getItem('usertype') === 'Contractor' && localStorage.getItem('contractor_id') === singleCompletedJob.contractorId ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(CompleteButton, {\n    className: styles.completeButton,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, \"Generate Invoice\"), singleCompletedJob.invoices.length === 0 ? null : /*#__PURE__*/React.createElement(CompleteButton, {\n    className: styles.completeButton,\n    onClick: handleInvoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 34\n    }\n  }, \"Download Invoice\")) : null), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.downloadAppText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }, \"Please download our app from here or browse from desktop to generate receipt or review contractors and for better experience.\"), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, \"About the job\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.about,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, jobDetails), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.skillsbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, \"Required Skills\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 25\n    }\n  }, renderTags()), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }, \"Required Languages\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, renderLTags()), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, \"Review\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 25\n    }\n  }, reviews.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n    className: styles.gridContainer,\n    container: true,\n    spacing: reviews.length > 0 ? 4 : 0,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, reviews) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 31\n    }\n  }, \"It seems like this job doesn't have any reviews\"))))), /*#__PURE__*/React.createElement(NotFound, {\n    setOpen: setOpen,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(ActiveBody, \"BBZ8N5ZKj79Ydikops9zkqop2xw=\", false, function () {\n  return [useHistory];\n});\n\n_c = ActiveBody;\nconst contentStyle = {\n  width: '1100px',\n  height: '850px',\n  background: '#FFFFFF',\n  borderRadius: '16px',\n  zIndex: '9999999'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveBody\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/PostingPage_Completed/body.js"],"names":["React","useEffect","useState","styles","ArrowBackIcon","useHistory","withStyles","api","Button","Popup","Review","ImageViewer","SimpleMenu","styles2","swal","Grid","ReviewCard","moment","NotFound","LoadingView","CompleteButton","theme","root","borderRadius","backgroundColor","border","height","fontSize","fontWeight","width","maxWidth","minWidth","color","marginLeft","ActiveBody","props","history","handleOnClick","event","preventDefault","goBack","singleCompletedJob","setSingleCompletedJob","downloadurl","serviceTypeList","languageList","open","setOpen","loading","setLoading","jobId","id","getSingleCompletedJob","then","res","console","log","data","catch","err","jobTitle","title","jobDetails","locationDetail","imagesList","handleLink","localStorage","getItem","push","pathname","clientId","toString","contractorId","name","userID","clientFirstName","clientLastName","contractorFirstName","contractorLastName","handleSubmit","handleInvoice","text","icon","button","window","invoices","ts","dateCompleted","timeVal","diff","String","renderTitle","headerDiv","cursor","header1","frame","location","Tags","tagname","tag","tagfont","renderTags","i","services","tagsCount","length","tempTags","renderLTags","lang","contractorReview","setContractorReview","profileId","getContractorReview","renderReviews","tempJobs","review","completedJobId","reviewDate","reviewBody","reviewContent","avatar","reviewTitle","reviewRating","reviews","posting","postingbox","row","paragraph","buttonsII","completeButton","contentStyle","close","downloadAppText","hr1","header2","about","hr2","skillsbox","servicetagbox","gridContainer","background","zIndex"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAASC,UAAT,QAA0B,0BAA1B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,MAAMC,cAAc,GAAGd,UAAU,CAAEe,KAAD,KAAY;AAC5CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAC,EADT;AAEJC,IAAAA,eAAe,EAAE,SAFb;AAGJC,IAAAA,MAAM,EAAE,mBAHJ;AAIJC,IAAAA,MAAM,EAAC,MAJH;AAKJC,IAAAA,QAAQ,EAAE,MALN;AAMJC,IAAAA,UAAU,EAAC,KANP;AAOJC,IAAAA,KAAK,EAAC,MAPF;AAQJC,IAAAA,QAAQ,EAAC,OARL;AASJC,IAAAA,QAAQ,EAAC,OATL;AAUJ,eAAW;AACTP,MAAAA,eAAe,EAAE,SADR;AAETQ,MAAAA,KAAK,EAAC;AAFG,KAVP;AAcJC,IAAAA,UAAU,EAAE;AAdR;AADsC,CAAZ,CAAD,CAAV,CAiBnBzB,MAjBmB,CAAvB;AAmBA,eAAe,SAAU0B,UAAV,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAMC,OAAO,GAAG/B,UAAU,EAA1B;;AACA,QAAMgC,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAACI,MAAR;AACH,GAHD;;AAIA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CxC,QAAQ,CAAC;AAACyC,IAAAA,WAAW,EAAC,EAAb;AAAgBC,IAAAA,eAAe,EAAC,EAAhC;AAAmCC,IAAAA,YAAY,EAAC;AAAhD,GAAD,CAA5D;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7C,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC8C,OAAD,EAAUC,UAAV,IAAwB/C,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAIgD,KAAK,GAAE,EAAX;AACAA,EAAAA,KAAK,CAAC,IAAD,CAAL,GAAcf,KAAK,CAACgB,EAApB;;AACA,QAAMC,qBAAqB,GAAG,MAAM;AAChC7C,IAAAA,GAAG,CAAC6C,qBAAJ,CAA0BF,KAA1B,EAAiCG,IAAjC,CAAsCC,GAAG,IAAI;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAZ,MAAAA,qBAAqB,CAACY,GAAG,CAACG,IAAL,CAArB;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALD,EAKGS,KALH,CAKSC,GAAG,IAAI;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAAkBV,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmBF,MAAAA,OAAO,CAAC,IAAD,CAAP;AAAc,KALpE;AAMC,GAPL;;AASA,MAAIa,QAAQ,GAAGnB,kBAAkB,CAACoB,KAAlC;AACA,MAAIC,UAAU,GAAGrB,kBAAkB,CAACqB,UAApC;AACA,MAAIC,cAAc,GAAGtB,kBAAkB,CAACsB,cAAxC;AACA,MAAIC,UAAU,GAAGvB,kBAAkB,CAACE,WAApC;;AACA,QAAMsB,UAAU,GAAI3B,KAAD,IAAU;AACzBA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI2B,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAAzC,EAAsD;AAClD/B,MAAAA,OAAO,CAACgC,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAE,oBAAoB5B,kBAAkB,CAAC6B,QAAnB,CAA4BC,QAA5B;AADrB,OAAb;AAGC,KAJL,MAKQ;AACJnC,MAAAA,OAAO,CAACgC,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAE,cAAc5B,kBAAkB,CAAC+B,YAAnB,CAAgCD,QAAhC;AADf,OAAb;AAEO;;AAAA;AACd,GAXD;;AAYA,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIC,MAAM,GAAC,EAAX;;AACA,MAAIR,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,YAAxC,EAAqD;AACjDM,IAAAA,IAAI,GAAGhC,kBAAkB,CAACkC,eAAnB,GAAqC,GAArC,GAA2ClC,kBAAkB,CAACmC,cAArE;AACAF,IAAAA,MAAM,GAACjC,kBAAkB,CAAC6B,QAA1B;AACC,GAHL,MAIQ;AACJG,IAAAA,IAAI,GAAGhC,kBAAkB,CAACoC,mBAAnB,GAAyC,GAAzC,GAA+CpC,kBAAkB,CAACqC,kBAAzE;AACAJ,IAAAA,MAAM,GAACjC,kBAAkB,CAAC+B,YAA1B;AACC;;AACL,QAAMO,YAAY,GAAIzC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAACgC,IAAR,CAAa;AACTC,MAAAA,QAAQ,EAAE,cAAclC,KAAK,CAACgB,EAAN,CAASoB,QAAT;AADf,KAAb;AAGH,GALD;;AAMA,QAAMS,aAAa,GAAI1C,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAzB,IAAAA,IAAI,CAAC;AACD+C,MAAAA,KAAK,EAAE,aADN;AAEDoB,MAAAA,IAAI,EAAE,kCAFL;AAGDC,MAAAA,IAAI,EAAE,SAHL;AAIDC,MAAAA,MAAM,EAAE;AAJP,KAAD,CAAJ;AAMAC,IAAAA,MAAM,CAACtC,IAAP,CAAYL,kBAAkB,CAAC4C,QAAnB,CAA4B,CAAC,CAA7B,CAAZ,EAA6C,QAA7C;AACH,GATD;;AAUA,QAAMC,EAAE,GAAGrE,MAAM,CAACwB,kBAAkB,CAAC8C,aAApB,CAAjB;AACA,MAAIC,OAAJ;;AACA,MAAIvE,MAAM,GAAGwE,IAAT,CAAcH,EAAd,EAAkB,SAAlB,IAA6B,EAAjC,EAAoC;AAChCE,IAAAA,OAAO,GAAGE,MAAM,CAACzE,MAAM,GAAGwE,IAAT,CAAcH,EAAd,EAAkB,SAAlB,CAAD,CAAN,GAAuC,GAAjD;AACH,GAFD,MAEM,IAAGrE,MAAM,GAAGwE,IAAT,CAAcH,EAAd,EAAkB,OAAlB,IAA2B,EAA9B,EAAiC;AACnCE,IAAAA,OAAO,GAAGE,MAAM,CAACzE,MAAM,GAAGwE,IAAT,CAAcH,EAAd,EAAkB,OAAlB,CAAD,CAAN,GAAqC,GAA/C;AACH,GAFK,MAEA,IAAGrE,MAAM,GAAGwE,IAAT,CAAcH,EAAd,EAAkB,MAAlB,IAA0B,EAA7B,EAAgC;AAClCE,IAAAA,OAAO,GAAGE,MAAM,CAACzE,MAAM,GAAGwE,IAAT,CAAcH,EAAd,EAAkB,MAAlB,CAAD,CAAN,GAAoC,GAA9C;AACH,GAFK,MAED;AACDE,IAAAA,OAAO,GAAGE,MAAM,CAACzE,MAAM,GAAGwE,IAAT,CAAcH,EAAd,EAAkB,OAAlB,CAAD,CAAN,GAAqC,GAA/C;AACH;;AACD,QAAMK,WAAW,GAAG,MAAM;AACtB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAExF,MAAM,CAACyF,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAgB,MAAA,KAAK,EAAE;AAAClE,QAAAA,MAAM,EAAC,EAAR;AAAYmE,QAAAA,MAAM,EAAC;AAAnB,OAAvB;AAAsD,MAAA,OAAO,EAAExD,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,SAAS,EAAElC,MAAM,CAAC2F,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiClC,QAAjC,MAFJ,eAGI,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAEzB,KAAK,CAACgB,EAAtB;AAA0B,MAAA,YAAY,EAAEuB,MAAxC;AAAgD,MAAA,IAAI,EAAED,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAMI;AAAK,MAAA,SAAS,EAAEtE,MAAM,CAAC4F,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE5F,MAAM,CAACsE,IAArB;AAA2B,MAAA,OAAO,EAAER,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDQ,IAAjD,CADJ,eAEI;AAAG,MAAA,SAAS,EAAEtE,MAAM,CAAC6F,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B,OAAqDjC,cAArD,CAFJ,CANJ,eAUI;AAAK,MAAA,SAAS,EAAE5D,MAAM,CAAC4F,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAE5F,MAAM,CAAC6F,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA0CR,OAA1C,SADJ,CAVJ,CADJ;AAgBC,GAjBL;;AAkBA,WAASS,IAAT,CAAc9D,KAAd,EAAqB;AACjB,QAAI,CAACA,KAAK,CAAC+D,OAAX,EAAoB,OAAO,IAAP;AACpB,wBACI;AAAK,MAAA,SAAS,EAAErF,OAAO,CAACsF,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAEtF,OAAO,CAACuF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCjE,KAAK,CAAC+D,OAAtC,CADJ,CADJ;AAKH;;AAAA;;AACD,QAAMG,UAAU,GAAG,MAAM;AACrB,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,QAAQ,GAAG9D,kBAAkB,CAACG,eAAlC;AACA,QAAI4D,SAAS,GAAGD,QAAQ,CAACE,MAAzB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,WAAOJ,CAAC,GAAGE,SAAX,EAAsB;AAClBE,MAAAA,QAAQ,CAACtC,IAAT,eAAc,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEvD,OAAO,CAACsF,GAAzB;AAA8B,QAAA,OAAO,EAAEI,QAAQ,CAACD,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACAA,MAAAA,CAAC,IAAI,CAAL;AACH;;AAAA;AACD,WAAOI,QAAP;AACH,GAVD;;AAWA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIL,CAAC,GAAG,CAAR;AACA,QAAIM,IAAI,GAAGnE,kBAAkB,CAACI,YAA9B,CAFsB,CAGtB;AACA;AACA;AACA;;AACA,QAAI2D,SAAS,GAAGI,IAAI,CAACH,MAArB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,WAAOJ,CAAC,GAAGE,SAAX,EAAsB;AAClBE,MAAAA,QAAQ,CAACtC,IAAT,eAAc,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEvD,OAAO,CAACsF,GAAzB;AAA8B,QAAA,OAAO,EAAES,IAAI,CAACN,CAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACAA,MAAAA,CAAC,IAAI,CAAL;AACH;;AAAA;AACD,WAAOI,QAAP;AACH,GAdD,CA9GuC,CA6HvC;;;AACA,QAAM,CAACG,gBAAD,EAAmBC,mBAAnB,IAA0C5G,QAAQ,CAAC,EAAD,CAAxD;AACA,MAAI6G,SAAS,GAAG,EAAhB;AACAA,EAAAA,SAAS,CAAC5D,EAAV,GAAeV,kBAAkB,CAAC+B,YAAlC;;AACA,QAAMwC,mBAAmB,GAAG,MAAM;AAC9BzG,IAAAA,GAAG,CAACyG,mBAAJ,CAAwBD,SAAxB,EAAmC1D,IAAnC,CAAwCC,GAAG,IAAI;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAwD,MAAAA,mBAAmB,CAACxD,GAAG,CAACG,IAAL,CAAnB;AACH,KAJD,EAIGC,KAJH,CAISC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAJhB;AAKH,GAND;;AAQA1D,EAAAA,SAAS,CAAC,MAAM;AACZgD,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,qBAAqB;AACxB,GAHQ,EAGP,EAHO,CAAT;AAIAnD,EAAAA,SAAS,CAAC,MAAM;AACZ+G,IAAAA,mBAAmB;AACtB,GAFQ,EAEP,CAACvE,kBAAD,CAFO,CAAT;;AAGA,QAAMwE,aAAa,GAAG,MAAM;AACxB;AACA;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIZ,CAAJ;;AACA,SAAKA,CAAL,IAAUO,gBAAV,EAA4B;AACxB,UAAIM,MAAM,GAAGN,gBAAgB,CAACP,CAAD,CAA7B;;AACA,UAAGa,MAAM,CAAC7C,QAAP,KAAoB7B,kBAAkB,CAAC6B,QAAvC,IAAmD6C,MAAM,CAAC3C,YAAP,KAAwB/B,kBAAkB,CAAC+B,YAA9F,IAA8G2C,MAAM,CAACC,cAAP,CAAsB7C,QAAtB,OAAqCpC,KAAK,CAACgB,EAA5J,EAA+J;AAC3J,YAAIU,KAAK,GAAGsD,MAAM,CAACxC,eAAP,GAAyB,GAAzB,GAA+BwC,MAAM,CAACvC,cAAlD;AACA,YAAIyC,UAAU,GAAGF,MAAM,CAACE,UAAxB;AACA,YAAIC,UAAU,GAAGH,MAAM,CAACI,aAAxB;AACA,YAAIC,MAAM,GAAGL,MAAM,CAACxE,WAApB;AACA,YAAI8E,WAAW,GAAGN,MAAM,CAACM,WAAzB;AACA,YAAIC,YAAY,GAAGP,MAAM,CAACO,YAA1B;AACAR,QAAAA,QAAQ,CAAC9C,IAAT,eACA,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAmB,UAAA,EAAE,EAAE,CAAvB;AAA0B,UAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,UAAD;AAAY,UAAA,YAAY,EAAEsD,YAA1B;AAAwC,UAAA,WAAW,EAAED,WAArD;AAAkE,UAAA,MAAM,EAAED,MAA1E;AAAkF,UAAA,QAAQ,EAAEL,MAAM,CAAC7C,QAAnG;AAA6G,UAAA,EAAE,EAAE6C,MAAM,CAAChE,EAAxH;AAA4H,UAAA,KAAK,EAAEU,KAAnI;AAA0I,UAAA,SAAS,EAAEwD,UAArJ;AAAiK,UAAA,IAAI,EAAEC,UAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADA;AAKH;AACJ;;AACD,WAAOJ,QAAP;AACH,GAtBD;;AAuBA,MAAIS,OAAO,GAAGV,aAAa,EAA3B;;AACA,MAAIjE,OAAJ,EAAa;AACT,wBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AACL,sBACI;AAAK,IAAA,SAAS,EAAE7C,MAAM,CAACyH,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEzH,MAAM,CAAC0H,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSlC,WAAW,EADpB,eAEI;AAAK,IAAA,SAAS,EAAExF,MAAM,CAAC2H,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAE9D,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAKI;AAAK,IAAA,SAAS,EAAE7D,MAAM,CAAC4H,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE5H,MAAM,CAAC6H,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK9D,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,QAArC,IAAiDD,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC1B,kBAAkB,CAAC6B,QAA1G,gBAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKqD,OAAO,CAAClB,MAAR,KAAmB,CAAnB,gBACD,oBAAC,KAAD;AAAO,IAAA,OAAO,eACV,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAEtG,MAAM,CAAC8H,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAKI,IAAA,KAAK,MALT;AAKU,IAAA,YAAY,EAAEC,YALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKC,KAAK,iBACF,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,KAAf;AACI,IAAA,IAAI,EAAE1F,kBAAkB,CAACoC,mBAAnB,GAAyC,GAAzC,GAA+CpC,kBAAkB,CAACqC,kBAD5E;AAEI,IAAA,KAAK,EAAErC,kBAAkB,CAACU,EAF9B;AAGI,IAAA,YAAY,EAAEV,kBAAkB,CAAC+B,YAHrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPR,CADC,gBAeA,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAErE,MAAM,CAAC8H,cAAlC;AAAkD,IAAA,QAAQ,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAhBL,EAoBKxF,kBAAkB,CAAC4C,QAAnB,CAA4BoB,MAA5B,KAAqC,CAArC,GAAwC,IAAxC,gBACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEtG,MAAM,CAAC8H,cAAlC;AAAkD,IAAA,OAAO,EAAEjD,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBT,CAFC,GA2BAd,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAArC,IAAqDD,YAAY,CAACC,OAAb,CAAqB,eAArB,MAA0C1B,kBAAkB,CAAC+B,YAAlH,gBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAErE,MAAM,CAAC8H,cAAlC;AAAkD,IAAA,OAAO,EAAElD,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADH,EAIItC,kBAAkB,CAAC4C,QAAnB,CAA4BoB,MAA5B,KAAqC,CAArC,GAAwC,IAAxC,gBACI,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEtG,MAAM,CAAC8H,cAAlC;AAAkD,IAAA,OAAO,EAAEjD,aAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALR,CADA,GAUA,IAtCL,CADJ,eA0CI;AAAG,IAAA,SAAS,EAAE7E,MAAM,CAACiI,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qIA1CJ,eA2CI;AAAI,IAAA,SAAS,EAAEjI,MAAM,CAACkI,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,eA4CI;AAAI,IAAA,SAAS,EAAElI,MAAM,CAACmI,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA5CJ,eA6CI;AAAG,IAAA,SAAS,EAAEnI,MAAM,CAACoI,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BzE,UAA7B,CA7CJ,eA8CI;AAAI,IAAA,SAAS,EAAE3D,MAAM,CAACqI,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9CJ,eA+CI;AAAK,IAAA,SAAS,EAAErI,MAAM,CAACsI,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEtI,MAAM,CAACmI,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,IAAA,SAAS,EAAEzH,OAAO,CAAC6H,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrC,UAAU,EADf,CAFJ,eAKI;AAAI,IAAA,SAAS,EAAElG,MAAM,CAACmI,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAK,IAAA,SAAS,EAAEzH,OAAO,CAAC6H,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/B,WAAW,EADhB,CANJ,eASI;AAAI,IAAA,SAAS,EAAExG,MAAM,CAACmI,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAK,IAAA,SAAS,EAAEzH,OAAO,CAAC6H,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCf,OAAO,CAAClB,MAAR,GAAe,CAAf,gBACG,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEtG,MAAM,CAACwI,aAAxB;AAAuC,IAAA,SAAS,MAAhD;AAAkD,IAAA,OAAO,EAAEhB,OAAO,CAAClB,MAAR,GAAe,CAAf,GAAiB,CAAjB,GAAmB,CAA9E;AAAiF,IAAA,OAAO,EAAE,QAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKkB,OADL,CADH,gBAIK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDALN,CAVJ,CA/CJ,CALJ,CADJ,eAyEI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE5E,OAAnB;AAA4B,IAAA,IAAI,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzEJ,CADJ;AA6EH;;GAxPwBZ,U;UACL7B,U;;;KADK6B,U;AA0PzB,MAAMgG,YAAY,GAAG;AACjBrG,EAAAA,KAAK,EAAE,QADU;AAEjBH,EAAAA,MAAM,EAAE,OAFS;AAGjBkH,EAAAA,UAAU,EAAE,SAHK;AAIjBrH,EAAAA,YAAY,EAAE,MAJG;AAKjBsH,EAAAA,MAAM,EAAC;AALU,CAArB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from '../PostingPage/posting.module.css'; \nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory} from 'react-router-dom';\nimport { withStyles} from '@material-ui/core/styles';\nimport api from '../api/api';\nimport Button from '@material-ui/core/Button';\nimport Popup from \"reactjs-popup\";\nimport Review from \"../Review\";\nimport ImageViewer from '../ImageViewer';\nimport SimpleMenu from './dropDown';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport swal from 'sweetalert';\nimport { Grid } from '@material-ui/core';\nimport ReviewCard from '../ProfileView/reviews';\nimport moment from 'moment';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst CompleteButton = withStyles((theme) => ({\n  root: {\n    borderRadius:44,\n    backgroundColor: '#eeeeee',\n    border: '1px solid #2B64D2',\n    height:'50px',\n    fontSize: '15px',\n    fontWeight:'550',\n    width:'100%',\n    maxWidth:'413px',\n    minWidth:'200px',\n    '&:hover': {\n      backgroundColor: '#2B64D2',\n      color:'white',\n    },\n    marginLeft: 0,\n  },\n}))(Button);\n\nexport default function  ActiveBody(props) {\n    const history = useHistory();\n    const handleOnClick = (event) => {\n        event.preventDefault();\n        history.goBack()\n    }\n    const [singleCompletedJob, setSingleCompletedJob] = useState({downloadurl:[],serviceTypeList:[],languageList:[]});\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    var jobId= {};\n    jobId['id'] = props.id;\n    const getSingleCompletedJob = () => {\n        api.getSingleCompletedJob(jobId).then(res => {\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setSingleCompletedJob(res.data);\n            setLoading(false); \n        }).catch(err => {console.log(err); setLoading(false); setOpen(true)})\n        }\n\n    let jobTitle = singleCompletedJob.title\n    let jobDetails = singleCompletedJob.jobDetails\n    let locationDetail = singleCompletedJob.locationDetail\n    let imagesList = singleCompletedJob.downloadurl\n    const handleLink = (event) =>{\n        event.preventDefault();\n        if (localStorage.getItem('usertype') === 'Contractor'){\n            history.push({\n                pathname: '/ClientProfile/' + singleCompletedJob.clientId.toString(),\n                });\n            }\n            else{\n            history.push({\n                pathname: '/profile/' + singleCompletedJob.contractorId.toString(),\n                })};\n    }\n    let name = \"\"\n    let userID=\"\"\n    if (localStorage.getItem('usertype') == 'Contractor'){\n        name = singleCompletedJob.clientFirstName + \" \" + singleCompletedJob.clientLastName\n        userID=singleCompletedJob.clientId\n        }\n        else{\n        name = singleCompletedJob.contractorFirstName + \" \" + singleCompletedJob.contractorLastName\n        userID=singleCompletedJob.contractorId\n        }\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        history.push({\n            pathname: '/invoice/' + props.id.toString(),\n        });\n    }\n    const handleInvoice = (event) => {\n        event.preventDefault();\n        swal({\n            title: \"Downloaded!\",\n            text: \"Invoice successfully downloaded!\",\n            icon: \"success\",\n            button: \"OK\",\n        });\n        window.open(singleCompletedJob.invoices[-0], \"_blank\");\n    }\n    const ts = moment(singleCompletedJob.dateCompleted);\n    let timeVal;\n    if (moment().diff(ts, 'minutes')<60){\n        timeVal = String(moment().diff(ts, 'minutes')) + 'm' \n    }else if(moment().diff(ts, 'hours')<24){\n        timeVal = String(moment().diff(ts, 'hours')) + 'h' \n    }else if(moment().diff(ts, 'days')<24){\n        timeVal = String(moment().diff(ts, 'days')) + 'd' \n    }else{\n        timeVal = String(moment().diff(ts, 'weeks')) + 'w' \n    }\n    const renderTitle = () => {\n        return(\n            <div>\n                <div className={styles.headerDiv}>\n                    <ArrowBackIcon  style={{height:25, cursor:\"pointer\"}} onClick={handleOnClick}/>\n                    <h1 className={styles.header1}> {jobTitle} </h1>\n                    <SimpleMenu id={props.id} contractorId={userID} name={name}/>\n                </div>\n                <box className={styles.frame}>\n                    <p className={styles.name} onClick={handleLink}>{name}</p>\n                    <p className={styles.location}><span>&#8226;</span> {locationDetail}</p>\n                </box> \n                <box className={styles.frame}>\n                    <p className={styles.location}>Completed {timeVal} ago</p>\n                </box>\n            </div>\n        )\n        };\n    function Tags(props) {\n        if (!props.tagname) return null;\n        return (\n            <box className={styles2.tag}>\n                <p className={styles2.tagfont}>{props.tagname}</p>\n            </box>\n        )\n    };\n    const renderTags = () => {\n        let i = 0;\n        let services = singleCompletedJob.serviceTypeList;\n        let tagsCount = services.length;\n        let tempTags = [];\n        while (i < tagsCount) {\n            tempTags.push(<Tags className={styles2.tag} tagname={services[i]} />);\n            i += 1;\n        };\n        return tempTags;\n    };\n    const renderLTags = () => {\n        let i = 0;\n        let lang = singleCompletedJob.languageList;\n        // for(var j = 0 ; j < lang.length ; j++){\n        //     let temp= lang[j].toLowerCase()\n        //     lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n        // }\n        let tagsCount = lang.length;\n        let tempTags = [];\n        while (i < tagsCount) {\n            tempTags.push(<Tags className={styles2.tag} tagname={lang[i]} />);\n            i += 1;\n        };\n        return tempTags;\n    };\n    //Code for Contractor review\n    const [contractorReview, setContractorReview] = useState([]);\n    var profileId = {};\n    profileId.id = singleCompletedJob.contractorId;\n    const getContractorReview = () => {\n        api.getContractorReview(profileId).then(res => {\n            console.log(\"Review loaded successfully\");\n            console.log(res);\n            setContractorReview(res.data);\n        }).catch(err => console.log(err));\n    };\n\n    useEffect(() => {\n        setLoading(true);\n        getSingleCompletedJob();\n    },[]);\n    useEffect(() => {\n        getContractorReview();\n    },[singleCompletedJob]);\n    const renderReviews = () => {\n        // let i = 0;\n        // let reviewsCount = contractorReview.length;\n        let tempJobs = [];\n        var i;\n        for (i in contractorReview) {\n            let review = contractorReview[i];\n            if(review.clientId === singleCompletedJob.clientId && review.contractorId === singleCompletedJob.contractorId && review.completedJobId.toString() === props.id){\n                let title = review.clientFirstName + \" \" + review.clientLastName\n                let reviewDate = review.reviewDate\n                let reviewBody = review.reviewContent\n                let avatar = review.downloadurl\n                let reviewTitle = review.reviewTitle\n                let reviewRating = review.reviewRating\n                tempJobs.push(\n                <Grid item xs={12} sm={6} md={4}  >\n                    <ReviewCard reviewRating={reviewRating} reviewTitle={reviewTitle} avatar={avatar} clientId={review.clientId} id={review.id} title={title} subheader={reviewDate} body={reviewBody} />\n                </Grid>\n                )\n            }\n        }\n        return tempJobs;\n    }; \n    let reviews = renderReviews();\n    if (loading) {\n        return <LoadingView/>;\n        }\n    return (   \n        <div className={styles.posting}>\n            <box className={styles.postingbox}>\n                    {renderTitle()}\n                <div className={styles.row}>\n                    <ImageViewer imagesList={imagesList}/>\n                </div>\n                <div className={styles.paragraph}>\n                    <div className={styles.buttonsII}>\n                        {localStorage.getItem('usertype') === 'Client' && localStorage.getItem('client_id') === singleCompletedJob.clientId\n                        ?\n                        <div>\n                            {reviews.length === 0?\n                            <Popup trigger={\n                                <CompleteButton className={styles.completeButton}> \n                                    Review Contractor\n                                </CompleteButton>\n                                } \n                                modal contentStyle={contentStyle}>\n                                {close => \n                                    <Review close={close} \n                                        name={singleCompletedJob.contractorFirstName + \" \" + singleCompletedJob.contractorLastName} \n                                        jobId={singleCompletedJob.id} \n                                        contractorId={singleCompletedJob.contractorId} \n                                    />\n                                }\n                            </Popup>\n                            :<CompleteButton className={styles.completeButton} disabled> \n                                &#10004; Contractor Reviewed\n                            </CompleteButton>\n                            }\n                            {singleCompletedJob.invoices.length===0 ?null\n                                :<CompleteButton className={styles.completeButton} onClick={handleInvoice}> \n                                    Download Invoice\n                                </CompleteButton>}\n                        </div>\n                        :localStorage.getItem('usertype') === 'Contractor' && localStorage.getItem('contractor_id') === singleCompletedJob.contractorId\n                        ?<div>\n                            <CompleteButton className={styles.completeButton} onClick={handleSubmit}> \n                                Generate Invoice\n                            </CompleteButton>  \n                            {singleCompletedJob.invoices.length===0 ?null\n                                :<CompleteButton className={styles.completeButton} onClick={handleInvoice}> \n                                    Download Invoice\n                            </CompleteButton>}\n                        </div>\n                        :null\n                        }\n                    </div>\n                    <p className={styles.downloadAppText}>Please download our app from here or browse from desktop to generate receipt or review contractors and for better experience.</p>\n                    <hr className={styles.hr1}/>  \n                    <h2 className={styles.header2}>About the job</h2>\n                    <p className={styles.about}>{jobDetails}</p>\n                    <hr className={styles.hr2}/>\n                    <div className={styles.skillsbox}>\n                        <h1 className={styles.header2}>Required Skills</h1>\n                        <box className={styles2.servicetagbox}>\n                            {renderTags()}\n                        </box>        \n                        <h1 className={styles.header2}>Required Languages</h1>\n                        <box className={styles2.servicetagbox}>\n                            {renderLTags()}\n                        </box> \n                        <h1 className={styles.header2}>Review</h1>\n                        <box className={styles2.servicetagbox}>\n                        {reviews.length>0?\n                            <Grid className={styles.gridContainer} container  spacing={reviews.length>0?4:0} justify={\"center\"}>\n                                {reviews}\n                            </Grid>\n                            : <p>It seems like this job doesn't have any reviews</p>}\n                        </box> \n                    </div>\n                </div>\n            </box>\n            <NotFound setOpen={setOpen} open={open}/>\n        </div>\n    );\n}\n\nconst contentStyle = {\n    width: '1100px',\n    height: '850px',\n    background: '#FFFFFF',\n    borderRadius: '16px',\n    zIndex:'9999999'\n};"]},"metadata":{},"sourceType":"module"}