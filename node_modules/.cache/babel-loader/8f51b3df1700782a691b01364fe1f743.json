{"ast":null,"code":"import _classCallCheck from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Formik}from'formik';import{object,ref,string}from'yup';import Input from'@material-ui/core/Input';import InputLabel from'@material-ui/core/InputLabel';import FormControl from'@material-ui/core/FormControl';import FormHelperText from'@material-ui/core/FormHelperText';import Button from'@material-ui/core/Button';import Paper from'@material-ui/core/Paper';import styles from'./profile.module.css';// import Spinner from './Spinner';\n// import Alert from './Alert';\nimport CloseOutlinedIcon from'@material-ui/icons/CloseOutlined';import swal from'sweetalert';import Firebase from'../Firebase/firebase';var FormPasswordReset=/*#__PURE__*/function(_Component){_inherits(FormPasswordReset,_Component);var _super=_createSuper(FormPasswordReset);function FormPasswordReset(_props){var _this;_classCallCheck(this,FormPasswordReset);_this=_super.call(this,_props);_this.state={passChangeSuccess:false,data:{}};_this._handleModalClose=function(){_this.setState(function(){return{passChangeSuccess:false};});};_this._handleSubmit=function(_ref){var currentPass=_ref.currentPass,newPass=_ref.newPass,confirmPass=_ref.confirmPass,setSubmitting=_ref.setSubmitting,resetForm=_ref.resetForm;var data={};data.oldpassword=currentPass;data.password=newPass;var user=Firebase.auth.currentUser;var credential=Firebase.emailProvider.credential(user.email,currentPass);var props=_this.props;// Prompt the user to re-provide their sign-in credentials\nuser.reauthenticateWithCredential(credential).then(function(){// User re-authenticated.\nFirebase.auth.currentUser.updatePassword(newPass).then(function(){// Update successful.\nswal({title:\"Updated!\",text:\"Password has been successfully updated!\",icon:\"success\",button:\"OK\"});props.close();}).catch(function(error){console.log(\"Error has happened while updating password\");swal({title:\"Password Error!\",text:error.message,icon:\"error\",button:\"Try Again\"});// An error happened.\n});}).catch(function(error){console.log(\"Error has happened while reauthenticating\");swal({title:\"Current Password Incorrect!\",text:\"Password error! That is not the right password you have right now!\",icon:\"error\",button:\"Try Again\"});// An error happened.\n});// Firebase.auth.currentUser.reauthenticateAndRetrieveDataWithCredential(\n//   firebase.auth.EmailAuthProvider.credential(\n//     firebase.auth().currentUser.email, \n//     providedPassword\n//   )\n// );\n// api.changePassword(data).then(res => {\n//   console.log(res);\n//   swal({\n//     title: \"Updated!\",\n//     text: \"Password has been successfully updated!\",\n//     icon: \"success\",\n//     button: \"OK\",\n//   });\n//   this.props.close()\n// }).catch(err => console.log(err))\n};console.log(_this.props);_this._handleSubmit=_this._handleSubmit.bind(_assertThisInitialized(_this));return _this;}_createClass(FormPasswordReset,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Formik,{initialValues:{currentPass:'',newPass:'',confirmPass:''},validationSchema:object().shape({currentPass:string().required('Current password is required'),newPass:string().required('New password is required'),confirmPass:string().oneOf([ref('newPass')],'Passwords do not match').required('Password is required')}),onSubmit:function onSubmit(_ref2,_ref3){var currentPass=_ref2.currentPass,newPass=_ref2.newPass,confirmPass=_ref2.confirmPass;var setSubmitting=_ref3.setSubmitting,resetForm=_ref3.resetForm;return _this2._handleSubmit({currentPass:currentPass,newPass:newPass,confirmPass:confirmPass,setSubmitting:setSubmitting,resetForm:resetForm});},render:function render(props){var values=props.values,touched=props.touched,errors=props.errors,handleChange=props.handleChange,handleBlur=props.handleBlur,handleSubmit=props.handleSubmit,isValid=props.isValid,isSubmitting=props.isSubmitting;return/*#__PURE__*/React.createElement(Paper,{className:styles.passwordForm2,elevation:10},/*#__PURE__*/React.createElement(\"form\",{className:styles.passwordForm,onSubmit:handleSubmit},/*#__PURE__*/React.createElement(CloseOutlinedIcon,{style:{height:40,width:40},className:styles.cross,onClick:_this2.props.close}),/*#__PURE__*/React.createElement(\"h3\",null,\"Change password!\"),/*#__PURE__*/React.createElement(FormControl,{fullWidth:true,margin:\"dense\"},/*#__PURE__*/React.createElement(InputLabel,{htmlFor:\"password-current\",error:Boolean(touched.currentPass&&errors.currentPass)},'Current Password'),/*#__PURE__*/React.createElement(Input,{id:\"password-current\",name:\"currentPass\",type:\"password\",value:values.currentPass,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.currentPass&&errors.currentPass)}),/*#__PURE__*/React.createElement(FormHelperText,{error:Boolean(touched.currentPass&&errors.currentPass)},touched.currentPass&&errors.currentPass?errors.currentPass:'')),/*#__PURE__*/React.createElement(FormControl,{fullWidth:true,margin:\"dense\",error:Boolean(touched.newPass&&errors.newPass)},/*#__PURE__*/React.createElement(InputLabel,{htmlFor:\"password-new\",error:Boolean(touched.newPass&&errors.newPass)},'New Password'),/*#__PURE__*/React.createElement(Input,{id:\"password-new\",name:\"newPass\",type:\"password\",value:values.newPass,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.newPass&&errors.newPass)}),/*#__PURE__*/React.createElement(FormHelperText,{error:Boolean(touched.newPass&&errors.newPass)},touched.newPass&&errors.newPass?errors.newPass:'')),/*#__PURE__*/React.createElement(FormControl,{fullWidth:true,margin:\"dense\",error:Boolean(touched.confirmPass&&errors.confirmPass)},/*#__PURE__*/React.createElement(InputLabel,{htmlFor:\"password-confirm\",error:Boolean(touched.confirmPass&&errors.confirmPass)},'Confirm Password'),/*#__PURE__*/React.createElement(Input,{id:\"password-confirm\",name:\"confirmPass\",type:\"password\",value:values.confirmPass,onChange:handleChange,onBlur:handleBlur,error:Boolean(touched.confirmPass&&errors.confirmPass)}),/*#__PURE__*/React.createElement(FormHelperText,{error:Boolean(touched.confirmPass&&errors.confirmPass)},touched.confirmPass&&errors.confirmPass?errors.confirmPass:'')),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"outlined\",color:\"primary\",disabled:Boolean(!isValid||isSubmitting),style:{margin:'16px'}},'Reset Password')));}});}}]);return FormPasswordReset;}(Component);export{FormPasswordReset as default};","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/MyProfile/passwordForm.js"],"names":["React","Component","Formik","object","ref","string","Input","InputLabel","FormControl","FormHelperText","Button","Paper","styles","CloseOutlinedIcon","swal","Firebase","FormPasswordReset","props","state","passChangeSuccess","data","_handleModalClose","setState","_handleSubmit","currentPass","newPass","confirmPass","setSubmitting","resetForm","oldpassword","password","user","auth","currentUser","credential","emailProvider","email","reauthenticateWithCredential","then","updatePassword","title","text","icon","button","close","catch","error","console","log","message","bind","shape","required","oneOf","values","touched","errors","handleChange","handleBlur","handleSubmit","isValid","isSubmitting","passwordForm2","passwordForm","height","width","cross","Boolean","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport { object, ref, string } from 'yup';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './profile.module.css';\n// import Spinner from './Spinner';\n// import Alert from './Alert';\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\nimport swal from 'sweetalert';\nimport Firebase from '../Firebase/firebase';\n\nexport default class FormPasswordReset extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n\n    this._handleSubmit = this._handleSubmit.bind(this)\n  }\n  state = {\n    passChangeSuccess: false,\n    data:{}\n  }\n  _handleModalClose = () => {\n    this.setState(() => ({\n      passChangeSuccess: false,\n    }))\n  }\n  // _renderModal = () => {\n  //   const onClick = () => {\n  //     this.setState(() => ({ passChangeSuccess: false }))\n  //   }\n  //   return (\n  //     <Alert\n  //       isOpen={this.state.passChangeSuccess}\n  //       onClose={this.props.close}\n  //       handleSubmit={onClick}\n  //       title=\"Password Reset\"\n  //       text=\"Your password was changed successfully\"\n  //       submitButtonText=\"Done\"\n  //     />\n  //   )\n  // }\n  _handleSubmit = ({\n    currentPass,\n    newPass,\n    confirmPass,\n    setSubmitting,\n    resetForm,\n  }) => {\n    let data={}\n    data.oldpassword=currentPass;\n    data.password= newPass;\n    var user = Firebase.auth.currentUser;\n    var credential = Firebase.emailProvider.credential(\n      user.email,\n      currentPass\n    );\n\n    const props = this.props;\n    // Prompt the user to re-provide their sign-in credentials\n    user.reauthenticateWithCredential(credential).then(function() {\n      // User re-authenticated.\n      Firebase.auth.currentUser.updatePassword(newPass).then(function() {\n        // Update successful.\n        swal({\n          title: \"Updated!\",\n          text: \"Password has been successfully updated!\",\n          icon: \"success\",\n          button: \"OK\",\n        });\n        props.close()\n      }).catch(function(error) {\n        console.log(\"Error has happened while updating password\");\n        swal({\n          title: \"Password Error!\",\n          text: error.message,\n          icon: \"error\",\n          button: \"Try Again\",\n        });\n        // An error happened.\n      });\n    }).catch(function(error) {\n      console.log(\"Error has happened while reauthenticating\");\n      swal({\n        title: \"Current Password Incorrect!\",\n        text: \"Password error! That is not the right password you have right now!\",\n        icon: \"error\",\n        button: \"Try Again\",\n      });\n      // An error happened.\n    });\n\n    // Firebase.auth.currentUser.reauthenticateAndRetrieveDataWithCredential(\n    //   firebase.auth.EmailAuthProvider.credential(\n    //     firebase.auth().currentUser.email, \n    //     providedPassword\n    //   )\n    // );\n   \n    // api.changePassword(data).then(res => {\n    //   console.log(res);\n    //   swal({\n    //     title: \"Updated!\",\n    //     text: \"Password has been successfully updated!\",\n    //     icon: \"success\",\n    //     button: \"OK\",\n    //   });\n    //   this.props.close()\n    // }).catch(err => console.log(err))\n  }\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          currentPass: '',\n          newPass: '',\n          confirmPass: '',\n        }}\n        validationSchema={object().shape({\n          currentPass: string().required('Current password is required'),\n          newPass: string().required('New password is required'),\n          confirmPass: string()\n            .oneOf([ref('newPass')], 'Passwords do not match')\n            .required('Password is required'),\n        })}\n        onSubmit={(\n          { currentPass, newPass, confirmPass },\n          { setSubmitting, resetForm }\n        ) =>\n          this._handleSubmit({\n            currentPass,\n            newPass,\n            confirmPass,\n            setSubmitting,\n            resetForm,\n          })\n        }\n        render={props => {\n          const {\n            values,\n            touched,\n            errors,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isValid,\n            isSubmitting,\n          } = props\n          return (\n            <Paper className={styles.passwordForm2} elevation={10}>\n              <form className={styles.passwordForm} onSubmit={handleSubmit}>\n                <CloseOutlinedIcon style={{ height: 40, width: 40 }} className={styles.cross} onClick={this.props.close}/>\n                <h3>Change password!</h3>\n                <FormControl fullWidth margin=\"dense\">\n                  <InputLabel\n                    htmlFor=\"password-current\"\n                    error={Boolean(touched.currentPass && errors.currentPass)}\n                  >\n                    {'Current Password'}\n                  </InputLabel>\n                  <Input\n                    id=\"password-current\"\n                    name=\"currentPass\"\n                    type=\"password\"\n                    value={values.currentPass}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.currentPass && errors.currentPass)}\n                  />\n                  <FormHelperText\n                    error={Boolean(touched.currentPass && errors.currentPass)}\n                  >\n                    {touched.currentPass && errors.currentPass\n                      ? errors.currentPass\n                      : ''}\n                  </FormHelperText>\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  margin=\"dense\"\n                  error={Boolean(touched.newPass && errors.newPass)}\n                >\n                  <InputLabel\n                    htmlFor=\"password-new\"\n                    error={Boolean(touched.newPass && errors.newPass)}\n                  >\n                    {'New Password'}\n                  </InputLabel>\n                  <Input\n                    id=\"password-new\"\n                    name=\"newPass\"\n                    type=\"password\"\n                    value={values.newPass}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.newPass && errors.newPass)}\n                  />\n                  <FormHelperText\n                    error={Boolean(touched.newPass && errors.newPass)}\n                  >\n                    {touched.newPass && errors.newPass ? errors.newPass : ''}\n                  </FormHelperText>\n                </FormControl>\n                <FormControl\n                  fullWidth\n                  margin=\"dense\"\n                  error={Boolean(touched.confirmPass && errors.confirmPass)}\n                >\n                  <InputLabel\n                    htmlFor=\"password-confirm\"\n                    error={Boolean(touched.confirmPass && errors.confirmPass)}\n                  >\n                    {'Confirm Password'}\n                  </InputLabel>\n                  <Input\n                    id=\"password-confirm\"\n                    name=\"confirmPass\"\n                    type=\"password\"\n                    value={values.confirmPass}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    error={Boolean(touched.confirmPass && errors.confirmPass)}\n                  />\n                  <FormHelperText\n                    error={Boolean(touched.confirmPass && errors.confirmPass)}\n                  >\n                    {touched.confirmPass && errors.confirmPass\n                      ? errors.confirmPass\n                      : ''}\n                  </FormHelperText>\n                </FormControl>\n                <Button\n                  type=\"submit\"\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  disabled={Boolean(!isValid || isSubmitting)}\n                  style={{ margin: '16px' }}\n                >\n                  {'Reset Password'}\n                </Button>\n              </form>\n              {/* {this._renderModal()} */}\n            </Paper>\n          )\n        }}\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}