{"ast":null,"code":"import _slicedToArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import styles from'./styles.module.css';import JobPosting from'../ContractorActiveJobsPage/jobposting';import api from'../api/api';import{Grid}from'@material-ui/core';import LoadingView from'../ResuableComponents/loadingView';var Active=function Active(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),activeJobs=_useState2[0],setActiveJobs=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var getActiveJobs=function getActiveJobs(){api.getActiveJobs().then(function(res){console.log(\"Job loaded successfully\");console.log(res);setActiveJobs(res.data);//change [] with .get\nsetLoading(false);}).catch(function(err){return console.log(err);});};useEffect(function(){setLoading(true);getActiveJobs();},[]);var renderActiveJobs=function renderActiveJobs(){var i=0;var activeJobCount=activeJobs.length;if(activeJobCount===0){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"It seems you don't have any Active Jobs.\"));}else{var tempJobs=[];while(i<activeJobCount){var activeJob=activeJobs[i];var jobTitle=activeJob.title;var jobId=activeJob.id;var contractorName=activeJob.contractorFirstName;var location=activeJob.locationDetail;var serviceTypeList=activeJob.serviceTypeList;var avatar=activeJob.downloadurl[0];var userId=activeJob.contractorId;tempJobs.push(/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(JobPosting,{userId:userId,avatar:avatar,complete:0,id:jobId,title:jobTitle,name:contractorName,location:location,serviceList:serviceTypeList})));//   // Proceed to the next message.\ni+=1;}return tempJobs;}};return/*#__PURE__*/React.createElement(\"div\",{className:styles.gridContainer},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,justify:\"left\"},loading?/*#__PURE__*/React.createElement(LoadingView,null):renderActiveJobs()));};export default Active;export{Active};","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/HomeOwnerActiveJobsPage/active.js"],"names":["React","useEffect","useState","styles","JobPosting","api","Grid","LoadingView","Active","activeJobs","setActiveJobs","loading","setLoading","getActiveJobs","then","res","console","log","data","catch","err","renderActiveJobs","i","activeJobCount","length","tempJobs","activeJob","jobTitle","title","jobId","id","contractorName","contractorFirstName","location","locationDetail","serviceTypeList","avatar","downloadurl","userId","contractorId","push","gridContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport styles from './styles.module.css';  \nimport JobPosting from '../ContractorActiveJobsPage/jobposting';\nimport api from '../api/api';\nimport { Grid } from '@material-ui/core';\nimport LoadingView from '../ResuableComponents/loadingView';\n\n\nconst Active = () => {\n    const [activeJobs, setActiveJobs] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const getActiveJobs = () => {\n        api.getActiveJobs().then(res => {\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setActiveJobs(res.data); //change [] with .get\n            setLoading(false);\n        }).catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n      setLoading(true);\n        getActiveJobs();\n      },[]);\n    const renderActiveJobs = () => {\n        let i = 0;\n        let activeJobCount = activeJobs.length;\n        if (activeJobCount===0){\n          return(\n            <div>\n              <p>It seems you don't have any Active Jobs.</p>\n            </div>\n          )\n        }\n        else{\n        let tempJobs = [];\n        while (i < activeJobCount) {\n          let activeJob = activeJobs[i]\n          let jobTitle = activeJob.title\n          let jobId = activeJob.id\n          let contractorName = activeJob.contractorFirstName\n          let location = activeJob.locationDetail\n          var serviceTypeList = activeJob.serviceTypeList;\n          let avatar = activeJob.downloadurl[0]\n          let userId = activeJob.contractorId\n          tempJobs.push(\n            <Grid item>\n              <JobPosting userId={userId} avatar={avatar} complete= {0} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={serviceTypeList}/>\n            </Grid>\n          );\n    \n        //   // Proceed to the next message.\n          i += 1;\n        }\n        return tempJobs;}\n      };\n    return(\n      <div className={styles.gridContainer}>\n        <Grid container spacing={2} justify=\"left\">\n            {loading?<LoadingView/>:renderActiveJobs()}\n        </Grid>\n      </div>\n    )\n\n};\n\n\nexport default Active;\nexport {Active};\n"]},"metadata":{},"sourceType":"module"}