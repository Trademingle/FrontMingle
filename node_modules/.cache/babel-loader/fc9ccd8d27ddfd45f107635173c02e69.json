{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ProfileView/profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport api from '../api/api';\nimport styles from '../MyProfile/profile.module.css';\nimport StarIcon from '@material-ui/icons/Star';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport swal from 'sweetalert';\nimport MessageButton from '../ResuableComponents/messageButton';\nimport { useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160,\n    maxWidth: 160\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  buttonForm: {\n    position: 'absolute',\n    margin: '20px 180px',\n    cursor: 'pointer',\n    borderRadius: '2px',\n    border: '1px solid #2b64d2',\n    '&:hover': {\n      background: \"#2b64d2\",\n      color: 'white'\n    }\n  }\n}));\n\nfunction ProfileFormat(props) {\n  _s();\n\n  const history = useHistory();\n\n  const handleOnClick = event => {\n    event.preventDefault();\n    history.goBack();\n  };\n\n  const classes = useStyles();\n  const [jobsId, setjobsId] = React.useState(''); //for the assign form\n\n  const handleChange = event => {\n    setjobsId(event.target.value);\n  };\n\n  console.log(jobsId); //sending job id to backend\n\n  var data = {};\n\n  const handleOnSubmit = event => {\n    data.contractorId = props.id;\n    data.id = jobsId;\n    api.assignUnassignedJobs(data).then(res => {\n      swal({\n        title: \"Assigned!\",\n        text: \"Job has been assigned, please wait for contractor to accept!\",\n        icon: \"success\",\n        button: \"OK\"\n      });\n    }).catch(err => console.log(err));\n  }; //getting the unassigned jobs list\n\n\n  let userId = [];\n  const [unassignedJobs, setAllUnassignedJobs] = useState({});\n\n  const getAllUnassignedJobs = () => {\n    api.getAllUnassignedJobs(userId).then(res => {\n      console.log(res);\n      setAllUnassignedJobs(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getAllUnassignedJobs();\n  }, []);\n\n  const renderUnassignedJobs = () => {\n    let i = 0;\n    let unassignedJobCount = unassignedJobs.length;\n    let tempJobs = [];\n\n    while (i < unassignedJobCount) {\n      let unassignedJob = unassignedJobs[i];\n      let jobTitle = unassignedJob.title;\n      let jobId = unassignedJob.id;\n      tempJobs.push( /*#__PURE__*/React.createElement(MenuItem, {\n        value: jobId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, jobTitle));\n      i += 1;\n    }\n\n    return tempJobs;\n  }; //\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n    style: {\n      height: 25,\n      width: 50,\n      cursor: \"pointer\"\n    },\n    onClick: handleOnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 43\n    }\n  }), props.name), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 180\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.avatar,\n    className: styles.circle,\n    style: {\n      height: 100,\n      width: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.jobsdone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, props.jobsdone), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StarIcon, {\n    className: styles.Vector,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 46\n    }\n  }), props.rating), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.jobsdone2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Jobs done\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.rating2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, \"Rating\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 80\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, localStorage.getItem('usertype') === 'Client' && localStorage.getItem('access-token') ? /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"inputLabel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Select Job\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"selectLabel\",\n    id: \"assignForm\",\n    value: jobsId,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, \"None\")), renderUnassignedJobs()), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Assign Job to this Contractor\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleOnSubmit,\n    className: classes.buttonForm,\n    style: {\n      height: 30,\n      width: 120\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Assign\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MessageButton, {\n    name: props.name,\n    contractorId: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 45\n    }\n  })));\n}\n\n_s(ProfileFormat, \"z8enhgW2rPGK9EPb7K/t1FRuiwo=\", false, function () {\n  return [useHistory, useStyles];\n});\n\n_c = ProfileFormat;\n; // function AssignForm() {\n//     return(\n//     )\n// }\n// console.log(AssignForm)\n\nexport default ProfileFormat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileFormat\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ProfileView/profile.js"],"names":["React","useEffect","useState","api","styles","StarIcon","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","swal","MessageButton","useHistory","ArrowBackIcon","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","selectEmpty","marginTop","buttonForm","position","cursor","borderRadius","border","background","color","ProfileFormat","props","history","handleOnClick","event","preventDefault","goBack","classes","jobsId","setjobsId","handleChange","target","value","console","log","data","handleOnSubmit","contractorId","id","assignUnassignedJobs","then","res","title","text","icon","button","catch","err","userId","unassignedJobs","setAllUnassignedJobs","getAllUnassignedJobs","renderUnassignedJobs","i","unassignedJobCount","length","tempJobs","unassignedJob","jobTitle","jobId","push","header","height","width","name","avatar","circle","jobsdone","rating","Vector","jobsdone2","rating2","localStorage","getItem","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AAEA,MAAMC,SAAS,GAAGV,UAAU,CAAEW,KAAD,KAAY;AACrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADG;AAEXC,IAAAA,QAAQ,EAAE,GAFC;AAGXC,IAAAA,QAAQ,EAAC;AAHE,GADwB;AAMrCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,SAAS,EAAEP,KAAK,CAACG,OAAN,CAAc,CAAd;AADA,GANwB;AASrCK,EAAAA,UAAU,EAAC;AACPC,IAAAA,QAAQ,EAAC,UADF;AAEPP,IAAAA,MAAM,EAAE,YAFD;AAGPQ,IAAAA,MAAM,EAAC,SAHA;AAIPC,IAAAA,YAAY,EAAC,KAJN;AAKPC,IAAAA,MAAM,EAAE,mBALD;AAMP,eAAW;AACPC,MAAAA,UAAU,EAAE,SADL;AAEPC,MAAAA,KAAK,EAAE;AAFA;AANJ;AAT0B,CAAZ,CAAD,CAA5B;;AAsBA,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC3B,QAAMC,OAAO,GAAGpB,UAAU,EAA1B;;AACA,QAAMqB,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAACI,MAAR;AACH,GAHD;;AAIA,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AACA,QAAM,CAACwB,MAAD,EAASC,SAAT,IAAsBzC,KAAK,CAACE,QAAN,CAAe,EAAf,CAA5B,CAP2B,CAQ3B;;AACA,QAAMwC,YAAY,GAAIN,KAAD,IAAW;AAC5BK,IAAAA,SAAS,CAACL,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAT;AACH,GAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ,EAZ2B,CAa3B;;AACA,MAAIO,IAAI,GAAC,EAAT;;AACA,QAAMC,cAAc,GAAIZ,KAAD,IAAU;AAC7BW,IAAAA,IAAI,CAACE,YAAL,GAAmBhB,KAAK,CAACiB,EAAzB;AACAH,IAAAA,IAAI,CAACG,EAAL,GAASV,MAAT;AACArC,IAAAA,GAAG,CAACgD,oBAAJ,CAAyBJ,IAAzB,EAA+BK,IAA/B,CAAoCC,GAAG,IAAI;AACvCzC,MAAAA,IAAI,CAAC;AACD0C,QAAAA,KAAK,EAAE,WADN;AAEDC,QAAAA,IAAI,EAAE,8DAFL;AAGDC,QAAAA,IAAI,EAAE,SAHL;AAIDC,QAAAA,MAAM,EAAE;AAJP,OAAD,CAAJ;AAMH,KAPD,EAOGC,KAPH,CAOSC,GAAG,IAAId,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAPhB;AAQH,GAXD,CAf2B,CA4B3B;;;AACA,MAAIC,MAAM,GAAC,EAAX;AACA,QAAM,CAACC,cAAD,EAAiBC,oBAAjB,IAAyC5D,QAAQ,CAAC,EAAD,CAAvD;;AACA,QAAM6D,oBAAoB,GAAG,MAAM;AAC/B5D,IAAAA,GAAG,CAAC4D,oBAAJ,CAAyBH,MAAzB,EAAiCR,IAAjC,CAAsCC,GAAG,IAAI;AACzCR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAS,MAAAA,oBAAoB,CAACT,GAAG,CAACN,IAAL,CAApB;AACH,KAHD,EAGGW,KAHH,CAGSC,GAAG,IAAId,OAAO,CAACC,GAAR,CAAYa,GAAZ,CAHhB;AAIH,GALD;;AAMA1D,EAAAA,SAAS,CAAC,MAAM;AACZ8D,IAAAA,oBAAoB;AACvB,GAFQ,EAEP,EAFO,CAAT;;AAGA,QAAMC,oBAAoB,GAAG,MAAM;AAC/B,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,kBAAkB,GAAGL,cAAc,CAACM,MAAxC;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,WAAOH,CAAC,GAAGC,kBAAX,EAA+B;AAC3B,UAAIG,aAAa,GAAGR,cAAc,CAACI,CAAD,CAAlC;AACA,UAAIK,QAAQ,GAAGD,aAAa,CAACf,KAA7B;AACA,UAAIiB,KAAK,GAAGF,aAAa,CAACnB,EAA1B;AACAkB,MAAAA,QAAQ,CAACI,IAAT,eACI,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBD,QAAzB,CADJ;AAIAL,MAAAA,CAAC,IAAI,CAAL;AACH;;AACD,WAAOG,QAAP;AACH,GAfD,CAxC2B,CAwD3B;;;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEhE,MAAM,CAACqE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8B,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,EAAR;AAAYC,MAAAA,KAAK,EAAC,EAAlB;AAAsBhD,MAAAA,MAAM,EAAC;AAA7B,KAAtB;AAA+D,IAAA,OAAO,EAAEQ,aAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,EAAuHF,KAAK,CAAC2C,IAA7H,CADJ,eAEI;AAAK,IAAA,KAAK,EAAE;AAACF,MAAAA,MAAM,EAAC;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,GAAG,EAAEzC,KAAK,CAAC4C,MAAhB;AAAwB,IAAA,SAAS,EAAEzE,MAAM,CAAC0E,MAA1C;AAAkD,IAAA,KAAK,EAAE;AAACJ,MAAAA,MAAM,EAAC,GAAR;AAAYC,MAAAA,KAAK,EAAC;AAAlB,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,SAAS,EAAEvE,MAAM,CAAC2E,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC9C,KAAK,CAAC8C,QAAtC,CAFJ,eAGI;AAAG,IAAA,SAAS,EAAE3E,MAAM,CAAC4E,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA6B,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE5E,MAAM,CAAC6E,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,EAAmEhD,KAAK,CAAC+C,MAAzE,CAHJ,eAII;AAAG,IAAA,SAAS,EAAE5E,MAAM,CAAC8E,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,eAKI;AAAG,IAAA,SAAS,EAAE9E,MAAM,CAAC+E,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CAFJ,eASI;AAAK,IAAA,KAAK,EAAE;AAAET,MAAAA,MAAM,EAAC;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKU,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,QAArC,IAAiDD,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAjD,gBACD,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAE9C,OAAO,CAACrB,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAC,aADZ;AAEI,IAAA,EAAE,EAAC,YAFP;AAGI,IAAA,KAAK,EAAEsB,MAHX;AAII,IAAA,QAAQ,EAAEE,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMI,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CANJ,EASKsB,oBAAoB,EATzB,CAFJ,eAcI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAdJ,eAeI;AAAQ,IAAA,OAAO,EAAEhB,cAAjB;AAAiC,IAAA,SAAS,EAAET,OAAO,CAACd,UAApD;AAAgE,IAAA,KAAK,EAAE;AAACiD,MAAAA,MAAM,EAAC,EAAR;AAAYC,MAAAA,KAAK,EAAC;AAAlB,KAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,CADC,GAkBA,IAnBL,CATJ,eA8BI;AAAK,IAAA,SAAS,EAAEvE,MAAM,CAACkF,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAErD,KAAK,CAAC2C,IAA3B;AAAiC,IAAA,YAAY,EAAE3C,KAAK,CAACiB,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CA9BJ,CADJ;AAkCH;;GA3FQlB,a;UACWlB,U,EAKAE,S;;;KANXgB,a;AA2FR,C,CAED;AAEA;AAEA;AACA;AACA;;AAEA,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport api from '../api/api';\nimport styles from '../MyProfile/profile.module.css';\nimport StarIcon from '@material-ui/icons/Star'; \nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport swal from 'sweetalert';\nimport MessageButton from '../ResuableComponents/messageButton';\nimport { useHistory} from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 160,\n      maxWidth:160,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    buttonForm:{\n        position:'absolute',\n        margin: '20px 180px',\n        cursor:'pointer',\n        borderRadius:'2px',\n        border: '1px solid #2b64d2',\n        '&:hover': {\n            background: \"#2b64d2\",\n            color: 'white',\n        },\n    },\n\n  }));\nfunction ProfileFormat (props) {\n    const history = useHistory();\n    const handleOnClick = (event) => {\n        event.preventDefault();\n        history.goBack()\n    }\n    const classes = useStyles();\n    const [jobsId, setjobsId] = React.useState('');\n    //for the assign form\n    const handleChange = (event) => {\n        setjobsId(event.target.value);\n    };\n    console.log(jobsId)\n    //sending job id to backend\n    var data={}\n    const handleOnSubmit = (event) =>{\n        data.contractorId= props.id\n        data.id= jobsId\n        api.assignUnassignedJobs(data).then(res => {\n            swal({\n                title: \"Assigned!\",\n                text: \"Job has been assigned, please wait for contractor to accept!\",\n                icon: \"success\",\n                button: \"OK\",\n              });\n        }).catch(err => console.log(err))\n    }\n\n    //getting the unassigned jobs list\n    let userId=[]\n    const [unassignedJobs, setAllUnassignedJobs] = useState({});\n    const getAllUnassignedJobs = () => {\n        api.getAllUnassignedJobs(userId).then(res => {\n            console.log(res)\n            setAllUnassignedJobs(res.data);\n        }).catch(err => console.log(err))\n    }\n    useEffect(() => {\n        getAllUnassignedJobs();\n    },[]);\n    const renderUnassignedJobs = () => {\n        let i = 0;\n        let unassignedJobCount = unassignedJobs.length;\n        let tempJobs = [];\n        while (i < unassignedJobCount) {\n            let unassignedJob = unassignedJobs[i]\n            let jobTitle = unassignedJob.title\n            let jobId = unassignedJob.id\n            tempJobs.push(\n                <MenuItem value={jobId}>{jobTitle}</MenuItem>\n            );\n\n            i += 1;\n        }\n        return tempJobs;\n    };\n    //\n    return(\n        <div>\n            <h1 className={styles.header}><ArrowBackIcon style={{height:25, width:50, cursor:\"pointer\"}} onClick={handleOnClick}/>{props.name}</h1>\n            <div style={{height:180}}>\n                <img src={props.avatar} className={styles.circle} style={{height:100,width:100}}/>\n                <p className={styles.jobsdone}>{props.jobsdone}</p>\n                <p className={styles.rating}><StarIcon className={styles.Vector}/>{props.rating}</p>\n                <p className={styles.jobsdone2}>Jobs done</p>\n                <p className={styles.rating2}>Rating</p>\n            </div>\n            <div style={{ height:80}}>\n                {localStorage.getItem('usertype') === 'Client' && localStorage.getItem('access-token')?\n                <FormControl className={classes.formControl}>\n                    <InputLabel id=\"inputLabel\">Select Job</InputLabel>\n                    <Select\n                        labelId=\"selectLabel\"\n                        id=\"assignForm\"\n                        value={jobsId}\n                        onChange={handleChange}\n                        >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        {renderUnassignedJobs()}\n                        {/* <MenuItem value={10}>Ten</MenuItem>*/}\n                    </Select>\n                    <FormHelperText>Assign Job to this Contractor</FormHelperText>\n                    <button onClick={handleOnSubmit} className={classes.buttonForm} style={{height:30, width:120}}>Assign</button>\n                </FormControl>\n                :null}\n            </div>\n            <div className={styles.message}><MessageButton name={props.name} contractorId={props.id}/></div>\n        </div>\n    )\n};\n\n// function AssignForm() {\n\n//     return(\n\n//     )\n// }\n// console.log(AssignForm)\n\nexport default ProfileFormat;"]},"metadata":{},"sourceType":"module"}