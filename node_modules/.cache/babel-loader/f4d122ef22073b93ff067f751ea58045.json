{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ContractorActiveJobsPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport styles from './styles.module.css';\nimport Active from './active.js';\nimport Done from './done.js';\nimport Saved from './saved.js';\nimport PendingJobs from './pending.js';\nimport api from '../api/api';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoadingView from '../ResuableComponents/loadingView';\nconst drawerWidth = 300;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    marginTop: 80\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex: 3\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    paddingLeft: '20px'\n  }\n}));\n\nconst ContractorActiveJobsPage = props => {\n  _s();\n\n  const [pendingJobs, setPendingJobs] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const getPendingJobs = () => {\n    api.getPendingJobs().then(res => {\n      // debugger;\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setPendingJobs(res.data); //change [] with .get\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPendingJobs();\n  }, []);\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const renderPendingJobs = () => {\n    let i = 0;\n    let jobsCount = pendingJobs.length;\n\n    if (jobsCount === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, \"It seems you don't have any Pending Jobs.\"));\n    } else {\n      let tempJobs = [];\n\n      while (i < jobsCount) {\n        let job = pendingJobs[i];\n        let jobId = job.id;\n        let jobTitle = job.title;\n        let contractorName = job.clientFirstName;\n        let location = job.locationDetail;\n        let serviceList = job.serviceTypeList;\n        let avatar = job.downloadurl[0];\n        let userId = job.clientId;\n        tempJobs.push( /*#__PURE__*/React.createElement(PendingJobs, {\n          userId: userId,\n          onAction: getPendingJobs,\n          avatar: avatar,\n          complete: 0,\n          id: jobId,\n          title: jobTitle,\n          name: contractorName,\n          location: location,\n          serviceList: serviceList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 9\n          }\n        })); // Proceed to the next message.\n\n        i += 1;\n      }\n\n      return tempJobs;\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, \"My Jobs\", open === false ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDrawerOpen,\n    className: styles.showbutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"View Pending Jobs\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/ContractorActiveJobs/active\",\n    className: styles.activeJob,\n    activeStyle: {\n      fontWeight: \"bold\",\n      color: '#2B64D2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/ContractorActiveJobs/saved\",\n    className: styles.activeJob,\n    activeStyle: {\n      fontWeight: \"bold\",\n      color: '#2B64D2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Saved\"), /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/ContractorActiveJobs/done\",\n    className: styles.activeJob,\n    activeStyle: {\n      fontWeight: \"bold\",\n      color: '#2B64D2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Done\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/ContractorActiveJobs/active\",\n    component: Active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ContractorActiveJobs/saved\",\n    component: Saved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/ContractorActiveJobs/done\",\n    component: Done,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Drawer, {\n    className: styles.rectangle33,\n    variant: \"persistent\",\n    anchor: \"right\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, \" Pending Requests\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDrawerClose,\n    className: styles.hidebutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Hide\")), loading ? /*#__PURE__*/React.createElement(LoadingView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }\n  }) : renderPendingJobs()));\n};\n\n_s(ContractorActiveJobsPage, \"Bdh8Nea3ysQ6olewfLm6qOZU6kk=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContractorActiveJobsPage;\nexport default ContractorActiveJobsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractorActiveJobsPage\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ContractorActiveJobsPage/index.js"],"names":["React","useEffect","useState","Route","NavLink","styles","Active","Done","Saved","PendingJobs","api","Drawer","makeStyles","LoadingView","drawerWidth","useStyles","theme","root","display","marginTop","hide","drawer","width","flexShrink","zIndex","drawerPaper","paddingLeft","ContractorActiveJobsPage","props","pendingJobs","setPendingJobs","loading","setLoading","getPendingJobs","then","res","console","log","data","catch","err","open","setOpen","handleDrawerOpen","handleDrawerClose","renderPendingJobs","i","jobsCount","length","tempJobs","job","jobId","id","jobTitle","title","contractorName","clientFirstName","location","locationDetail","serviceList","serviceTypeList","avatar","downloadurl","userId","clientId","push","classes","header","showbutton","header2","activeJob","fontWeight","color","content","rectangle33","paper","pending","hidebutton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport styles from './styles.module.css'; \nimport Active from './active.js';\nimport Done from './done.js';\nimport Saved from './saved.js';  \nimport PendingJobs from './pending.js';\nimport api from '../api/api';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop:80,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex:3,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    paddingLeft:'20px'\n  },\n}));\n\nconst ContractorActiveJobsPage = (props) => {\n  const [pendingJobs, setPendingJobs] = useState({});\n  const [loading, setLoading] = useState(false);\n  const getPendingJobs = () => {\n      api.getPendingJobs().then(res => {\n        // debugger;\n          console.log(\"Job loaded successfully\");\n          console.log(res);\n          setPendingJobs(res.data); //change [] with .get\n          setLoading(false);\n      }).catch(err => console.log(err))\n  }\n\n  useEffect(() => {\n    setLoading(true);\n      getPendingJobs();\n    },[]);\n\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const renderPendingJobs = () => {\n    let i = 0;\n    let jobsCount = pendingJobs.length;\n    if (jobsCount===0){\n      return(\n        <div>\n          <p>It seems you don't have any Pending Jobs.</p>\n        </div>\n      )\n    }\n    else{\n    let tempJobs = [];\n    while (i < jobsCount) {\n      let job = pendingJobs[i]\n      let jobId = job.id\n      let jobTitle = job.title\n      let contractorName = job.clientFirstName\n      let location = job.locationDetail\n      let serviceList = job.serviceTypeList;\n      let avatar= job.downloadurl[0]\n      let userId= job.clientId\n      tempJobs.push(\n        <PendingJobs userId={userId} onAction={getPendingJobs} avatar={avatar} complete= {0} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={serviceList} />\n      );\n\n      // Proceed to the next message.\n      i += 1;\n    }\n    return tempJobs;}\n  };\n  const classes = useStyles();\n  return(\n    <div>\n      <h1 className={styles.header}>My Jobs \n        {open ===false?\n        <button onClick={handleDrawerOpen} className={styles.showbutton}>\n          View Pending Jobs\n        </button>\n        :null\n        }\n      </h1> \n      <div className={styles.header2}>\n        <NavLink exact to=\"/ContractorActiveJobs/active\" className={styles.activeJob} activeStyle={{\n          fontWeight: \"bold\",\n          color: '#2B64D2'\n        }}>Active</NavLink>\n        <NavLink exact to=\"/ContractorActiveJobs/saved\" className={styles.activeJob} activeStyle={{\n          fontWeight: \"bold\",\n          color: '#2B64D2'\n        }}>Saved</NavLink>\n        <NavLink exact to=\"/ContractorActiveJobs/done\" className={styles.activeJob} activeStyle={{\n          fontWeight: \"bold\",\n          color: '#2B64D2'\n        }}>Done</NavLink>\n      </div>\n      <div className={styles.content}>\n        <Route path=\"/ContractorActiveJobs/active\" component={Active}/>\n        <Route path=\"/ContractorActiveJobs/saved\" component={Saved}/>\n        <Route path=\"/ContractorActiveJobs/done\" component={Done}/>\n      </div>\n      <Drawer\n        className={styles.rectangle33}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}      >\n        <h1 className={styles.pending}> Pending Requests \n          <button onClick={handleDrawerClose} className={styles.hidebutton}>\n            Hide\n          </button>\n        </h1>\n        {loading?<LoadingView/>:renderPendingJobs()}\n      </Drawer>\n      {/* <box className={styles.rectangle33}>\n          <h1 className={styles.pending}> Pending Requests</h1>\n          {renderPendingJobs()}\n      </box> */}\n    </div>\n)};\n\nexport default ContractorActiveJobsPage;\n"]},"metadata":{},"sourceType":"module"}