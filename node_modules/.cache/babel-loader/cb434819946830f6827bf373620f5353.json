{"ast":null,"code":"import _slicedToArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import styles from'./styles.module.css';import JobPosting from'./jobpostingSaved.js';import api from'../api/api';import{Grid}from'@material-ui/core';import LoadingView from'../ResuableComponents/loadingView';var Saved=function Saved(){var data={};var _useState=useState([]),_useState2=_slicedToArray(_useState,2),savedJobs=_useState2[0],setSavedJobs=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var getSavedJobs=function getSavedJobs(){api.getSavedJobs().then(function(res){// debugger;\nconsole.log(\"Job loaded successfully\");console.log(res);setSavedJobs(res.data);//change [] with .get\nsetLoading(false);}).catch(function(err){return console.log(err);});};useEffect(function(){setLoading(true);getSavedJobs();},[]);var renderSavedJobs=function renderSavedJobs(){var i=0;var savedJobsCount=savedJobs.length;if(savedJobsCount===0){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"It seems you don't have any Saved Jobs.\"));}else{var tempJobs=[];while(i<savedJobsCount){var unassignedJob=savedJobs[i];var jobId=unassignedJob.id;var jobTitle=unassignedJob.title;var contractorName=unassignedJob.clientFirstName;var location=unassignedJob.locationDetail;var str=unassignedJob.serviceTypeList;var avatar=unassignedJob.downloadurl[0];var userId=unassignedJob.clientId;//   let avatar = unassignedJob.imageListStoreRef\n// debugger\ntempJobs.push(/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(JobPosting,{userId:userId,avatar:avatar,complete:0,id:jobId,title:jobTitle,name:contractorName,location:location,serviceList:str})));// Proceed to the next message.\ni+=1;}return tempJobs;}};return/*#__PURE__*/React.createElement(\"div\",{className:styles.gridContainer},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,justify:\"left\"},loading?/*#__PURE__*/React.createElement(LoadingView,null):renderSavedJobs()));};export default Saved;export{Saved};","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ContractorActiveJobsPage/saved.js"],"names":["React","useEffect","useState","styles","JobPosting","api","Grid","LoadingView","Saved","data","savedJobs","setSavedJobs","loading","setLoading","getSavedJobs","then","res","console","log","catch","err","renderSavedJobs","i","savedJobsCount","length","tempJobs","unassignedJob","jobId","id","jobTitle","title","contractorName","clientFirstName","location","locationDetail","str","serviceTypeList","avatar","downloadurl","userId","clientId","push","gridContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './styles.module.css';  \nimport JobPosting from './jobpostingSaved.js';\nimport api from '../api/api';\nimport { Grid } from '@material-ui/core';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst Saved = () => {\n  let data={}\n    const [savedJobs, setSavedJobs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const getSavedJobs = () => {\n        api.getSavedJobs().then(res => {\n          // debugger;\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setSavedJobs(res.data); //change [] with .get\n            setLoading(false);\n        }).catch(err => console.log(err))\n    }\n  \n    useEffect(() => {\n      setLoading(true);\n      getSavedJobs();\n      },[]);\n  \n    const renderSavedJobs = () => {\n        let i = 0;\n        let savedJobsCount = savedJobs.length;\n        if (savedJobsCount===0){\n          return(\n            <div>\n              <p>It seems you don't have any Saved Jobs.</p>\n            </div>\n          )\n        }\n        else{\n        let tempJobs = [];\n        while (i < savedJobsCount) {\n          let unassignedJob = savedJobs[i]\n          let jobId = unassignedJob.id\n          let jobTitle = unassignedJob.title\n          let contractorName = unassignedJob.clientFirstName\n          let location = unassignedJob.locationDetail\n          let str = unassignedJob.serviceTypeList;\n          let avatar = unassignedJob.downloadurl[0]\n          let userId = unassignedJob.clientId\n        //   let avatar = unassignedJob.imageListStoreRef\n          // debugger\n  \n          tempJobs.push(\n            <Grid item>\n              <JobPosting userId={userId} avatar={avatar} complete= {0} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={str}/>\n            </Grid>\n          );\n    \n          // Proceed to the next message.\n          i += 1;\n        }\n        return tempJobs;}\n      };\n    return(\n      <div className={styles.gridContainer}>\n        <Grid container spacing={2} justify=\"left\">\n            {loading?<LoadingView/>:renderSavedJobs()}\n        </Grid>\n      </div>)\n};\n\nexport default Saved;\nexport {Saved};"]},"metadata":{},"sourceType":"module"}