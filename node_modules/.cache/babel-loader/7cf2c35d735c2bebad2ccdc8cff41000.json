{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ResuableComponents/completeButton.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../api/api';\nimport swal from 'sweetalert';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport { useHistory } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nexport default function CompleteButton(props) {\n  _s();\n\n  const history = useHistory();\n  var jobId = {};\n  jobId[\"id\"] = props.id;\n\n  const handleClick = () => {\n    api.moveActiveToComplete(jobId).then(swal({\n      text: \"Done!\",\n      icon: \"success\",\n      buttons: true\n    }).then(success => {\n      if (success) {\n        history.push({\n          pathname: '/homeowneractivejobs/done'\n        });\n      } else {\n        swal.close();\n      }\n    }));\n  };\n\n  const FilledButton = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(CheckCircleOutlineIcon, {\n      style: {\n        fontSize: 32,\n        position: 'relative',\n        color: '#22C029',\n        cursor: 'pointer'\n      },\n      onClick: () => swal({\n        text: \"Only Clients can mark a job as complete. Please contact client to mark it as complete.\",\n        icon: \"warning\",\n        buttons: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 14\n      }\n    }) : localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Client' ? /*#__PURE__*/React.createElement(CheckCircleOutlineIcon, {\n      style: {\n        fontSize: 32,\n        position: 'relative',\n        color: '#22C029',\n        cursor: 'pointer'\n      },\n      onClick: () => swal({\n        title: \"Are you sure?\",\n        text: \"By marking this as complete, you agree to the terms and conditions of your contract with the homeowner.\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: false\n      }).then(willDelete => {\n        if (willDelete) {\n          handleClick();\n        } else {\n          swal.close();\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }\n    }) : null);\n  };\n\n  const FilledText = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => swal({\n        text: \"Only Clients can mark a job as complete. Please contact client to mark it as complete.\",\n        icon: \"warning\",\n        buttons: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }, \"Mark as Complete\") : localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Client' ? /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => swal({\n        title: \"Are you sure?\",\n        text: \"By marking this as complete, you agree to the terms and conditions of your contract with the homeowner.\",\n        icon: \"warning\",\n        buttons: true,\n        dangerMode: false\n      }).then(willDelete => {\n        if (willDelete) {\n          handleClick();\n        } else {\n          swal.close();\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }\n    }, \"Mark as Complete\") : null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, props.complete === 0 ? /*#__PURE__*/React.createElement(FilledButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 35\n    }\n  }) : props.complete === 1 ? /*#__PURE__*/React.createElement(CheckCircleIcon, {\n    style: {\n      fontSize: 32,\n      position: 'relative',\n      color: '#22C029',\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 34\n    }\n  }) : props.complete === 2 ? /*#__PURE__*/React.createElement(FilledText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }) : null);\n}\n\n_s(CompleteButton, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = CompleteButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompleteButton\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ResuableComponents/completeButton.js"],"names":["React","api","swal","CheckCircleOutlineIcon","CheckCircleIcon","useHistory","MenuItem","CompleteButton","props","history","jobId","id","handleClick","moveActiveToComplete","then","text","icon","buttons","success","push","pathname","close","FilledButton","localStorage","getItem","fontSize","position","color","cursor","title","dangerMode","willDelete","FilledText","complete"],"mappings":"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","sourcesContent":["import React from 'react';\nimport api from '../api/api';\nimport swal from 'sweetalert';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport {useHistory} from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nexport default function CompleteButton(props) {\n    const history = useHistory();\n    var jobId ={};\n    jobId[\"id\"] = props.id\n    const handleClick=()=> {\n        api.moveActiveToComplete(jobId).then(\n            swal({\n                text: \"Done!\",\n                icon: \"success\",\n                buttons: true,\n            }).then((success) => {\n                if (success) {\n                    history.push({\n                        pathname: '/homeowneractivejobs/done',\n                    })\n                } else {swal.close()}\n            })\n        )\n    }\n    const FilledButton = ()=>{\n        return(\n        <div>\n            {localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor' \n            ?<CheckCircleOutlineIcon style={{fontSize:32, position: 'relative', color: '#22C029', cursor: 'pointer'}} onClick={()=>\n                swal({\n                    text: \"Only Clients can mark a job as complete. Please contact client to mark it as complete.\",\n                    icon: \"warning\",\n                    buttons: true,\n            })}/>\n            : localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Client'\n            ?<CheckCircleOutlineIcon style={{fontSize:32, position: 'relative', color: '#22C029', cursor: 'pointer'}} onClick={()=>\n                swal({\n                    title: \"Are you sure?\",\n                    text: \"By marking this as complete, you agree to the terms and conditions of your contract with the homeowner.\",\n                    icon: \"warning\",\n                    buttons: true,\n                    dangerMode: false,\n                }).then((willDelete) => {\n                    if (willDelete) {\n                        handleClick()\n                    } else {swal.close()}\n                })\n            }/>\n            :null\n            }\n        </div>)\n    }\n    const FilledText = ()=>{\n        return(\n        <div>\n            {localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor' \n            ?<MenuItem onClick={()=>\n                swal({\n                    text: \"Only Clients can mark a job as complete. Please contact client to mark it as complete.\",\n                    icon: \"warning\",\n                    buttons: true,\n            })}>Mark as Complete</MenuItem>\n            : localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Client'\n            ?<MenuItem onClick={()=>\n                swal({\n                    title: \"Are you sure?\",\n                    text: \"By marking this as complete, you agree to the terms and conditions of your contract with the homeowner.\",\n                    icon: \"warning\",\n                    buttons: true,\n                    dangerMode: false,\n                }).then((willDelete) => {\n                    if (willDelete) {\n                        handleClick()\n                    } else {swal.close()}\n                })\n            }>Mark as Complete</MenuItem>\n            :null\n            }\n        </div>)\n    }\n    return(\n      <div>\n          {props.complete === 0 ? <FilledButton/>:\n          props.complete === 1 ? <CheckCircleIcon style={{fontSize:32, position: 'relative', color: '#22C029', cursor: 'pointer'}}/>:\n          props.complete === 2? <FilledText/>:null\n          }\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}