{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ContractorActiveJobsPage/active.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './styles.module.css';\nimport JobPosting from './jobposting.js';\nimport api from '../api/api';\nimport { Grid } from '@material-ui/core';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst Active = () => {\n  _s();\n\n  const [cactiveJobs, setCActiveJobs] = useState({\n    serviceTypeList: []\n  });\n  const [loading, setLoading] = useState(false);\n\n  const getCActiveJobs = () => {\n    api.getCActiveJobs().then(res => {\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setCActiveJobs(res.data); //change [] with .get\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getCActiveJobs();\n  }, []);\n\n  const renderActiveJobs = () => {\n    let i = 0;\n    let activeJobCount = cactiveJobs.length;\n\n    if (activeJobCount === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"It seems you don't have any Active Jobs.\"));\n    } else {\n      let tempJobs = [];\n\n      while (i < activeJobCount) {\n        let activeJob = cactiveJobs[i];\n        let jobTitle = activeJob.title;\n        let jobId = activeJob.id;\n        let contractorName = activeJob.clientFirstName;\n        let location = activeJob.locationDetail;\n        var serviceType = activeJob.serviceTypeList;\n        let avatar = activeJob.downloadurl[0];\n        let userId = activeJob.clientId;\n        tempJobs.push( /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(JobPosting, {\n          avatar: avatar,\n          complete: 0,\n          id: jobId,\n          title: jobTitle,\n          name: contractorName,\n          location: location,\n          serviceList: serviceType,\n          userId: userId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }\n        })));\n        i += 1;\n      }\n\n      return tempJobs;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }\n  }) : renderActiveJobs()));\n};\n\n_s(Active, \"+l+5U1n9utOcTVkKsvezdCM8p3k=\");\n\n_c = Active;\nexport default Active;\nexport { Active };\n\nvar _c;\n\n$RefreshReg$(_c, \"Active\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/ContractorActiveJobsPage/active.js"],"names":["React","useEffect","useState","styles","JobPosting","api","Grid","LoadingView","Active","cactiveJobs","setCActiveJobs","serviceTypeList","loading","setLoading","getCActiveJobs","then","res","console","log","data","catch","err","renderActiveJobs","i","activeJobCount","length","tempJobs","activeJob","jobTitle","title","jobId","id","contractorName","clientFirstName","location","locationDetail","serviceType","avatar","downloadurl","userId","clientId","push","gridContainer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './styles.module.css';  \nimport JobPosting from './jobposting.js';\nimport api from '../api/api';\nimport { Grid } from '@material-ui/core'\nimport LoadingView from '../ResuableComponents/loadingView';\n\n\nconst Active = () => {\n    const [cactiveJobs, setCActiveJobs] = useState({serviceTypeList:[]});\n    const [loading, setLoading] = useState(false);\n    const getCActiveJobs = () => {\n      api.getCActiveJobs().then(res => {\n          console.log(\"Job loaded successfully\");\n          console.log(res);\n          setCActiveJobs(res.data); //change [] with .get\n          setLoading(false);\n      }).catch(err => console.log(err))\n    }\n    useEffect(() => {\n      setLoading(true);\n      getCActiveJobs();\n    },[]);\n    const renderActiveJobs = () => {\n      let i = 0;\n      let activeJobCount = cactiveJobs.length;\n      if (activeJobCount===0){\n        return(\n          <div>\n            <p>It seems you don't have any Active Jobs.</p>\n          </div>\n        )\n      }\n      else{\n        let tempJobs = [];\n        while (i < activeJobCount) {\n          let activeJob = cactiveJobs[i]\n          let jobTitle = activeJob.title\n          let jobId = activeJob.id\n          let contractorName = activeJob.clientFirstName\n          let location = activeJob.locationDetail\n          var serviceType = activeJob.serviceTypeList;\n          let avatar = activeJob.downloadurl[0]\n          let userId = activeJob.clientId\n          tempJobs.push(\n            <Grid item>\n              <JobPosting avatar={avatar} complete= {0} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={serviceType} userId={userId}/>\n            </Grid>\n          );\n          i += 1;\n        }\n        return tempJobs\n      };\n    };\n    return(\n      <div className={styles.gridContainer}>\n        <Grid container spacing={2} justify=\"left\">\n          {loading?<LoadingView/>:renderActiveJobs()}\n        </Grid>\n      </div>\n    )\n};\n\n\nexport default Active;\nexport {Active};\n"]},"metadata":{},"sourceType":"module"}