{"ast":null,"code":"import _regeneratorRuntime from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";// import app from 'firebase/app'; \n// import from 'firebase/messaging';\nimport firebase from'firebase';import api from'../api/api';import\"firebase/auth\";// const config = {\n//     apiKey: \"AIzaSyBYt8_7KADYF1fsBKF0wxOG5_SWY2lPyDk\",\n//     authDomain: \"booktrades-8f170.firebaseapp.com\",\n//     databaseURL: \"https://booktrades-8f170.firebaseio.com\",\n//     projectId: \"booktrades-8f170\",\n//     storageBucket: \"booktrades-8f170.appspot.com\",\n//     messagingSenderId: \"810334480356\",\n//     appId: \"1:810334480356:web:ab2a8b8241701e2c3789f1\",\n//     measurementId: \"G-G8QBQWQNTE\"\n// };\n// var config = {\n//     apiKey: \"AIzaSyARTjraxEpZqygB62W10x_ISKjzh0NsY5c\",\n//     authDomain: \"booktrades-ef251.firebaseapp.com\",\n//     databaseURL: \"https://booktrades-ef251.firebaseio.com\",\n//     projectId: \"booktrades-ef251\",\n//     storageBucket: \"booktrades-ef251.appspot.com\",\n//     messagingSenderId: \"95103237352\",\n//     appId: \"1:95103237352:web:81873c6a9b042f834d1d5d\"\n// };\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar config={apiKey:\"AIzaSyARTjraxEpZqygB62W10x_ISKjzh0NsY5c\",authDomain:\"booktrades-ef251.firebaseapp.com\",databaseURL:\"https://booktrades-ef251.firebaseio.com\",projectId:\"booktrades-ef251\",storageBucket:\"booktrades-ef251.appspot.com\",messagingSenderId:\"95103237352\",appId:\"1:95103237352:web:81873c6a9b042f834d1d5d\",measurementId:\"G-2RZCGYRG5W\"};var Firebase=/*#__PURE__*/function(){function Firebase(){var _this=this;_classCallCheck(this,Firebase);this.doCreateUserWithEmailAndPassword=function(email,password){return _this.auth.createUserWithEmailAndPassword(email,password);};this.doSignInWithEmailAndPassword=function(email,password){return _this.auth.signInWithEmailAndPassword(email,password);};this.doSignInWithGoogle=function(){return _this.auth.signInWithPopup(_this.googleProvider);};this.doSignOut=function(){return _this.auth.signOut();};this.doPasswordReset=function(email){return _this.auth.sendPasswordResetEmail(email);};this.doPasswordUpdate=function(password){return _this.auth.currentUser.updatePassword(password);};this.signup=function(email,password,dob,address){return _this.auth().createUserWithEmailAndPassword(email,password);};this.app=firebase.initializeApp(config);this.auth=this.app.auth();this.googleProvider=new firebase.auth.GoogleAuthProvider();// this.emailProvider = new firebase.auth.EmailAuthProvider();\n// debugger; \nthis.emailProvider=this.app.firebase_.auth.EmailAuthProvider;// console.log(this.app.firebase_.auth.EmailAuthProvider.credential())\n}// *** Auth API ***\n_createClass(Firebase,[{key:\"registerMessaging\",value:function registerMessaging(){this.messaging=this.app.messaging();var messaging=this.messaging;Notification.requestPermission().then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:messaging.getToken({vapidKey:'BElgJfbDxG4CjtcSZzwDKLSz_s23S8GWxekpqx-MFgh1ELI4afdHKsJOmNWKh3iN5VPHRTEfR9gtUbWn3PVOmy0'}).then(function(currentToken){if(currentToken){api.sendMessagingToken(currentToken);}else{console.log('No registration token available. Request permission to generate one.');}}).catch(function(err){console.log('An error occurred while retrieving token. ',err);});case 1:case\"end\":return _context.stop();}}},_callee);}))).catch(function(err){console.log(\"Unable to get permission to notify.\",err);});messaging.onMessage(function(payload){console.log('Message received. ',payload);if(window.location.href.includes(\"InboxPage\")){console.log('On messaging');}else{console.log('not on messaging');}window.postMessage(payload,window.location.href);});}},{key:\"login\",value:function login(email,password){return this.auth.signInWithEmailAndPassword(email,password);}},{key:\"logout\",value:function logout(){return this.auth.signOut();}},{key:\"register\",value:function(){var _register=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email,password){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",this.auth.createUserWithEmailAndPassword(email,password));case 1:case\"end\":return _context2.stop();}}},_callee2,this);}));function register(_x,_x2){return _register.apply(this,arguments);}return register;}()},{key:\"isInitialized\",value:function isInitialized(){var _this2=this;return new Promise(function(resolve){_this2.auth.onAuthStateChanged(resolve);});}}]);return Firebase;}();export var firebase_instance=new Firebase();export var auth=firebase.auth;export default firebase_instance;","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/Firebase/firebase.js"],"names":["firebase","api","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignInWithGoogle","signInWithPopup","googleProvider","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","signup","dob","address","app","initializeApp","GoogleAuthProvider","emailProvider","firebase_","EmailAuthProvider","messaging","Notification","requestPermission","then","getToken","vapidKey","currentToken","sendMessagingToken","console","log","catch","err","onMessage","payload","window","location","href","includes","postMessage","Promise","resolve","onAuthStateChanged","firebase_instance"],"mappings":"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","sourcesContent":["// import app from 'firebase/app'; \n// import from 'firebase/messaging';\nimport firebase from 'firebase';\nimport api from '../api/api';\nimport \"firebase/auth\"\n// const config = {\n//     apiKey: \"AIzaSyBYt8_7KADYF1fsBKF0wxOG5_SWY2lPyDk\",\n//     authDomain: \"booktrades-8f170.firebaseapp.com\",\n//     databaseURL: \"https://booktrades-8f170.firebaseio.com\",\n//     projectId: \"booktrades-8f170\",\n//     storageBucket: \"booktrades-8f170.appspot.com\",\n//     messagingSenderId: \"810334480356\",\n//     appId: \"1:810334480356:web:ab2a8b8241701e2c3789f1\",\n//     measurementId: \"G-G8QBQWQNTE\"\n// };\n\n// var config = {\n//     apiKey: \"AIzaSyARTjraxEpZqygB62W10x_ISKjzh0NsY5c\",\n//     authDomain: \"booktrades-ef251.firebaseapp.com\",\n//     databaseURL: \"https://booktrades-ef251.firebaseio.com\",\n//     projectId: \"booktrades-ef251\",\n//     storageBucket: \"booktrades-ef251.appspot.com\",\n//     messagingSenderId: \"95103237352\",\n//     appId: \"1:95103237352:web:81873c6a9b042f834d1d5d\"\n// };\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst config = {\n    apiKey: \"AIzaSyARTjraxEpZqygB62W10x_ISKjzh0NsY5c\",\n    authDomain: \"booktrades-ef251.firebaseapp.com\",\n    databaseURL: \"https://booktrades-ef251.firebaseio.com\",\n    projectId: \"booktrades-ef251\",\n    storageBucket: \"booktrades-ef251.appspot.com\",\n    messagingSenderId: \"95103237352\",\n    appId: \"1:95103237352:web:81873c6a9b042f834d1d5d\",\n    measurementId: \"G-2RZCGYRG5W\"\n  };\n\nclass Firebase {\n    constructor() {\n        this.app = firebase.initializeApp(config);\n        this.auth = this.app.auth();\n        \n        this.googleProvider = new firebase.auth.GoogleAuthProvider(); \n        // this.emailProvider = new firebase.auth.EmailAuthProvider();\n        // debugger; \n        this.emailProvider = this.app.firebase_.auth.EmailAuthProvider\n        // console.log(this.app.firebase_.auth.EmailAuthProvider.credential())\n    }\n    \n    // *** Auth API ***\n\n    registerMessaging(){\n      this.messaging = this.app.messaging();\n      const messaging = this.messaging;\n      Notification.requestPermission().then(async function() {\n        messaging.getToken({vapidKey: 'BElgJfbDxG4CjtcSZzwDKLSz_s23S8GWxekpqx-MFgh1ELI4afdHKsJOmNWKh3iN5VPHRTEfR9gtUbWn3PVOmy0'}).then((currentToken) => {\n              if (currentToken) {\n                  api.sendMessagingToken(currentToken);\n              } else {\n                  console.log('No registration token available. Request permission to generate one.');\n              }\n              }).catch((err) => {\n                console.log('An error occurred while retrieving token. ', err);\n              });\n      })\n      .catch(function(err) {\n          console.log(\"Unable to get permission to notify.\", err);\n      });\n      messaging.onMessage((payload) => {\n        console.log('Message received. ', payload)\n        if(window.location.href.includes(\"InboxPage\")){\n          console.log('On messaging');\n        }else{\n          console.log('not on messaging');\n        }\n        window.postMessage(payload, window.location.href);\n      });\n    }\n    login(email, password) {\n      return this.auth.signInWithEmailAndPassword(email, password)\n    }\n  \n    logout() {\n      return this.auth.signOut()\n    }\n  \n    async register(email, password) {\n      return this.auth.createUserWithEmailAndPassword(email, password)\n      \n    }\n  \n    isInitialized() {\n      return new Promise(resolve => {\n        this.auth.onAuthStateChanged(resolve)\n      })\n    }\n\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n        this.auth.createUserWithEmailAndPassword(email, password);\n    \n    doSignInWithEmailAndPassword = (email, password) =>\n        this.auth.signInWithEmailAndPassword(email, password); \n        \n    doSignInWithGoogle = () =>\n        this.auth.signInWithPopup(this.googleProvider);\n    \n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n \n    doPasswordUpdate = password =>\n      this.auth.currentUser.updatePassword(password);\n\n    signup = (email, password, dob, address) => \n         this.auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport const firebase_instance = new Firebase();\nexport const auth = firebase.auth; \nexport default firebase_instance; \n"]},"metadata":{},"sourceType":"module"}