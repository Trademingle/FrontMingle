{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/PostingPage/body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './posting.module.css';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport api from '../api/api';\nimport { useHistory } from 'react-router-dom';\nimport ImageViewer from '../ImageViewer';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport moment from 'moment';\nimport MessageButton from '../ResuableComponents/messageButton';\nimport BookmarkButton from '../ResuableComponents/bookmarkButton';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\nexport default function ClientReview(props) {\n  _s();\n\n  const history = useHistory();\n\n  const handleOnClick = event => {\n    event.preventDefault();\n    history.goBack();\n  };\n\n  const [unassignedJob, setUnassignedJob] = useState({\n    downloadurl: [],\n    serviceTypeList: [],\n    languageList: []\n  });\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  var contractorID = {};\n  contractorID[\"id\"] = props.id;\n\n  const getUnassignedJob = () => {\n    api.unassignedJob(contractorID).then(res => {\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setUnassignedJob(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setOpen(true);\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getUnassignedJob();\n  }, []);\n\n  const handleLink = event => {\n    event.preventDefault();\n\n    if (localStorage.getItem('usertype') === 'Contractor') {\n      history.push({\n        pathname: '/ClientProfile/' + unassignedJob.clientId.toString()\n      });\n    } else {\n      history.push({\n        pathname: '/profile/' + unassignedJob.contractorId.toString()\n      });\n    }\n\n    ;\n  };\n\n  const ts = moment(unassignedJob.datePosted);\n  let timeVal;\n\n  if (moment().diff(ts, 'minutes') < 60) {\n    timeVal = String(moment().diff(ts, 'minutes')) + 'm';\n  } else if (moment().diff(ts, 'hours') < 24) {\n    timeVal = String(moment().diff(ts, 'hours')) + 'h';\n  } else if (moment().diff(ts, 'days') < 24) {\n    timeVal = String(moment().diff(ts, 'days')) + 'd';\n  } else {\n    timeVal = String(moment().diff(ts, 'weeks')) + 'w';\n  }\n\n  const renderTitle = () => {\n    let jobTitle = unassignedJob.title;\n    let name = unassignedJob.clientFirstName;\n    let jobDetails = unassignedJob.jobDetails;\n    let locationDetail = unassignedJob.locationDetail;\n    let imagesList = unassignedJob.downloadurl;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.headerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n      style: {\n        height: 25,\n        cursor: \"pointer\"\n      },\n      onClick: handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.header1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \" \", jobTitle, \" \"), /*#__PURE__*/React.createElement(BookmarkButton, {\n      id: unassignedJob.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.name,\n      onClick: handleLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 52\n      }\n    }, \"\\u2022\"), \" \", locationDetail)), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Posted \", timeVal, \" ago\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ImageViewer, {\n      imagesList: imagesList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MessageButton, {\n      name: unassignedJob.clientFirstName,\n      contractorId: unassignedJob.clientId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.paragraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      className: styles.hr1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: styles.header2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"About the job\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.about,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, jobDetails), /*#__PURE__*/React.createElement(\"hr\", {\n      className: styles.hr2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  function Tags(props) {\n    if (!props.tagname) return null;\n    return /*#__PURE__*/React.createElement(\"box\", {\n      className: styles2.tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles2.tagfont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, props.tagname));\n  }\n\n  ;\n\n  const renderTags = () => {\n    let i = 0;\n    let services = unassignedJob.serviceTypeList;\n    let tagsCount = services.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: services[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 31\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  const renderLTags = () => {\n    let i = 0;\n    let lang = unassignedJob.languageList;\n\n    for (var j = 0; j < lang.length; j++) {\n      let temp = lang[j].toLowerCase();\n      lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n    }\n\n    let tagsCount = lang.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: lang[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 31\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.posting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"box\", {\n    className: styles.postingbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, renderTitle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.skillsbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"Required Skills\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, renderTags()), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Required Languages\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, renderLTags()))), /*#__PURE__*/React.createElement(NotFound, {\n    setOpen: setOpen,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(ClientReview, \"VTA4CPDoR9MQS/YD6/o/iN9bSz4=\", false, function () {\n  return [useHistory];\n});\n\n_c = ClientReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientReview\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/PostingPage/body.js"],"names":["React","useEffect","useState","styles","ArrowBackIcon","api","useHistory","ImageViewer","styles2","moment","MessageButton","BookmarkButton","NotFound","LoadingView","ClientReview","props","history","handleOnClick","event","preventDefault","goBack","unassignedJob","setUnassignedJob","downloadurl","serviceTypeList","languageList","open","setOpen","loading","setLoading","contractorID","id","getUnassignedJob","then","res","console","log","data","catch","err","handleLink","localStorage","getItem","push","pathname","clientId","toString","contractorId","ts","datePosted","timeVal","diff","String","renderTitle","jobTitle","title","name","clientFirstName","jobDetails","locationDetail","imagesList","headerDiv","height","cursor","header1","frame","location","row","message","paragraph","hr1","header2","about","hr2","Tags","tagname","tag","tagfont","renderTags","i","services","tagsCount","length","tempTags","renderLTags","lang","j","temp","toLowerCase","charAt","toUpperCase","substr","posting","postingbox","skillsbox","servicetagbox"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from './posting.module.css'; \nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport api from '../api/api';\nimport { useHistory} from 'react-router-dom';\nimport ImageViewer from '../ImageViewer';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport moment from 'moment';\nimport MessageButton from '../ResuableComponents/messageButton';\nimport BookmarkButton from '../ResuableComponents/bookmarkButton';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nexport default function  ClientReview(props) {\n    const history = useHistory();\n    const handleOnClick = (event) => {\n        event.preventDefault();\n        history.goBack()\n    }\n    const [unassignedJob, setUnassignedJob] = useState({downloadurl:[],serviceTypeList:[],languageList:[]});\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    var contractorID= {};\n    contractorID[\"id\"] = props.id;\n\n    const getUnassignedJob = () => {\n        api.unassignedJob(contractorID).then(res => {\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setUnassignedJob(res.data); \n            setLoading(false);\n        }).catch(err => {console.log(err);setLoading(false); setOpen(true)})\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        getUnassignedJob();\n    },[]);\n    const handleLink = (event) =>{\n        event.preventDefault();\n        if (localStorage.getItem('usertype') === 'Contractor'){\n            history.push({\n                pathname: '/ClientProfile/' + unassignedJob.clientId.toString(),\n                });\n            }\n            else{\n            history.push({\n                pathname: '/profile/' + unassignedJob.contractorId.toString(),\n                })};\n        }\n    const ts = moment(unassignedJob.datePosted);\n    let timeVal;\n    if (moment().diff(ts, 'minutes')<60){\n        timeVal = String(moment().diff(ts, 'minutes')) + 'm' \n    }else if(moment().diff(ts, 'hours')<24){\n        timeVal = String(moment().diff(ts, 'hours')) + 'h' \n    }else if(moment().diff(ts, 'days')<24){\n        timeVal = String(moment().diff(ts, 'days')) + 'd' \n    }else{\n        timeVal = String(moment().diff(ts, 'weeks')) + 'w' \n    }\n    const renderTitle = () => {\n        let jobTitle = unassignedJob.title\n        let name = unassignedJob.clientFirstName\n        let jobDetails = unassignedJob.jobDetails\n        let locationDetail = unassignedJob.locationDetail\n        let imagesList = unassignedJob.downloadurl\n        return(\n            <div>\n                <div className={styles.headerDiv}>\n                    <ArrowBackIcon  style={{height:25, cursor:\"pointer\"}} onClick={handleOnClick}/>\n                    <h1 className={styles.header1}> {jobTitle} </h1>\n                    <BookmarkButton id={unassignedJob.id}/>                   \n                </div>\n                <box className={styles.frame}>\n                    <p className={styles.name} onClick={handleLink}>{name}</p>\n                    <p className={styles.location}><span>&#8226;</span> {locationDetail}</p>\n                </box> \n                <box className={styles.frame}>\n                    <p className={styles.location}>Posted {timeVal} ago</p>\n                </box>\n                <div className={styles.row}>\n                    <ImageViewer imagesList={imagesList}/>\n                </div> \n                <div className={styles.message}><MessageButton name={unassignedJob.clientFirstName} contractorId={unassignedJob.clientId}/></div>\n                <div className={styles.paragraph}>\n                    <hr className={styles.hr1}/>  \n                    <h2 className={styles.header2}>About the job</h2>\n                    <p className={styles.about}>{jobDetails}</p>\n                    <hr className={styles.hr2}/>\n                </div> \n            </div>\n            )\n        };\n    function Tags(props) {\n        if (!props.tagname) return null;\n        return (\n            <box className={styles2.tag}>\n                <p className={styles2.tagfont}>{props.tagname}</p>\n            </box>\n        )\n        };\n        const renderTags = () => {\n            let i = 0;\n            let services = unassignedJob.serviceTypeList;\n            let tagsCount = services.length;\n            let tempTags = [];\n            while (i < tagsCount) {\n                tempTags.push(<Tags className={styles2.tag} tagname={services[i]} />);\n                i += 1;\n            };\n            return tempTags;\n        };\n        const renderLTags = () => {\n            let i = 0;\n            let lang = unassignedJob.languageList;\n            for(var j = 0 ; j < lang.length ; j++){\n                let temp= lang[j].toLowerCase()\n                lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n            }\n            let tagsCount = lang.length;\n            let tempTags = [];\n            while (i < tagsCount) {\n                tempTags.push(<Tags className={styles2.tag} tagname={lang[i]} />);\n                i += 1;\n            };\n            return tempTags;\n        };\n    if (loading) {\n        return <LoadingView/>;\n        }\n    return (   \n        <div className={styles.posting}>\n            <box className={styles.postingbox}>\n                    {renderTitle()}\n                <div className={styles.skillsbox}>\n                    <h1 className={styles.header2}>Required Skills</h1>\n                    <box className={styles2.servicetagbox}>\n                        {renderTags()}\n                    </box>\n                    <h1 className={styles.header2}>Required Languages</h1>\n                    <box className={styles2.servicetagbox}>\n                        {renderLTags()}\n                    </box>         \n                </div>\n            </box>\n            <NotFound setOpen={setOpen} open={open}/>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}