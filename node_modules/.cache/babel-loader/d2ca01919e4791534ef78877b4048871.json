{"ast":null,"code":"import axios from 'axios'; // import FormData from \"form-data\";\n\naxios.defaults.baseURL = 'http://ec2-3-96-139-77.ca-central-1.compute.amazonaws.com:8000'; // axios.defaults.baseURL = 'http://localhost:8000/'\n\naxios.defaults.headers.common['Content-Type'] = 'application/json;charset=UTF-8'; // axios.defaults.headers.common['Accept'] = 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9';\n// axios.defaults.headers.common['Authorization'] = 'Token 1c10a1a9d7d8973d860aac56c07a8fd588fb0527';\n// let userId=2\n// let USER_NAME='sagar'\n//SAMPLE USE CASE\n// const request = api.getArticle(match.params.id)\n// request\n//     .then(res => {\n//         this.setState({\n//             post: res.data.results\n//         })\n//     }).catch(err => toast.error(err.response.data.error))\n// axios.interceptors.request.use(config => {\n//   if (localStorage.getItem('access-token'))\n//     config.headers['access-token'] = localStorage.getItem('access-token')\n//   config.headers['Content-Type'] = 'application/json;charset=UTF-8';\n//   return config\n\nconst signInFunc = (user, callback = null) => {\n  axios.post('booktrades_api/login/', user).then(res => {\n    //Sample response: {\"token\":\"1c10a1a9d7d8973d860aac56c07a8fd588fb0527\",\n    //                    \"user_id\":2,\n    //                    \"email\":\"sagar.aryal.1996@gmail.com\"\n    // }\n    localStorage.setItem('access-token', res.data['token']);\n    localStorage.setItem('user_name', user['username']);\n    localStorage.setItem('usertype', res.data['usertype']);\n\n    if (res.data['usertype'] === 'Contractor') {\n      localStorage.setItem('user_id', res.data['contractor_id']);\n    } else {\n      localStorage.setItem('user_id', res.data['client_id']);\n    }\n\n    axios.defaults.headers.common['Authorization'] = `Token ${res.data['token']}`;\n    localStorage.setItem('user_token', localStorage.getItem('user_id'));\n    localStorage.setItem('contractor_id', res.data['contractor_id']);\n    localStorage.setItem('client_id', res.data['client_id']);\n\n    if (callback) {\n      callback(res.data);\n    }\n\n    sendMessagingTokenFunc('');\n  }).catch(err => callback(err));\n};\n\nconst sendMessagingTokenFunc = token => {\n  if (token !== '') {\n    localStorage.setItem('messaging-token', token);\n  }\n\n  if (localStorage.hasOwnProperty('messaging-token')) {\n    const data = {};\n    data['user_id'] = localStorage.getItem('user_token'); // token['username'] = localStorage.getItem('user_name');\n    // token['access-token'] = localStorage.getItem('access-token');\n\n    data['web_token'] = localStorage.getItem('messaging-token');\n    axios.post('api/msg_token/', data).then(res => {\n      console.log('INFO: Messaging token sent to backend');\n    }).catch(err => console.log('ERROR: Messaging token sending error'));\n  }\n};\n\nconst signUpFunc = (information, callback, err_callback) => {\n  information['username'] = information['email'];\n  information['firstName'] = information['first_name'];\n  information['lastName'] = information['last_name']; // if(information['service_types'] != null){\n  // information['serviceList'] = information['service_types'].join(',')\n  // information['serviceTypeList'] = information['service_types']\n  // }\n  // information['languageList'] = information['languages']\n\n  axios.post('booktrades_api/user/create/', information).then(res => {\n    localStorage.setItem('access-token', res.data['token']);\n    localStorage.setItem('user_name', res.data['email']);\n    localStorage.setItem('usertype', res.data['usertype']);\n\n    if (res.data['usertype'] === 'Contractor') {\n      localStorage.setItem('user_id', res.data['contractor_id']);\n    } else {\n      localStorage.setItem('user_id', res.data['client_id']);\n    }\n\n    axios.defaults.headers.common['Authorization'] = `Token ${res.data['token']}`;\n    localStorage.setItem('user_token', res.data['user_id']);\n    localStorage.setItem('contractor_id', res.data['contractor_id']);\n    localStorage.setItem('client_id', res.data['client_id']);\n    let originalResponse = res.data;\n    sendMessagingTokenFunc(''); //Uploading profile image\n\n    if (information.profile_image.length > 0) {\n      //Only one profile image can be uploaded\n      //Uploading image\n      let data = new FormData();\n\n      for (var k in res['data']['profile_upload_url']['fields']) {\n        data.append(k, res['data']['profile_upload_url']['fields'][k]);\n      }\n\n      data.append('file', information.profile_image[0]['file'], information.profile_image[0]['file'].fileName);\n      delete axios.defaults.headers.common['Authorization'];\n      axios.post(res.data['profile_upload_url']['url'], data, {\n        headers: {\n          'Accept': '*/*',\n          'Accept-Language': 'en-US,en;q=0.8',\n          'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n        }\n      }).then(res => {\n        console.log('Successfully uploaded');\n        callback(originalResponse);\n        axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n      }).catch(err => {\n        err_callback();\n        console.log(err);\n      });\n    } else {\n      callback(originalResponse);\n    }\n  }).catch(err => {\n    console.log(err);\n    err_callback();\n  });\n};\n\nlet all_languages = [];\nlet language_promise;\n\nif (all_languages === undefined || all_languages.length === 0) {\n  // array empty or does not exist\n  language_promise = axios.get('booktrades_api/languages/get_all/', {\n    params: {}\n  }).then(res => {\n    all_languages.push(...res.data);\n    return all_languages;\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nconst allLanguages = () => {\n  if (all_languages === undefined || all_languages.length === 0) {\n    // array empty or does not exist\n    return language_promise;\n  } else {\n    return all_languages;\n  }\n};\n\nlet service_types = [];\nlet service_promise;\n\nif (service_types === undefined || service_types.length === 0) {\n  // array empty or does not exist\n  service_promise = axios.get('booktrades_api/service_types/get_all/', {\n    params: {}\n  }).then(res => {\n    service_types.push(...res.data);\n    return service_types;\n  }).catch(err => {\n    console.log(err);\n  });\n}\n\nconst allServiceTypes = () => {\n  if (service_types === undefined || service_types.length === 0) {\n    // array empty or does not exist\n    return service_promise;\n  } else {\n    return service_types;\n  }\n};\n\nexport const getLatLng = address => {\n  delete axios.defaults.headers.common['Authorization'];\n  let endpoint = `https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=AIzaSyBQbOVpM2UKKRF82lw8OVr2KhKKysfjZSU`;\n  const promise = axios.get(endpoint);\n  axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n  return promise;\n};\nexport { allServiceTypes, allLanguages, service_types, all_languages };\nexport default {\n  // Signing\n  // user_name:USER_NAME, \n  // register: (user) => {\n  //   return axios.post('signing/signUp', user)\n  // },\n  serviceTypes: service_types,\n  languages: all_languages,\n  signIn: signInFunc,\n  signUp: signUpFunc,\n  // getGeoCode: (address) => {\n  //   return axios.get('https://maps.googleapis.com/maps/api/geocode/xml?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=YOUR_API_KEY'\n  // }\n  cancelSignUp: information => {\n    axios.post('booktrades_api/user/cancel/', information).then(res => {\n      console.log('success');\n    }).catch(res => {\n      // debugger;\n      console.log('error');\n    });\n    return;\n  },\n  sendMessagingToken: sendMessagingTokenFunc,\n  signOut: () => {\n    localStorage.removeItem('access-token');\n    localStorage.removeItem('usertype');\n  },\n  // // Chat\n  getMessages: receiverId => {\n    const headers = {\n      headers: {\n        Authorization: `Token ${localStorage.getItem('access-token')}`\n      }\n    };\n    return axios.get('api/messages/' + localStorage.getItem('user_token') + '/' + receiverId);\n  },\n  sendMessage: message_data => {\n    message_data['sender'] = localStorage.getItem('user_token');\n    const dt = new Date();\n    message_data['timestamp'] = dt.toISOString();\n    return axios.post('api/messages/' + localStorage.getItem('user_token') + '/' + message_data['receiver'], message_data);\n  },\n  getChats: () => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('api/user/' + localStorage.getItem('user_token'), {\n      params: {}\n    });\n  },\n  addUnassignedJob: (job_data, callback) => {\n    let originalRef = job_data.imageListStoreRef;\n    let imageList = job_data.imageListStoreRef; // We create a new list of only strings so backend knows how many images are being created\n\n    imageList = imageList.map(imageObj => {\n      return imageObj['data_url'].replace(/[^A-Z0-9]/ig, \"_\").slice(0, 30);\n    });\n    job_data.images = imageList;\n    job_data.imageListStoreRef1 = job_data.imageListStoreRef;\n    job_data.imageListStoreRef = '';\n    job_data['clientId'] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    axios.post('booktrades_api/unassigned_job/create_job', job_data).then(res => {\n      if (originalRef.length > 0) {\n        const files = {\n          'file': originalRef[0]['file']\n        };\n        let data = new FormData();\n\n        for (var k in res['data'][0]['fields']) {\n          data.append(k, res['data'][0]['fields'][k]);\n        }\n\n        data.append('file', originalRef[0]['file'], originalRef[0]['file'].name);\n        delete axios.defaults.headers.common['Authorization'];\n        axios.post(res['data'][0]['url'], data, {\n          headers: {\n            'Accept': '*/*',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n          }\n        }).then(res => {\n          axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n          callback(res.data);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        callback(res.data);\n      }\n\n      console.log('job was successfully posted!');\n    }).catch(err => console.log(err));\n    job_data.imageListStoreRef = job_data.imageListStoreRef1;\n  },\n  uploadImageToBucket: (job_data, response) => {// debugger;\n    // files = {'file': ('../testimage.jpg', f)}\n    // file axios.post('booktrades_api/unassinged_job/create_job', job_data)\n  },\n  //this is used for postingPage Headers aswell\n  getUnassignedJobs: contractor_id => {\n    var contractorID = { ...contractor_id\n    };\n    contractorID['id'] = localStorage.getItem('contractor_id');\n    contractorID['radius'] = 20000; // contractorID['services']=[\"idk\"];\n\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/unassigned_job/get_nearby_jobs/' + contractorID['id'] + '/', contractorID);\n  },\n  unassignedJob: contractorID => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/unassigned_job/' + contractorID['id'] + '/', contractorID);\n  },\n  getContractorProfiles: profileID => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/contractor/' + profileID['id'] + '/', profileID);\n  },\n  getClientProfiles: profileID => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/client/' + profileID['id'] + '/', profileID);\n  },\n  getProfiles: profileId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor') {\n      return axios.get('booktrades_api/contractor/' + profileId['id'] + '/', profileId);\n    } else {\n      return axios.get('booktrades_api/client/' + profileId['id'] + '/', profileId);\n    }\n  },\n  editProfileForBookmark: profileId => {\n    profileId['id'] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor') {\n      return axios.patch('booktrades_api/contractor/' + profileId['id'] + '/', profileId);\n    } else {\n      return axios.patch('booktrades_api/client/' + profileId['id'] + '/', profileId);\n    }\n  },\n  patchEditProfile: (profileId, callback) => {\n    profileId['id'] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    let endpoint = \"\";\n\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor') {\n      endpoint = 'booktrades_api/contractor/';\n    } else {\n      endpoint = 'booktrades_api/client/';\n    }\n\n    let image = profileId['image'];\n    profileId['image'] = null;\n    let video = profileId['video'];\n    profileId['video'] = null; // let totalSize = \n\n    axios.patch(endpoint + profileId['id'] + '/', profileId).then(res => {\n      let totalSize = 1;\n\n      if (video) {\n        totalSize += video.size;\n      }\n\n      if (image) {\n        totalSize += image.size;\n      }\n\n      if (typeof image !== \"undefined\" && image != null) {\n        let data = new FormData();\n\n        for (var k in res['data']['profile_upload_url']['fields']) {\n          data.append(k, res['data']['profile_upload_url']['fields'][k]);\n        }\n\n        data.append('file', image, image.name);\n        delete axios.defaults.headers.common['Authorization'];\n        axios.post(res['data']['profile_upload_url']['url'], data, {\n          headers: {\n            'Accept': '*/*',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n          },\n          onUploadProgress: data => {\n            //Set the progress value to show the progress bar\n            callback({\n              'type': 'PROGRESS',\n              'value': data.loaded / totalSize\n            });\n          }\n        }).then(res => {\n          if (typeof video == \"undefined\" || video == null) {\n            callback({\n              'type': 'SUCCESS',\n              'data': res.data\n            });\n          }\n\n          axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n        }).catch(err => {\n          console.log(err);\n          callback({\n            'type': 'ERROR',\n            'data': err\n          });\n        });\n      }\n\n      if (typeof video !== \"undefined\" && video != null) {\n        let data = new FormData();\n\n        for (var k in res['data']['profile_video_upload_url']['fields']) {\n          data.append(k, res['data']['profile_video_upload_url']['fields'][k]);\n        }\n\n        data.append('file', video, video.name);\n        delete axios.defaults.headers.common['Authorization'];\n        axios.post(res['data']['profile_video_upload_url']['url'], data, {\n          headers: {\n            'Accept': '*/*',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`\n          },\n          onUploadProgress: data => {\n            //Set the progress value to show the progress bar\n            callback({\n              'type': 'PROGRESS',\n              'value': data.loaded / totalSize\n            });\n          }\n        }).then(res => {\n          axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n          callback({\n            'type': 'SUCCESS',\n            'data': res.data\n          });\n        }).catch(err => {\n          console.log(err);\n          callback({\n            'type': 'ERROR',\n            'data': err\n          });\n        });\n      }\n\n      if ((typeof video == \"undefined\" || video == null) && (typeof image == \"undefined\" || image == null)) {\n        callback({\n          'type': 'SUCCESS',\n          'data': res.data\n        });\n      }\n\n      console.log('job was successfully posted!');\n    }).catch(err => {\n      console.log(err);\n      callback({\n        'type': 'ERROR',\n        'data': err\n      });\n    });\n  },\n  getNearByCProfiles: (filterBy, radius = 150) => {\n    // backend will use the default values and geoip if data not provided, update this to send from view\n    console.log(\"api\", filterBy);\n\n    if (!filterBy) {\n      filterBy = {};\n    } // filterBy['long'] = 20;\n    // filterBy['lat'] = 20;\n\n\n    filterBy['radius'] = radius; // filterBy['services']=[\"idk\"];\n    // axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n\n    return axios.post('booktrades_api/contractor/get_nearby_contractors/', filterBy);\n  },\n  getClientReview: () => {\n    var postingID = {};\n    postingID['id'] = 0;\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/client_review/client/' + postingID['id'] + '/', postingID);\n  },\n  addContractorReview: review_data => {\n    review_data.clientId = localStorage.getItem('user_id'); // review_data.contractorId = '0'\n    // review_data.completedJobId = '1'\n\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/contractor_review/add_review', review_data);\n  },\n  getContractorReview: profileId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/contractor_review/contractor/' + profileId['id']);\n  },\n  getUserType: profileId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/user/' + profileId['id'] + '/');\n  },\n  getActiveJobs: homeOId => {\n    var homeOId = {};\n    homeOId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/active_job/client/' + homeOId['id'] + '/');\n  },\n  getCActiveJobs: contractorId => {\n    var contractorId = {};\n    contractorId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/active_job/contractor/' + contractorId['id'] + '/');\n  },\n  getSingleActiveJob: jobId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/active_job/' + jobId['id'] + '/');\n  },\n  deleteSingleActiveJob: data => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.delete('booktrades_api/active_job/' + data['id'] + '/');\n  },\n  getCompletedJobs: homeOId => {\n    var homeOId = {};\n    homeOId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/completed_job/client/' + homeOId['id'] + '/');\n  },\n  getCCompletedJobs: contractorId => {\n    var contractorId = {};\n    contractorId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/completed_job/contractor/' + contractorId['id'] + '/');\n  },\n  getCCompletedJobsByClients: contractorId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/completed_job/contractor/' + contractorId['id'] + '/');\n  },\n  getSingleCompletedJob: jobId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/completed_job/' + jobId['id'] + '/');\n  },\n  deleteSingleCompletedJob: data => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.delete('booktrades_api/completed_job/' + data['id'] + '/');\n  },\n  moveActiveToComplete: jobId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/active_job/complete/' + jobId[\"id\"] + '/');\n  },\n  changePassword: data => {\n    data.username = localStorage.getItem('user_name'); // data.id_token= localStorage.getItem('access-token');\n\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/change_password/', data);\n  },\n  getSavedJobs: userId => {\n    var userId = {};\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/get_savedJobs/' + userId[\"id\"] + '/');\n  },\n  getPendingJobs: userId => {\n    var userId = {};\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor') {\n      return axios.get('booktrades_api/contractor/get_pending_jobs/' + userId[\"id\"] + '/');\n    } else {\n      return axios.get('booktrades_api/client/get_pending_jobs/' + userId[\"id\"] + '/');\n    }\n  },\n  assignUnassignedJobs: userId => {\n    // userId[\"clientId\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/unassigned_job/assign_job/' + userId[\"id\"] + '/' + userId['contractorId'], userId);\n  },\n  accepUnassignedJobs: userId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/unassigned_job/contractor/accept/' + userId[\"id\"] + '/', userId);\n  },\n  rejectUnassignedJobs: userId => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/unassigned_job/contractor/reject/' + userId[\"id\"] + '/', userId);\n  },\n  getAllUnassignedJobs: userId => {\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/unassigned_job/get_all_unassigned_jobs/' + userId[\"id\"] + '/', userId);\n  },\n  deleteJob: data => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.delete('booktrades_api/unassigned_job/delete_job/' + data[\"id\"] + '/', data);\n  },\n  editJob: data => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.patch('booktrades_api/unassigned_job/' + data[\"id\"] + '/', data);\n  },\n  deleteReview: data => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.delete('booktrades_api/contractor_review/delete_review/' + data[\"id\"], data);\n  },\n  getNotification: userId => {\n    var userId = {};\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.get('booktrades_api/notifications/' + localStorage.getItem('usertype').toLowerCase() + '/' + userId[\"id\"] + '/');\n  },\n  patchNotification: notification => {\n    var userId = {};\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.patch('booktrades_api/notifications/' + localStorage.getItem('usertype').toLowerCase() + '/' + userId[\"id\"] + '/', notification);\n  },\n  getPdf: data => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`;\n    return axios.post('booktrades_api/invoice/' + data[\"id\"] + '/', data.tempList);\n  }\n};","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/api/api.js"],"names":["axios","defaults","baseURL","headers","common","signInFunc","user","callback","post","then","res","localStorage","setItem","data","getItem","sendMessagingTokenFunc","catch","err","token","hasOwnProperty","console","log","signUpFunc","information","err_callback","originalResponse","profile_image","length","FormData","k","append","fileName","_boundary","all_languages","language_promise","undefined","get","params","push","allLanguages","service_types","service_promise","allServiceTypes","getLatLng","address","endpoint","promise","serviceTypes","languages","signIn","signUp","cancelSignUp","sendMessagingToken","signOut","removeItem","getMessages","receiverId","Authorization","sendMessage","message_data","dt","Date","toISOString","getChats","addUnassignedJob","job_data","originalRef","imageListStoreRef","imageList","map","imageObj","replace","slice","images","imageListStoreRef1","files","name","uploadImageToBucket","response","getUnassignedJobs","contractor_id","contractorID","unassignedJob","getContractorProfiles","profileID","getClientProfiles","getProfiles","profileId","editProfileForBookmark","patch","patchEditProfile","image","video","totalSize","size","onUploadProgress","loaded","getNearByCProfiles","filterBy","radius","getClientReview","postingID","addContractorReview","review_data","clientId","getContractorReview","getUserType","getActiveJobs","homeOId","getCActiveJobs","contractorId","getSingleActiveJob","jobId","deleteSingleActiveJob","delete","getCompletedJobs","getCCompletedJobs","getCCompletedJobsByClients","getSingleCompletedJob","deleteSingleCompletedJob","moveActiveToComplete","changePassword","username","getSavedJobs","userId","getPendingJobs","assignUnassignedJobs","accepUnassignedJobs","rejectUnassignedJobs","getAllUnassignedJobs","deleteJob","editJob","deleteReview","getNotification","toLowerCase","patchNotification","notification","getPdf","tempList"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,gEAAzB,C,CAEA;;AACAF,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgD,gCAAhD,C,CACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAG,CAACC,IAAD,EAAOC,QAAQ,GAAC,IAAhB,KAAyB;AAC1CP,EAAAA,KAAK,CAACQ,IAAN,CAAW,uBAAX,EAAoCF,IAApC,EAA0CG,IAA1C,CAA+CC,GAAG,IAAI;AACpD;AACF;AACA;AACA;AACEC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,GAAG,CAACG,IAAJ,CAAS,OAAT,CAArC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCN,IAAI,CAAC,UAAD,CAAtC;AACAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,GAAG,CAACG,IAAJ,CAAS,UAAT,CAAjC;;AAEA,QAAGH,GAAG,CAACG,IAAJ,CAAS,UAAT,MAAyB,YAA5B,EAAyC;AACvCF,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,GAAG,CAACG,IAAJ,CAAS,eAAT,CAAhC;AACD,KAFD,MAGI;AACFF,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,GAAG,CAACG,IAAJ,CAAS,WAAT,CAAhC;AACD;;AACDb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQM,GAAG,CAACG,IAAJ,CAAS,OAAT,CAAkB,EAA5E;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCD,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAnC;AACAH,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,GAAG,CAACG,IAAJ,CAAS,eAAT,CAAtC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,GAAG,CAACG,IAAJ,CAAS,WAAT,CAAlC;;AACA,QAAIN,QAAJ,EAAa;AACXA,MAAAA,QAAQ,CAACG,GAAG,CAACG,IAAL,CAAR;AACD;;AACDE,IAAAA,sBAAsB,CAAC,EAAD,CAAtB;AACD,GAvBD,EAuBGC,KAvBH,CAuBSC,GAAG,IAAIV,QAAQ,CAACU,GAAD,CAvBxB;AAwBD,CAzBD;;AA2BA,MAAMF,sBAAsB,GAAIG,KAAD,IAAW;AACxC,MAAIA,KAAK,KAAK,EAAd,EAAiB;AACfP,IAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCM,KAAxC;AACD;;AACD,MAAKP,YAAY,CAACQ,cAAb,CAA4B,iBAA5B,CAAL,EAAoD;AAClD,UAAMN,IAAI,GAAG,EAAb;AACAA,IAAAA,IAAI,CAAC,SAAD,CAAJ,GAAkBF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAlB,CAFkD,CAGlD;AACA;;AACAD,IAAAA,IAAI,CAAC,WAAD,CAAJ,GAAoBF,YAAY,CAACG,OAAb,CAAqB,iBAArB,CAApB;AACAd,IAAAA,KAAK,CAACQ,IAAN,CAAW,gBAAX,EAA6BK,IAA7B,EAAmCJ,IAAnC,CAAwCC,GAAG,IAAI;AAC7CU,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD,KAFD,EAEGL,KAFH,CAESC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAFhB;AAGD;AACF,CAdD;;AAgBA,MAAMC,UAAU,GAAG,CAACC,WAAD,EAAahB,QAAb,EAAuBiB,YAAvB,KAAwC;AACzDD,EAAAA,WAAW,CAAC,UAAD,CAAX,GAA0BA,WAAW,CAAC,OAAD,CAArC;AACAA,EAAAA,WAAW,CAAC,WAAD,CAAX,GAA2BA,WAAW,CAAC,YAAD,CAAtC;AACAA,EAAAA,WAAW,CAAC,UAAD,CAAX,GAA0BA,WAAW,CAAC,WAAD,CAArC,CAHyD,CAIzD;AACE;AAEF;AACA;AACA;;AACAvB,EAAAA,KAAK,CAACQ,IAAN,CAAW,6BAAX,EAA0Ce,WAA1C,EAAuDd,IAAvD,CAA4DC,GAAG,IAAI;AACjEC,IAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCF,GAAG,CAACG,IAAJ,CAAS,OAAT,CAArC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,GAAG,CAACG,IAAJ,CAAS,OAAT,CAAlC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,GAAG,CAACG,IAAJ,CAAS,UAAT,CAAjC;;AACA,QAAGH,GAAG,CAACG,IAAJ,CAAS,UAAT,MAAyB,YAA5B,EAAyC;AACvCF,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,GAAG,CAACG,IAAJ,CAAS,eAAT,CAAhC;AACD,KAFD,MAGI;AACFF,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCF,GAAG,CAACG,IAAJ,CAAS,WAAT,CAAhC;AACD;;AACDb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQM,GAAG,CAACG,IAAJ,CAAS,OAAT,CAAkB,EAA5E;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCF,GAAG,CAACG,IAAJ,CAAS,SAAT,CAAnC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCF,GAAG,CAACG,IAAJ,CAAS,eAAT,CAAtC;AACAF,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCF,GAAG,CAACG,IAAJ,CAAS,WAAT,CAAlC;AAEA,QAAIY,gBAAgB,GAAGf,GAAG,CAACG,IAA3B;AACAE,IAAAA,sBAAsB,CAAC,EAAD,CAAtB,CAhBiE,CAiBjE;;AACA,QAAIQ,WAAW,CAACG,aAAZ,CAA0BC,MAA1B,GAAmC,CAAvC,EAAyC;AAAE;AACzC;AACA,UAAId,IAAI,GAAG,IAAIe,QAAJ,EAAX;;AACA,WAAK,IAAIC,CAAT,IAAcnB,GAAG,CAAC,MAAD,CAAH,CAAY,oBAAZ,EAAkC,QAAlC,CAAd,EAA2D;AACzDG,QAAAA,IAAI,CAACiB,MAAL,CAAYD,CAAZ,EAAenB,GAAG,CAAC,MAAD,CAAH,CAAY,oBAAZ,EAAkC,QAAlC,EAA4CmB,CAA5C,CAAf;AACD;;AAEDhB,MAAAA,IAAI,CAACiB,MAAL,CAAY,MAAZ,EAAoBP,WAAW,CAACG,aAAZ,CAA0B,CAA1B,EAA6B,MAA7B,CAApB,EAA0DH,WAAW,CAACG,aAAZ,CAA0B,CAA1B,EAA6B,MAA7B,EAAqCK,QAA/F;AACA,aAAO/B,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAJ,MAAAA,KAAK,CAACQ,IAAN,CACEE,GAAG,CAACG,IAAJ,CAAS,oBAAT,EAA+B,KAA/B,CADF,EAEEA,IAFF,EAGE;AACEV,QAAAA,OAAO,EAAE;AACP,oBAAU,KADH;AAEP,6BAAmB,gBAFZ;AAGP,0BAAiB,iCAAgCU,IAAI,CAACmB,SAAU;AAHzD;AADX,OAHF,EASKvB,IATL,CASUC,GAAG,IAAI;AACbU,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACAd,QAAAA,QAAQ,CAACkB,gBAAD,CAAR;AACAzB,QAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACH,OAbD,EAaGE,KAbH,CAaSC,GAAG,IAAI;AACdO,QAAAA,YAAY;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,OAhBD;AAiBD,KA1BD,MA0BK;AACHV,MAAAA,QAAQ,CAACkB,gBAAD,CAAR;AACD;AACF,GA/CD,EA+CGT,KA/CH,CA+CUC,GAAD,IAAS;AAChBG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAO,IAAAA,YAAY;AACb,GAlDD;AAmDD,CA7DD;;AA+DA,IAAIS,aAAa,GAAG,EAApB;AACA,IAAIC,gBAAJ;;AACA,IAAID,aAAa,KAAKE,SAAlB,IAA+BF,aAAa,CAACN,MAAd,KAAyB,CAA5D,EAA+D;AAC7D;AACAO,EAAAA,gBAAgB,GAAGlC,KAAK,CAACoC,GAAN,CAAU,mCAAV,EAA+C;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA/C,EAA+D5B,IAA/D,CAAoEC,GAAG,IAAI;AAC5FuB,IAAAA,aAAa,CAACK,IAAd,CAAmB,GAAG5B,GAAG,CAACG,IAA1B;AACA,WAAOoB,aAAP;AACD,GAHkB,EAGhBjB,KAHgB,CAGVC,GAAG,IAAI;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAED,GANkB,CAAnB;AAOD;;AAED,MAAMsB,YAAY,GAAG,MAAM;AACzB,MAAIN,aAAa,KAAKE,SAAlB,IAA+BF,aAAa,CAACN,MAAd,KAAyB,CAA5D,EAA+D;AAC7D;AACA,WAAOO,gBAAP;AACD,GAHD,MAGK;AACH,WAAOD,aAAP;AACD;AACF,CAPD;;AASA,IAAIO,aAAa,GAAG,EAApB;AACA,IAAIC,eAAJ;;AACA,IAAID,aAAa,KAAKL,SAAlB,IAA+BK,aAAa,CAACb,MAAd,KAAyB,CAA5D,EAA+D;AAC7D;AACAc,EAAAA,eAAe,GAAGzC,KAAK,CAACoC,GAAN,CAAU,uCAAV,EAAmD;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAnD,EAAmE5B,IAAnE,CAAwEC,GAAG,IAAI;AAC/F8B,IAAAA,aAAa,CAACF,IAAd,CAAmB,GAAG5B,GAAG,CAACG,IAA1B;AACA,WAAO2B,aAAP;AACD,GAHiB,EAGfxB,KAHe,CAGTC,GAAG,IAAI;AACdG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,GALiB,CAAlB;AAMD;;AACD,MAAMyB,eAAe,GAAG,MAAM;AAC5B,MAAIF,aAAa,KAAKL,SAAlB,IAA+BK,aAAa,CAACb,MAAd,KAAyB,CAA5D,EAA+D;AAC7D;AACA,WAAOc,eAAP;AACD,GAHD,MAGK;AACH,WAAOD,aAAP;AACD;AACF,CAPD;;AASA,OAAO,MAAMG,SAAS,GAAIC,OAAD,IAAa;AACpC,SAAO5C,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACA,MAAIyC,QAAQ,GAAI,6DAA4DD,OAAQ,8CAApF;AACA,QAAME,OAAO,GAAG9C,KAAK,CAACoC,GAAN,CAAUS,QAAV,CAAhB;AACA7C,EAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,SAAOgC,OAAP;AACD,CANM;AAQP,SAAQJ,eAAR,EAAyBH,YAAzB,EAAuCC,aAAvC,EAAsDP,aAAtD;AAEA,eAAe;AACb;AACA;AACA;AACA;AACA;AAEAc,EAAAA,YAAY,EAAEP,aAPD;AASbQ,EAAAA,SAAS,EAAEf,aATE;AAWbgB,EAAAA,MAAM,EAAE5C,UAXK;AAab6C,EAAAA,MAAM,EAAE5B,UAbK;AAeb;AACA;AACA;AAEA6B,EAAAA,YAAY,EAAG5B,WAAD,IAAiB;AAC7BvB,IAAAA,KAAK,CAACQ,IAAN,CAAW,6BAAX,EAA0Ce,WAA1C,EAAuDd,IAAvD,CAA6DC,GAAD,IAAO;AACjEU,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAFD,EAEGL,KAFH,CAEUN,GAAD,IAAO;AACd;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KALD;AAMA;AACD,GA3BY;AA6Bb+B,EAAAA,kBAAkB,EAAErC,sBA7BP;AA+BbsC,EAAAA,OAAO,EAAE,MAAM;AACb1C,IAAAA,YAAY,CAAC2C,UAAb,CAAwB,cAAxB;AACA3C,IAAAA,YAAY,CAAC2C,UAAb,CAAwB,UAAxB;AACD,GAlCY;AAoCb;AACAC,EAAAA,WAAW,EAAGC,UAAD,IAAgB;AAC3B,UAAMrD,OAAO,GAAG;AAAEA,MAAAA,OAAO,EAAC;AAACsD,QAAAA,aAAa,EAAG,SAAQ9C,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC;AAA9D;AAAV,KAAhB;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,kBAAgBzB,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAhB,GAAmD,GAAnD,GAAuD0C,UAAjE,CAAP;AACD,GAxCY;AA0CbE,EAAAA,WAAW,EAAGC,YAAD,IAAkB;AAC7BA,IAAAA,YAAY,CAAC,QAAD,CAAZ,GAAuBhD,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAvB;AACA,UAAM8C,EAAE,GAAG,IAAIC,IAAJ,EAAX;AACAF,IAAAA,YAAY,CAAC,WAAD,CAAZ,GAA2BC,EAAE,CAACE,WAAH,EAA3B;AACA,WAAO9D,KAAK,CAACQ,IAAN,CAAW,kBAAgBG,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAhB,GAAmD,GAAnD,GAAuD6C,YAAY,CAAC,UAAD,CAA9E,EAA4FA,YAA5F,CAAP;AACD,GA/CY;AAiDbI,EAAAA,QAAQ,EAAE,MAAM;AACd/D,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,cAAYzB,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAtB,EAA0D;AAAEuB,MAAAA,MAAM,EAAE;AAAV,KAA1D,CAAP;AACD,GApDY;AAsDb2B,EAAAA,gBAAgB,EAAE,CAACC,QAAD,EAAU1D,QAAV,KAAuB;AACvC,QAAI2D,WAAW,GAAGD,QAAQ,CAACE,iBAA3B;AACA,QAAIC,SAAS,GAAGH,QAAQ,CAACE,iBAAzB,CAFuC,CAGvC;;AACAC,IAAAA,SAAS,GAAGA,SAAS,CAACC,GAAV,CAAcC,QAAQ,IAAI;AACpC,aAAOA,QAAQ,CAAC,UAAD,CAAR,CAAqBC,OAArB,CAA6B,aAA7B,EAA4C,GAA5C,EAAiDC,KAAjD,CAAuD,CAAvD,EAAyD,EAAzD,CAAP;AACD,KAFW,CAAZ;AAGAP,IAAAA,QAAQ,CAACQ,MAAT,GAAiBL,SAAjB;AACAH,IAAAA,QAAQ,CAACS,kBAAT,GAA8BT,QAAQ,CAACE,iBAAvC;AACAF,IAAAA,QAAQ,CAACE,iBAAT,GAA6B,EAA7B;AACAF,IAAAA,QAAQ,CAAC,UAAD,CAAR,GAAuBtD,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAvB;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACAd,IAAAA,KAAK,CAACQ,IAAN,CAAW,0CAAX,EAAuDyD,QAAvD,EAAiExD,IAAjE,CAAsEC,GAAG,IAAI;AAC3E,UAAIwD,WAAW,CAACvC,MAAZ,GAAqB,CAAzB,EAA2B;AACzB,cAAMgD,KAAK,GAAG;AAAC,kBAAQT,WAAW,CAAC,CAAD,CAAX,CAAe,MAAf;AAAT,SAAd;AACA,YAAIrD,IAAI,GAAG,IAAIe,QAAJ,EAAX;;AACA,aAAK,IAAIC,CAAT,IAAcnB,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,QAAf,CAAd,EAAwC;AACtCG,UAAAA,IAAI,CAACiB,MAAL,CAAYD,CAAZ,EAAenB,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,QAAf,EAAyBmB,CAAzB,CAAf;AACD;;AACDhB,QAAAA,IAAI,CAACiB,MAAL,CAAY,MAAZ,EAAoBoC,WAAW,CAAC,CAAD,CAAX,CAAe,MAAf,CAApB,EAA4CA,WAAW,CAAC,CAAD,CAAX,CAAe,MAAf,EAAuBU,IAAnE;AACA,eAAO5E,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAJ,QAAAA,KAAK,CAACQ,IAAN,CACIE,GAAG,CAAC,MAAD,CAAH,CAAY,CAAZ,EAAe,KAAf,CADJ,EAEIG,IAFJ,EAGI;AACEV,UAAAA,OAAO,EAAE;AACP,sBAAU,KADH;AAEP,+BAAmB,gBAFZ;AAGP,4BAAiB,iCAAgCU,IAAI,CAACmB,SAAU;AAHzD;AADX,SAHJ,EASOvB,IATP,CASYC,GAAG,IAAI;AACbV,UAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACAP,UAAAA,QAAQ,CAACG,GAAG,CAACG,IAAL,CAAR;AACH,SAZH,EAYKG,KAZL,CAYWC,GAAG,IAAI;AACdG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACD,SAdH;AAcM,OAtBR,MAuBM;AACFV,QAAAA,QAAQ,CAACG,GAAG,CAACG,IAAL,CAAR;AACD;;AACHO,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AAED,KA7BD,EA6BGL,KA7BH,CA6BSC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CA7BhB;AA8BAgD,IAAAA,QAAQ,CAACE,iBAAT,GAA6BF,QAAQ,CAACS,kBAAtC;AAED,GAlGY;AAoGbG,EAAAA,mBAAmB,EAAE,CAACZ,QAAD,EAAUa,QAAV,KAAuB,CAC1C;AACA;AACA;AACD,GAxGY;AAyGf;AACEC,EAAAA,iBAAiB,EAAGC,aAAD,IAAkB;AACnC,QAAIC,YAAY,GAAG,EAAC,GAAGD;AAAJ,KAAnB;AACAC,IAAAA,YAAY,CAAC,IAAD,CAAZ,GAAoBtE,YAAY,CAACG,OAAb,CAAqB,eAArB,CAApB;AACAmE,IAAAA,YAAY,CAAC,QAAD,CAAZ,GAAuB,KAAvB,CAHmC,CAInC;;AACAjF,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,mDAAkDyE,YAAY,CAAC,IAAD,CAA9D,GAAuE,GAAlF,EAAuFA,YAAvF,CAAP;AACD,GAjHY;AAmHbC,EAAAA,aAAa,EAAGD,YAAD,IAAiB;AAC9BjF,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,mCAAkC6C,YAAY,CAAC,IAAD,CAA9C,GAAuD,GAAjE,EAAsEA,YAAtE,CAAP;AACD,GAtHY;AAwHbE,EAAAA,qBAAqB,EAAGC,SAAD,IAAe;AACpCpF,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,+BAA+BgD,SAAS,CAAC,IAAD,CAAxC,GAAiD,GAA3D,EAAgEA,SAAhE,CAAP;AACD,GA3HY;AA4HbC,EAAAA,iBAAiB,EAAGD,SAAD,IAAe;AAChCpF,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,2BAA2BgD,SAAS,CAAC,IAAD,CAApC,GAA6C,GAAvD,EAA4DA,SAA5D,CAAP;AACD,GA/HY;AAiIbE,EAAAA,WAAW,EAAGC,SAAD,IAAe;AAC1BvF,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;;AACA,QAAIH,YAAY,CAACG,OAAb,CAAqB,cAArB,KAAwCH,YAAY,CAACG,OAAb,CAAqB,UAArB,MAAqC,YAAjF,EAA8F;AAC5F,aAAOd,KAAK,CAACoC,GAAN,CAAU,+BAA+BmD,SAAS,CAAC,IAAD,CAAxC,GAAiD,GAA3D,EAAgEA,SAAhE,CAAP;AACD,KAFD,MAGI;AACF,aAAOvF,KAAK,CAACoC,GAAN,CAAU,2BAA2BmD,SAAS,CAAC,IAAD,CAApC,GAA6C,GAAvD,EAA4DA,SAA5D,CAAP;AACD;AACF,GAzIY;AA2IbC,EAAAA,sBAAsB,EAAGD,SAAD,IAAe;AACrCA,IAAAA,SAAS,CAAC,IAAD,CAAT,GAAiB5E,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAjB;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;;AACA,QAAIH,YAAY,CAACG,OAAb,CAAqB,cAArB,KAAwCH,YAAY,CAACG,OAAb,CAAqB,UAArB,MAAqC,YAAjF,EAA8F;AAC5F,aAAOd,KAAK,CAACyF,KAAN,CAAY,+BAA+BF,SAAS,CAAC,IAAD,CAAxC,GAAiD,GAA7D,EAAkEA,SAAlE,CAAP;AACD,KAFD,MAGI;AACF,aAAOvF,KAAK,CAACyF,KAAN,CAAY,2BAA2BF,SAAS,CAAC,IAAD,CAApC,GAA6C,GAAzD,EAA8DA,SAA9D,CAAP;AACD;AACF,GApJY;AAsJbG,EAAAA,gBAAgB,EAAE,CAACH,SAAD,EAAYhF,QAAZ,KAAyB;AACzCgF,IAAAA,SAAS,CAAC,IAAD,CAAT,GAAiB5E,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAjB;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,QAAI+B,QAAQ,GAAE,EAAd;;AACA,QAAIlC,YAAY,CAACG,OAAb,CAAqB,cAArB,KAAwCH,YAAY,CAACG,OAAb,CAAqB,UAArB,MAAqC,YAAjF,EAA8F;AAC5F+B,MAAAA,QAAQ,GAAG,4BAAX;AACD,KAFD,MAGI;AACFA,MAAAA,QAAQ,GAAG,wBAAX;AACD;;AACD,QAAI8C,KAAK,GAAGJ,SAAS,CAAC,OAAD,CAArB;AACAA,IAAAA,SAAS,CAAC,OAAD,CAAT,GAAqB,IAArB;AACA,QAAIK,KAAK,GAAGL,SAAS,CAAC,OAAD,CAArB;AACAA,IAAAA,SAAS,CAAC,OAAD,CAAT,GAAqB,IAArB,CAbyC,CAczC;;AACAvF,IAAAA,KAAK,CAACyF,KAAN,CAAY5C,QAAQ,GAAG0C,SAAS,CAAC,IAAD,CAApB,GAA6B,GAAzC,EAA8CA,SAA9C,EAAyD9E,IAAzD,CAA8DC,GAAG,IAAI;AACnE,UAAImF,SAAS,GAAG,CAAhB;;AACA,UAAID,KAAJ,EAAU;AACRC,QAAAA,SAAS,IAAID,KAAK,CAACE,IAAnB;AACD;;AACD,UAAIH,KAAJ,EAAU;AACRE,QAAAA,SAAS,IAAIF,KAAK,CAACG,IAAnB;AACD;;AACD,UAAI,OAAOH,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,IAAI,IAA7C,EAAkD;AAChD,YAAI9E,IAAI,GAAG,IAAIe,QAAJ,EAAX;;AACA,aAAK,IAAIC,CAAT,IAAcnB,GAAG,CAAC,MAAD,CAAH,CAAY,oBAAZ,EAAkC,QAAlC,CAAd,EAA2D;AACzDG,UAAAA,IAAI,CAACiB,MAAL,CAAYD,CAAZ,EAAenB,GAAG,CAAC,MAAD,CAAH,CAAY,oBAAZ,EAAkC,QAAlC,EAA4CmB,CAA5C,CAAf;AACD;;AACDhB,QAAAA,IAAI,CAACiB,MAAL,CAAY,MAAZ,EAAoB6D,KAApB,EAA2BA,KAAK,CAACf,IAAjC;AACA,eAAO5E,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAJ,QAAAA,KAAK,CAACQ,IAAN,CACIE,GAAG,CAAC,MAAD,CAAH,CAAY,oBAAZ,EAAkC,KAAlC,CADJ,EAEIG,IAFJ,EAGI;AACEV,UAAAA,OAAO,EAAE;AACP,sBAAU,KADH;AAEP,+BAAmB,gBAFZ;AAGP,4BAAiB,iCAAgCU,IAAI,CAACmB,SAAU;AAHzD,WADX;AAME+D,UAAAA,gBAAgB,EAAElF,IAAI,IAAI;AACxB;AACAN,YAAAA,QAAQ,CAAC;AACP,sBAAQ,UADD;AAEP,uBAAUM,IAAI,CAACmF,MAAL,GAAcH;AAFjB,aAAD,CAAR;AAID;AAZH,SAHJ,EAgBOpF,IAhBP,CAgBYC,GAAG,IAAI;AACb,cAAI,OAAOkF,KAAP,IAAgB,WAAhB,IAA+BA,KAAK,IAAI,IAA5C,EAAiD;AAC/CrF,YAAAA,QAAQ,CAAC;AACP,sBAAQ,SADD;AAEP,sBAAQG,GAAG,CAACG;AAFL,aAAD,CAAR;AAID;;AACDb,UAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AAEH,SAzBH,EAyBKE,KAzBL,CAyBWC,GAAG,IAAI;AACdG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEAV,UAAAA,QAAQ,CAAC;AACP,oBAAQ,OADD;AAEP,oBAAQU;AAFD,WAAD,CAAR;AAID,SAhCH;AAiCD;;AAED,UAAI,OAAO2E,KAAP,KAAiB,WAAjB,IAAgCA,KAAK,IAAI,IAA7C,EAAkD;AAChD,YAAI/E,IAAI,GAAG,IAAIe,QAAJ,EAAX;;AACA,aAAK,IAAIC,CAAT,IAAcnB,GAAG,CAAC,MAAD,CAAH,CAAY,0BAAZ,EAAwC,QAAxC,CAAd,EAAiE;AAC/DG,UAAAA,IAAI,CAACiB,MAAL,CAAYD,CAAZ,EAAenB,GAAG,CAAC,MAAD,CAAH,CAAY,0BAAZ,EAAwC,QAAxC,EAAkDmB,CAAlD,CAAf;AACD;;AACDhB,QAAAA,IAAI,CAACiB,MAAL,CAAY,MAAZ,EAAoB8D,KAApB,EAA2BA,KAAK,CAAChB,IAAjC;AACA,eAAO5E,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,CAAP;AACAJ,QAAAA,KAAK,CAACQ,IAAN,CACIE,GAAG,CAAC,MAAD,CAAH,CAAY,0BAAZ,EAAwC,KAAxC,CADJ,EAEIG,IAFJ,EAGI;AACEV,UAAAA,OAAO,EAAE;AACP,sBAAU,KADH;AAEP,+BAAmB,gBAFZ;AAGP,4BAAiB,iCAAgCU,IAAI,CAACmB,SAAU;AAHzD,WADX;AAME+D,UAAAA,gBAAgB,EAAElF,IAAI,IAAI;AACxB;AACAN,YAAAA,QAAQ,CAAC;AACP,sBAAQ,UADD;AAEP,uBAAUM,IAAI,CAACmF,MAAL,GAAcH;AAFjB,aAAD,CAAR;AAID;AAZH,SAHJ,EAgBOpF,IAhBP,CAgBYC,GAAG,IAAI;AACbV,UAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACAP,UAAAA,QAAQ,CAAC;AACP,oBAAQ,SADD;AAEP,oBAAQG,GAAG,CAACG;AAFL,WAAD,CAAR;AAIH,SAtBH,EAsBKG,KAtBL,CAsBWC,GAAG,IAAI;AACdG,UAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAV,UAAAA,QAAQ,CAAC;AACP,oBAAQ,OADD;AAEP,oBAAQU;AAFD,WAAD,CAAR;AAID,SA5BH;AA6BD;;AAED,UAAI,CAAC,OAAO2E,KAAP,IAAgB,WAAhB,IAA+BA,KAAK,IAAI,IAAzC,MAAmD,OAAOD,KAAP,IAAgB,WAAhB,IAA+BA,KAAK,IAAI,IAA3F,CAAJ,EAAsG;AACpGpF,QAAAA,QAAQ,CAAC;AACP,kBAAQ,SADD;AAEP,kBAAQG,GAAG,CAACG;AAFL,SAAD,CAAR;AAID;;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KA/FD,EA+FGL,KA/FH,CA+FSC,GAAG,IAAI;AACdG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAV,MAAAA,QAAQ,CAAC;AACP,gBAAQ,OADD;AAEP,gBAAQU;AAFD,OAAD,CAAR;AAID,KArGD;AAuGD,GA5QY;AA8QbgF,EAAAA,kBAAkB,EAAE,CAACC,QAAD,EAAWC,MAAM,GAAC,GAAlB,KAA0B;AAC5C;AACA/E,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmB6E,QAAnB;;AACA,QAAI,CAACA,QAAL,EAAc;AACZA,MAAAA,QAAQ,GAAG,EAAX;AACD,KAL2C,CAM5C;AACA;;;AACAA,IAAAA,QAAQ,CAAC,QAAD,CAAR,GAAmBC,MAAnB,CAR4C,CAS5C;AACA;;AACA,WAAOnG,KAAK,CAACQ,IAAN,CAAW,mDAAX,EAAgE0F,QAAhE,CAAP;AAED,GA3RY;AA6RbE,EAAAA,eAAe,EAAE,MAAK;AACpB,QAAIC,SAAS,GAAG,EAAhB;AACAA,IAAAA,SAAS,CAAC,IAAD,CAAT,GAAiB,CAAjB;AACArG,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,yCAAwCiE,SAAS,CAAC,IAAD,CAAjD,GAA0D,GAApE,EAA0EA,SAA1E,CAAP;AACD,GAlSY;AAoSbC,EAAAA,mBAAmB,EAAGC,WAAD,IAAiB;AACpCA,IAAAA,WAAW,CAACC,QAAZ,GAAuB7F,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAvB,CADoC,CAEpC;AACA;;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,6CAAX,EAA0D+F,WAA1D,CAAP;AACD,GA1SY;AA4SbE,EAAAA,mBAAmB,EAAGlB,SAAD,IAAc;AAEjCvF,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,iDAAgDmD,SAAS,CAAC,IAAD,CAAnE,CAAP;AACD,GAhTY;AAiTbmB,EAAAA,WAAW,EAAGnB,SAAD,IAAc;AACzBvF,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,yBAAyBmD,SAAS,CAAC,IAAD,CAAlC,GAA2C,GAArD,CAAP;AACD,GApTY;AAsTboB,EAAAA,aAAa,EAAGC,OAAD,IAAY;AACzB,QAAIA,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAAC,IAAD,CAAP,GAAgBjG,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAhB;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,sCAAqCwE,OAAO,CAAC,IAAD,CAA5C,GAAqD,GAA/D,CAAP;AACD,GA3TY;AA4TbC,EAAAA,cAAc,EAAGC,YAAD,IAAiB;AAC/B,QAAIA,YAAY,GAAG,EAAnB;AACAA,IAAAA,YAAY,CAAC,IAAD,CAAZ,GAAqBnG,YAAY,CAACG,OAAb,CAAqB,SAArB,CAArB;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,0CAAyC0E,YAAY,CAAC,IAAD,CAArD,GAA4D,GAAtE,CAAP;AACD,GAjUY;AAmUbC,EAAAA,kBAAkB,EAAGC,KAAD,IAAU;AAC5BhH,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,+BAA8B4E,KAAK,CAAC,IAAD,CAAnC,GAA0C,GAApD,CAAP;AACD,GAtUY;AAwUbC,EAAAA,qBAAqB,EAAGpG,IAAD,IAAS;AAC9Bb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACkH,MAAN,CAAa,+BAA8BrG,IAAI,CAAC,IAAD,CAAlC,GAAyC,GAAtD,CAAP;AACD,GA3UY;AA6UbsG,EAAAA,gBAAgB,EAAGP,OAAD,IAAY;AAC5B,QAAIA,OAAO,GAAG,EAAd;AACAA,IAAAA,OAAO,CAAC,IAAD,CAAP,GAAgBjG,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAhB;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,yCAAwCwE,OAAO,CAAC,IAAD,CAA/C,GAAwD,GAAlE,CAAP;AACD,GAlVY;AAmVbQ,EAAAA,iBAAiB,EAAGN,YAAD,IAAiB;AAClC,QAAIA,YAAY,GAAG,EAAnB;AACAA,IAAAA,YAAY,CAAC,IAAD,CAAZ,GAAqBnG,YAAY,CAACG,OAAb,CAAqB,SAArB,CAArB;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,6CAA4C0E,YAAY,CAAC,IAAD,CAAxD,GAA+D,GAAzE,CAAP;AACD,GAxVY;AAyVbO,EAAAA,0BAA0B,EAAGP,YAAD,IAAiB;AAC3C9G,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,6CAA4C0E,YAAY,CAAC,IAAD,CAAxD,GAA+D,GAAzE,CAAP;AACD,GA5VY;AA8VbQ,EAAAA,qBAAqB,EAAGN,KAAD,IAAU;AAC/BhH,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,kCAAiC4E,KAAK,CAAC,IAAD,CAAtC,GAA6C,GAAvD,CAAP;AACD,GAjWY;AAkWbO,EAAAA,wBAAwB,EAAG1G,IAAD,IAAS;AACjCb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACkH,MAAN,CAAa,kCAAiCrG,IAAI,CAAC,IAAD,CAArC,GAA4C,GAAzD,CAAP;AACD,GArWY;AAuWb2G,EAAAA,oBAAoB,EAAGR,KAAD,IAAU;AAC9BhH,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,wCAAuCwG,KAAK,CAAC,IAAD,CAA5C,GAAoD,GAA/D,CAAP;AACD,GA1WY;AA2WbS,EAAAA,cAAc,EAAG5G,IAAD,IAAS;AACvBA,IAAAA,IAAI,CAAC6G,QAAL,GAAe/G,YAAY,CAACG,OAAb,CAAqB,WAArB,CAAf,CADuB,CAEvB;;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,iCAAX,EAA8CK,IAA9C,CAAP;AACD,GAhXY;AAiXb8G,EAAAA,YAAY,EAAGC,MAAD,IAAW;AACvB,QAAIA,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAAC,IAAD,CAAN,GAAejH,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAf;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,kCAAiCwF,MAAM,CAAC,IAAD,CAAvC,GAA+C,GAAzD,CAAP;AACD,GAtXY;AAuXbC,EAAAA,cAAc,EAAGD,MAAD,IAAW;AACzB,QAAIA,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAAC,IAAD,CAAN,GAAejH,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAf;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;;AACA,QAAIH,YAAY,CAACG,OAAb,CAAqB,cAArB,KAAwCH,YAAY,CAACG,OAAb,CAAqB,UAArB,MAAqC,YAAjF,EAA8F;AAC5F,aAAOd,KAAK,CAACoC,GAAN,CAAU,gDAA+CwF,MAAM,CAAC,IAAD,CAArD,GAA6D,GAAvE,CAAP;AAAuF,KADzF,MAEI;AACF,aAAO5H,KAAK,CAACoC,GAAN,CAAU,4CAA2CwF,MAAM,CAAC,IAAD,CAAjD,GAAyD,GAAnE,CAAP;AAAmF;AACtF,GA/XY;AAiYbE,EAAAA,oBAAoB,EAAGF,MAAD,IAAW;AAC/B;AACA5H,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,8CAA6CoH,MAAM,CAAC,IAAD,CAAnD,GAA2D,GAA3D,GAAgEA,MAAM,CAAC,cAAD,CAAjF,EAAmGA,MAAnG,CAAP;AACD,GArYY;AAsYbG,EAAAA,mBAAmB,EAAGH,MAAD,IAAW;AAC9B5H,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,qDAAoDoH,MAAM,CAAC,IAAD,CAA1D,GAAkE,GAA7E,EAAkFA,MAAlF,CAAP;AACD,GAzYY;AA0YbI,EAAAA,oBAAoB,EAAGJ,MAAD,IAAW;AAC/B5H,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,qDAAoDoH,MAAM,CAAC,IAAD,CAA1D,GAAkE,GAA7E,EAAkFA,MAAlF,CAAP;AACD,GA7YY;AA8YbK,EAAAA,oBAAoB,EAAGL,MAAD,IAAW;AAC/BA,IAAAA,MAAM,CAAC,IAAD,CAAN,GAAejH,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAf;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,2DAA0DwF,MAAM,CAAC,IAAD,CAAhE,GAAwE,GAAlF,EAAuFA,MAAvF,CAAP;AACD,GAlZY;AAmZbM,EAAAA,SAAS,EAAGrH,IAAD,IAAS;AAClBb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACkH,MAAN,CAAa,8CAA6CrG,IAAI,CAAC,IAAD,CAAjD,GAAyD,GAAtE,EAA2EA,IAA3E,CAAP;AACD,GAtZY;AAuZbsH,EAAAA,OAAO,EAAGtH,IAAD,IAAS;AAChBb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACyF,KAAN,CAAY,mCAAkC5E,IAAI,CAAC,IAAD,CAAtC,GAA8C,GAA1D,EAA+DA,IAA/D,CAAP;AACD,GA1ZY;AA2ZbuH,EAAAA,YAAY,EAAGvH,IAAD,IAAS;AACrBb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACkH,MAAN,CAAa,oDAAmDrG,IAAI,CAAC,IAAD,CAApE,EAA4EA,IAA5E,CAAP;AACD,GA9ZY;AA+ZbwH,EAAAA,eAAe,EAAGT,MAAD,IAAW;AAC1B,QAAIA,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAAC,IAAD,CAAN,GAAejH,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAf;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACoC,GAAN,CAAU,kCAAiCzB,YAAY,CAACG,OAAb,CAAqB,UAArB,EAAiCwH,WAAjC,EAAjC,GAAkF,GAAlF,GAAwFV,MAAM,CAAC,IAAD,CAA9F,GAAuG,GAAjH,CAAP;AACD,GApaY;AAqabW,EAAAA,iBAAiB,EAAGC,YAAD,IAAiB;AAClC,QAAIZ,MAAM,GAAG,EAAb;AACAA,IAAAA,MAAM,CAAC,IAAD,CAAN,GAAejH,YAAY,CAACG,OAAb,CAAqB,SAArB,CAAf;AACAd,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACyF,KAAN,CAAY,kCAAiC9E,YAAY,CAACG,OAAb,CAAqB,UAArB,EAAiCwH,WAAjC,EAAjC,GAAkF,GAAlF,GAAwFV,MAAM,CAAC,IAAD,CAA9F,GAAuG,GAAnH,EAAwHY,YAAxH,CAAP;AACD,GA1aY;AA2abC,EAAAA,MAAM,EAAG5H,IAAD,IAAS;AACfb,IAAAA,KAAK,CAACC,QAAN,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAkD,SAAQO,YAAY,CAACG,OAAb,CAAqB,cAArB,CAAqC,EAA/F;AACA,WAAOd,KAAK,CAACQ,IAAN,CAAW,4BAA2BK,IAAI,CAAC,IAAD,CAA/B,GAAuC,GAAlD,EAAuDA,IAAI,CAAC6H,QAA5D,CAAP;AACD;AA9aY,CAAf","sourcesContent":["import axios from 'axios'\n\n// import FormData from \"form-data\";\n\naxios.defaults.baseURL = 'http://ec2-3-96-139-77.ca-central-1.compute.amazonaws.com:8000'\n\n// axios.defaults.baseURL = 'http://localhost:8000/'\naxios.defaults.headers.common['Content-Type'] = 'application/json;charset=UTF-8';\n// axios.defaults.headers.common['Accept'] = 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9';\n// axios.defaults.headers.common['Authorization'] = 'Token 1c10a1a9d7d8973d860aac56c07a8fd588fb0527';\n\n// let userId=2\n// let USER_NAME='sagar'\n\n//SAMPLE USE CASE\n// const request = api.getArticle(match.params.id)\n\n// request\n//     .then(res => {\n//         this.setState({\n//             post: res.data.results\n//         })\n//     }).catch(err => toast.error(err.response.data.error))\n\n// axios.interceptors.request.use(config => {\n//   if (localStorage.getItem('access-token'))\n//     config.headers['access-token'] = localStorage.getItem('access-token')\n//   config.headers['Content-Type'] = 'application/json;charset=UTF-8';\n//   return config\n\nconst signInFunc = (user, callback=null) => {\n  axios.post('booktrades_api/login/', user).then(res => {\n    //Sample response: {\"token\":\"1c10a1a9d7d8973d860aac56c07a8fd588fb0527\",\n  //                    \"user_id\":2,\n  //                    \"email\":\"sagar.aryal.1996@gmail.com\"\n  // }\n    localStorage.setItem('access-token', res.data['token']);\n    localStorage.setItem('user_name', user['username']);\n    localStorage.setItem('usertype', res.data['usertype']);\n\n    if(res.data['usertype'] === 'Contractor'){\n      localStorage.setItem('user_id', res.data['contractor_id']);\n    }\n    else{\n      localStorage.setItem('user_id', res.data['client_id']);\n    }\n    axios.defaults.headers.common['Authorization'] = `Token ${res.data['token']}`\n    localStorage.setItem('user_token', localStorage.getItem('user_id'));\n    localStorage.setItem('contractor_id', res.data['contractor_id'])\n    localStorage.setItem('client_id', res.data['client_id'])\n    if (callback){\n      callback(res.data);\n    }\n    sendMessagingTokenFunc('');\n  }).catch(err => callback(err))\n}\n\nconst sendMessagingTokenFunc = (token) => {\n  if (token !== ''){\n    localStorage.setItem('messaging-token', token);\n  }\n  if ( localStorage.hasOwnProperty('messaging-token')){\n    const data = {}\n    data['user_id'] = localStorage.getItem('user_token');\n    // token['username'] = localStorage.getItem('user_name');\n    // token['access-token'] = localStorage.getItem('access-token');\n    data['web_token'] = localStorage.getItem('messaging-token');\n    axios.post('api/msg_token/', data).then(res => {\n      console.log('INFO: Messaging token sent to backend');\n    }).catch(err => console.log('ERROR: Messaging token sending error'))\n  }\n}\n\nconst signUpFunc = (information,callback, err_callback) => {\n  information['username'] = information['email'];\n  information['firstName'] = information['first_name'];\n  information['lastName'] = information['last_name'];\n  // if(information['service_types'] != null){\n    // information['serviceList'] = information['service_types'].join(',')\n\n  // information['serviceTypeList'] = information['service_types']\n  // }\n  // information['languageList'] = information['languages']\n  axios.post('booktrades_api/user/create/', information).then(res => {\n    localStorage.setItem('access-token', res.data['token']);\n    localStorage.setItem('user_name', res.data['email']);\n    localStorage.setItem('usertype', res.data['usertype']);\n    if(res.data['usertype'] === 'Contractor'){\n      localStorage.setItem('user_id', res.data['contractor_id']);\n    }\n    else{\n      localStorage.setItem('user_id', res.data['client_id']);\n    }\n    axios.defaults.headers.common['Authorization'] = `Token ${res.data['token']}`\n    localStorage.setItem('user_token', res.data['user_id']);\n    localStorage.setItem('contractor_id', res.data['contractor_id'])\n    localStorage.setItem('client_id', res.data['client_id'])\n\n    let originalResponse = res.data;\n    sendMessagingTokenFunc('');\n    //Uploading profile image\n    if (information.profile_image.length > 0){ //Only one profile image can be uploaded\n      //Uploading image\n      let data = new FormData();\n      for (var k in res['data']['profile_upload_url']['fields']) {\n        data.append(k, res['data']['profile_upload_url']['fields'][k]);\n      }\n    \n      data.append('file', information.profile_image[0]['file'], information.profile_image[0]['file'].fileName);\n      delete axios.defaults.headers.common['Authorization'];\n      axios.post(\n        res.data['profile_upload_url']['url'], \n        data, \n        {\n          headers: {\n            'Accept': '*/*',\n            'Accept-Language': 'en-US,en;q=0.8',\n            'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n          }\n        }).then(res => {\n          console.log('Successfully uploaded');\n          callback(originalResponse)\n          axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n      }).catch(err => {\n        err_callback()\n        console.log(err);\n      });\n    }else{\n      callback(originalResponse);\n    }\n  }).catch((err) => {\n    console.log(err)\n    err_callback()\n  })\n}\n\nlet all_languages = []\nlet language_promise;\nif (all_languages === undefined || all_languages.length === 0) {\n  // array empty or does not exist\n  language_promise = axios.get('booktrades_api/languages/get_all/', { params: {} }).then(res => {\n    all_languages.push(...res.data);\n    return all_languages;\n  }).catch(err => {\n    console.log(err) \n\n  });\n}\n\nconst allLanguages = () => {\n  if (all_languages === undefined || all_languages.length === 0) {\n    // array empty or does not exist\n    return language_promise\n  }else{\n    return all_languages\n  }\n}\n\nlet service_types = []\nlet service_promise;\nif (service_types === undefined || service_types.length === 0) {\n  // array empty or does not exist\n  service_promise = axios.get('booktrades_api/service_types/get_all/', { params: {} }).then(res => {\n    service_types.push(...res.data);\n    return service_types\n  }).catch(err => {\n    console.log(err) \n  });\n}\nconst allServiceTypes = () => {\n  if (service_types === undefined || service_types.length === 0) {\n    // array empty or does not exist\n    return service_promise\n  }else{\n    return service_types\n  }\n}\n\nexport const getLatLng = (address) => {\n  delete axios.defaults.headers.common['Authorization'];\n  let endpoint = `https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=AIzaSyBQbOVpM2UKKRF82lw8OVr2KhKKysfjZSU`\n  const promise = axios.get(endpoint);\n  axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n  return promise\n};\n\nexport {allServiceTypes, allLanguages, service_types, all_languages};\n\nexport default {\n  // Signing\n  // user_name:USER_NAME, \n  // register: (user) => {\n  //   return axios.post('signing/signUp', user)\n  // },\n  \n  serviceTypes: service_types,\n\n  languages: all_languages,\n\n  signIn: signInFunc,\n\n  signUp: signUpFunc,\n\n  // getGeoCode: (address) => {\n  //   return axios.get('https://maps.googleapis.com/maps/api/geocode/xml?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=YOUR_API_KEY'\n  // }\n\n  cancelSignUp: (information) => {\n    axios.post('booktrades_api/user/cancel/', information).then((res)=>{\n      console.log('success')\n    }).catch((res)=>{\n      // debugger;\n      console.log('error');\n    })\n    return\n  },\n\n  sendMessagingToken: sendMessagingTokenFunc,\n  \n  signOut: () => {\n    localStorage.removeItem('access-token')\n    localStorage.removeItem('usertype')\n  },\n\n  // // Chat\n  getMessages: (receiverId) => {\n    const headers = { headers:{Authorization: `Token ${localStorage.getItem('access-token')}` }}\n    return axios.get('api/messages/'+localStorage.getItem('user_token')+'/'+receiverId, )\n  },\n\n  sendMessage: (message_data) => {\n    message_data['sender']=localStorage.getItem('user_token')\n    const dt = new Date();\n    message_data['timestamp']= dt.toISOString();\n    return axios.post('api/messages/'+localStorage.getItem('user_token')+'/'+message_data['receiver'], message_data)\n  },\n\n  getChats: () => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('api/user/'+localStorage.getItem('user_token'), { params: {} })\n  },\n\n  addUnassignedJob: (job_data,callback) => {\n    let originalRef = job_data.imageListStoreRef;\n    let imageList = job_data.imageListStoreRef\n    // We create a new list of only strings so backend knows how many images are being created\n    imageList = imageList.map(imageObj => {\n      return imageObj['data_url'].replace(/[^A-Z0-9]/ig, \"_\").slice(0,30);\n    }) \n    job_data.images= imageList\n    job_data.imageListStoreRef1 = job_data.imageListStoreRef\n    job_data.imageListStoreRef = ''\n    job_data['clientId'] = localStorage.getItem('user_id')\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    axios.post('booktrades_api/unassigned_job/create_job', job_data).then(res => {\n      if (originalRef.length > 0){\n        const files = {'file': originalRef[0]['file']}\n        let data = new FormData();\n        for (var k in res['data'][0]['fields']) {\n          data.append(k, res['data'][0]['fields'][k]);\n        }\n        data.append('file', originalRef[0]['file'], originalRef[0]['file'].name);\n        delete axios.defaults.headers.common['Authorization'];\n        axios.post(\n            res['data'][0]['url'], \n            data, \n            {\n              headers: {\n                'Accept': '*/*',\n                'Accept-Language': 'en-US,en;q=0.8',\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n              }\n            }).then(res => {\n              axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n              callback(res.data)\n          }).catch(err => {\n            console.log(err)\n          });}\n        else{\n          callback(res.data)\n        }\n      console.log('job was successfully posted!');\n \n    }).catch(err => console.log(err))\n    job_data.imageListStoreRef = job_data.imageListStoreRef1\n\n  },\n\n  uploadImageToBucket: (job_data,response) => {\n    // debugger;\n    // files = {'file': ('../testimage.jpg', f)}\n    // file axios.post('booktrades_api/unassinged_job/create_job', job_data)\n  },\n//this is used for postingPage Headers aswell\n  getUnassignedJobs: (contractor_id) =>{\n    var contractorID = {...contractor_id}\n    contractorID['id']= localStorage.getItem('contractor_id')\n    contractorID['radius']=20000;\n    // contractorID['services']=[\"idk\"];\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/unassigned_job/get_nearby_jobs/'+ contractorID['id'] + '/', contractorID)\n  },\n\n  unassignedJob: (contractorID) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/unassigned_job/'+ contractorID['id'] + '/', contractorID)\n  },\n\n  getContractorProfiles: (profileID) => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/contractor/' + profileID['id'] + '/', profileID)\n  },\n  getClientProfiles: (profileID) => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/client/' + profileID['id'] + '/', profileID)\n  },\n\n  getProfiles: (profileId) => {\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor'){\n      return axios.get('booktrades_api/contractor/' + profileId['id'] + '/', profileId)\n    }\n    else{\n      return axios.get('booktrades_api/client/' + profileId['id'] + '/', profileId)\n    }\n  },\n\n  editProfileForBookmark: (profileId) => {\n    profileId['id']= localStorage.getItem('user_id')\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor'){\n      return axios.patch('booktrades_api/contractor/' + profileId['id'] + '/', profileId)\n    }\n    else{\n      return axios.patch('booktrades_api/client/' + profileId['id'] + '/', profileId)\n    }\n  },\n\n  patchEditProfile: (profileId, callback) => {\n    profileId['id']= localStorage.getItem('user_id')\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    let endpoint =\"\";\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor'){\n      endpoint = 'booktrades_api/contractor/';\n    }\n    else{\n      endpoint = 'booktrades_api/client/';\n    }\n    let image = profileId['image'];\n    profileId['image'] = null\n    let video = profileId['video'];\n    profileId['video'] = null\n    // let totalSize = \n    axios.patch(endpoint + profileId['id'] + '/', profileId).then(res => {\n      let totalSize = 1\n      if (video){\n        totalSize += video.size\n      }\n      if (image){\n        totalSize += image.size\n      }\n      if (typeof image !== \"undefined\" && image != null){\n        let data = new FormData();\n        for (var k in res['data']['profile_upload_url']['fields']) {\n          data.append(k, res['data']['profile_upload_url']['fields'][k]);\n        }\n        data.append('file', image, image.name);\n        delete axios.defaults.headers.common['Authorization'];\n        axios.post(\n            res['data']['profile_upload_url']['url'], \n            data, \n            {\n              headers: {\n                'Accept': '*/*',\n                'Accept-Language': 'en-US,en;q=0.8',\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n              },\n              onUploadProgress: data => {\n                //Set the progress value to show the progress bar\n                callback({\n                  'type': 'PROGRESS',\n                  'value': (data.loaded / totalSize)\n                })\n              },\n            }).then(res => {\n              if (typeof video == \"undefined\" || video == null){\n                callback({\n                  'type': 'SUCCESS',\n                  'data': res.data\n                })\n              }\n              axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n\n          }).catch(err => {\n            console.log(err)\n\n            callback({\n              'type': 'ERROR',\n              'data': err\n            })\n          });\n      }\n\n      if (typeof video !== \"undefined\" && video != null){\n        let data = new FormData();\n        for (var k in res['data']['profile_video_upload_url']['fields']) {\n          data.append(k, res['data']['profile_video_upload_url']['fields'][k]);\n        }\n        data.append('file', video, video.name);\n        delete axios.defaults.headers.common['Authorization'];\n        axios.post(\n            res['data']['profile_video_upload_url']['url'], \n            data, \n            {\n              headers: {\n                'Accept': '*/*',\n                'Accept-Language': 'en-US,en;q=0.8',\n                'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n              },\n              onUploadProgress: data => {\n                //Set the progress value to show the progress bar\n                callback({\n                  'type': 'PROGRESS',\n                  'value': (data.loaded / totalSize)\n                })\n              },\n            }).then(res => {\n              axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n              callback({\n                'type': 'SUCCESS',\n                'data': res.data\n              })\n          }).catch(err => {\n            console.log(err)\n            callback({\n              'type': 'ERROR',\n              'data': err\n            })\n          });\n      }\n\n      if ((typeof video == \"undefined\" || video == null) && (typeof image == \"undefined\" || image == null) ){\n        callback({\n          'type': 'SUCCESS',\n          'data': res.data\n        })\n      }\n      console.log('job was successfully posted!');\n    }).catch(err => {\n      console.log(err)\n      callback({\n        'type': 'ERROR',\n        'data': err\n      })\n    })\n    \n  },\n\n  getNearByCProfiles: (filterBy, radius=150) => {\n    // backend will use the default values and geoip if data not provided, update this to send from view\n    console.log(\"api\", filterBy);\n    if (!filterBy){\n      filterBy = {};\n    }\n    // filterBy['long'] = 20;\n    // filterBy['lat'] = 20;\n    filterBy['radius']=radius;\n    // filterBy['services']=[\"idk\"];\n    // axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/contractor/get_nearby_contractors/', filterBy)\n\n  },\n\n  getClientReview: () =>{\n    var postingID = {}\n    postingID['id'] =0;\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/client_review/client/'+ postingID['id'] + '/' , postingID)\n  },\n\n  addContractorReview: (review_data) => {\n    review_data.clientId = localStorage.getItem('user_id');\n    // review_data.contractorId = '0'\n    // review_data.completedJobId = '1'\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/contractor_review/add_review', review_data)\n  },\n\n  getContractorReview: (profileId) =>{\n\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/contractor_review/contractor/'+ profileId['id'])\n  },\n  getUserType: (profileId) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/user/' + profileId['id'] + '/')\n  },\n  \n  getActiveJobs: (homeOId) =>{\n    var homeOId = {}\n    homeOId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/active_job/client/'+ homeOId['id'] + '/')\n  },\n  getCActiveJobs: (contractorId) =>{\n    var contractorId = {}\n    contractorId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/active_job/contractor/'+ contractorId['id']+'/')\n  },\n\n  getSingleActiveJob: (jobId) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/active_job/'+ jobId['id']+'/')\n  },\n\n  deleteSingleActiveJob: (data) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.delete('booktrades_api/active_job/'+ data['id']+'/')\n  },\n\n  getCompletedJobs: (homeOId) =>{\n    var homeOId = {}\n    homeOId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/completed_job/client/'+ homeOId['id'] + '/')\n  },\n  getCCompletedJobs: (contractorId) =>{\n    var contractorId = {}\n    contractorId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/completed_job/contractor/'+ contractorId['id']+'/')\n  },\n  getCCompletedJobsByClients: (contractorId) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/completed_job/contractor/'+ contractorId['id']+'/')\n  },\n\n  getSingleCompletedJob: (jobId) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/completed_job/'+ jobId['id']+'/')\n  },\n  deleteSingleCompletedJob: (data) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.delete('booktrades_api/completed_job/'+ data['id']+'/')\n  },\n\n  moveActiveToComplete: (jobId) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/active_job/complete/'+ jobId[\"id\"] +'/')\n  },\n  changePassword: (data) =>{\n    data.username= localStorage.getItem('user_name');\n    // data.id_token= localStorage.getItem('access-token');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/change_password/', data)\n  },\n  getSavedJobs: (userId) =>{\n    var userId = {}\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/get_savedJobs/'+ userId[\"id\"] +'/')\n  },\n  getPendingJobs: (userId) =>{\n    var userId = {}\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    if (localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor'){\n      return axios.get('booktrades_api/contractor/get_pending_jobs/'+ userId[\"id\"] +'/')    }\n    else{\n      return axios.get('booktrades_api/client/get_pending_jobs/'+ userId[\"id\"]+ '/')    }\n  },\n    \n  assignUnassignedJobs: (userId) =>{\n    // userId[\"clientId\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/unassigned_job/assign_job/'+ userId[\"id\"] +'/'+ userId['contractorId'], userId)\n  },\n  accepUnassignedJobs: (userId) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/unassigned_job/contractor/accept/'+ userId[\"id\"] +'/', userId)\n  },\n  rejectUnassignedJobs: (userId) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/unassigned_job/contractor/reject/'+ userId[\"id\"] +'/', userId)\n  },\n  getAllUnassignedJobs: (userId) =>{\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/unassigned_job/get_all_unassigned_jobs/'+ userId[\"id\"] +'/', userId)\n  },\n  deleteJob: (data) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.delete('booktrades_api/unassigned_job/delete_job/'+ data[\"id\"] +'/', data)\n  },\n  editJob: (data) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.patch('booktrades_api/unassigned_job/'+ data[\"id\"] +'/', data)\n  },\n  deleteReview: (data) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.delete('booktrades_api/contractor_review/delete_review/'+ data[\"id\"], data)\n  },\n  getNotification: (userId) =>{\n    var userId = {}\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.get('booktrades_api/notifications/'+ localStorage.getItem('usertype').toLowerCase() + '/' + userId[\"id\"] + '/')\n  },\n  patchNotification: (notification) =>{\n    var userId = {}\n    userId[\"id\"] = localStorage.getItem('user_id');\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.patch('booktrades_api/notifications/'+ localStorage.getItem('usertype').toLowerCase() + '/' + userId[\"id\"] + '/', notification)\n  },\n  getPdf: (data) =>{\n    axios.defaults.headers.common['Authorization'] = `Token ${localStorage.getItem('access-token')}`\n    return axios.post('booktrades_api/invoice/'+ data[\"id\"] +'/', data.tempList)\n  },\n}\n"]},"metadata":{},"sourceType":"module"}