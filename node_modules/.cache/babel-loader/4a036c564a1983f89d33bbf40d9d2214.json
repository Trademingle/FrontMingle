{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/HomeOwnerActiveJobsPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, Route, NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './styles.module.css';\nimport Active from './active.js';\nimport Done from './done.js';\nimport Unassigned from './saved.js';\nimport PendingJobs from './pending.js';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport api from '../api/api';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AddListingButton from '../ResuableComponents/addListingButton';\nimport LoadingView from '../ResuableComponents/loadingView';\nconst drawerWidth = 300;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    marginTop: 80\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex: 3\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    paddingLeft: '20px',\n    paddingRight: '20px'\n  }\n}));\nconst AddButton = withStyles(theme => ({\n  root: {\n    borderRadius: 5,\n    backgroundColor: '#2B64D2',\n    '&:hover': {\n      backgroundColor: '#003ba0'\n    }\n  }\n}))(Button);\n\nconst ContractorActiveJobsPage = () => {\n  _s();\n\n  const [pendingJobs, setPendingJobs] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const getPendingJobs = () => {\n    api.getPendingJobs().then(res => {\n      // debugger;\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setPendingJobs(res.data); //change [] with .get\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getPendingJobs();\n  }, []);\n  const [open, setOpen] = React.useState(true);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const renderPendingJobs = () => {\n    let i = 0;\n    let jobsCount = pendingJobs.length;\n\n    if (jobsCount === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }\n      }, \"It seems you don't have any Pending Jobs.\"));\n    } else {\n      let tempJobs = [];\n\n      while (i < jobsCount) {\n        let job = pendingJobs[i];\n        let jobId = job.id;\n        let jobTitle = job.title;\n        let contractorName = job.contractorFirstName;\n        let location = job.locationDetail;\n        let serviceList = job.serviceTypeList;\n        let avatar = job.downloadurl[0];\n        let userId = job.contractorId;\n        tempJobs.push( /*#__PURE__*/React.createElement(PendingJobs, {\n          userId: userId,\n          avatar: avatar,\n          complete: 5,\n          id: jobId,\n          title: jobTitle,\n          name: contractorName,\n          location: location,\n          serviceList: serviceList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }\n        })); // Proceed to the next message.\n\n        i += 1;\n      }\n\n      return tempJobs;\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.headertext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"My Jobs\", open === false ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDrawerOpen,\n    className: styles.showbutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"View Pending Jobs\") : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.headerbuttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AddListingButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/homeowneractivejobs/active\",\n    className: styles.activeJob,\n    activeStyle: {\n      fontWeight: \"bold\",\n      color: '#2B64D2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/homeowneractivejobs/unassigned\",\n    className: styles.activeJob,\n    activeStyle: {\n      fontWeight: \"bold\",\n      color: '#2B64D2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Unassigned\"), /*#__PURE__*/React.createElement(NavLink, {\n    exact: true,\n    to: \"/homeowneractivejobs/done\",\n    className: styles.activeJob,\n    activeStyle: {\n      fontWeight: \"bold\",\n      color: '#2B64D2'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }, \"Done\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/homeowneractivejobs/active\",\n    component: Active,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/homeowneractivejobs/unassigned\",\n    component: Unassigned,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/homeowneractivejobs/done\",\n    component: Done,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    className: styles.rectangle33,\n    variant: \"persistent\",\n    anchor: \"right\",\n    open: open,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.pending,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, \" Pending Requests\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleDrawerClose,\n    className: styles.hidebutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Hide\")), loading ? /*#__PURE__*/React.createElement(LoadingView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 24\n    }\n  }) : renderPendingJobs())));\n};\n\n_s(ContractorActiveJobsPage, \"Bdh8Nea3ysQ6olewfLm6qOZU6kk=\", false, function () {\n  return [useStyles];\n});\n\n_c = ContractorActiveJobsPage;\nexport default ContractorActiveJobsPage;\nexport { ContractorActiveJobsPage };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContractorActiveJobsPage\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/HomeOwnerActiveJobsPage/index.js"],"names":["React","useEffect","useState","Link","Route","NavLink","ROUTES","styles","Active","Done","Unassigned","PendingJobs","Button","withStyles","api","Drawer","makeStyles","useTheme","AddListingButton","LoadingView","drawerWidth","useStyles","theme","root","display","marginTop","hide","drawer","width","flexShrink","zIndex","drawerPaper","paddingLeft","paddingRight","AddButton","borderRadius","backgroundColor","ContractorActiveJobsPage","pendingJobs","setPendingJobs","loading","setLoading","getPendingJobs","then","res","console","log","data","catch","err","open","setOpen","handleDrawerOpen","handleDrawerClose","renderPendingJobs","i","jobsCount","length","tempJobs","job","jobId","id","jobTitle","title","contractorName","contractorFirstName","location","locationDetail","serviceList","serviceTypeList","avatar","downloadurl","userId","contractorId","push","classes","header","headertext","showbutton","headerbuttons","header2","activeJob","fontWeight","color","content","rectangle33","paper","pending","hidebutton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport { Link, Route, NavLink } from 'react-router-dom';\nimport * as ROUTES from '../../constants/routes';\nimport styles from './styles.module.css'; \nimport Active from './active.js';\nimport Done from './done.js';\nimport Unassigned from './saved.js';  \nimport PendingJobs from './pending.js';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport api from '../api/api';\nimport Drawer from '@material-ui/core/Drawer';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AddListingButton from '../ResuableComponents/addListingButton';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst drawerWidth = 300;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop:80,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    zIndex:3,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    paddingLeft:'20px',\n    paddingRight:'20px'\n  },\n}));\nconst AddButton = withStyles((theme) => ({\n    root: {\n      borderRadius:5,\n      backgroundColor: '#2B64D2',\n      '&:hover': {\n        backgroundColor: '#003ba0',\n      },\n    },\n}))(Button);\nconst ContractorActiveJobsPage = () => {\n    const [pendingJobs, setPendingJobs] = useState({});\n    const [loading, setLoading] = useState(false);\n\n    const getPendingJobs = () => {\n        api.getPendingJobs().then(res => {\n          // debugger;\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setPendingJobs(res.data); //change [] with .get\n            setLoading(false);\n        }).catch(err => console.log(err))\n    }\n  \n    useEffect(() => {\n      setLoading(true);\n        getPendingJobs();\n      },[]);\n\n      const [open, setOpen] = React.useState(true);\n      const handleDrawerOpen = () => {\n        setOpen(true);\n      };\n      const handleDrawerClose = () => {\n        setOpen(false);\n      };\n    const renderPendingJobs = () => {\n        let i = 0;\n        let jobsCount = pendingJobs.length;\n        if (jobsCount===0){\n          return(\n            <div>\n              <p>It seems you don't have any Pending Jobs.</p>\n            </div>\n          )\n        }\n        else{\n        let tempJobs = [];\n        while (i < jobsCount) {\n          let job = pendingJobs[i]\n          let jobId = job.id\n          let jobTitle = job.title\n          let contractorName = job.contractorFirstName\n          let location = job.locationDetail\n          let serviceList = job.serviceTypeList;\n          let avatar= job.downloadurl[0]\n          let userId = job.contractorId\n\n          tempJobs.push(\n            <PendingJobs userId={userId} avatar={avatar} complete= {5} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={serviceList} />\n          );\n    \n          // Proceed to the next message.\n          i += 1;\n        }\n        return tempJobs;}\n      };\n      const classes = useStyles();\n\n    return(\n        <div>\n            <h1 className={styles.header}>\n              <p className={styles.headertext}>My Jobs\n              {open === false?\n              <button onClick={handleDrawerOpen} className={styles.showbutton}>\n                View Pending Jobs\n              </button>\n              :null\n              }\n              </p>\n              <div className={styles.headerbuttons}>\n                <AddListingButton/>\n              </div>\n            </h1> \n            <div className={styles.header2}>\n              <NavLink exact to=\"/homeowneractivejobs/active\" className={styles.activeJob} activeStyle={{\n                      fontWeight: \"bold\",\n                      color: '#2B64D2'\n                  }}>Active</NavLink>\n              <NavLink exact to=\"/homeowneractivejobs/unassigned\" className={styles.activeJob} activeStyle={{\n                      fontWeight: \"bold\",\n                      color: '#2B64D2'\n                  }}>Unassigned</NavLink>\n              <NavLink exact to=\"/homeowneractivejobs/done\" className={styles.activeJob} activeStyle={{\n                      fontWeight: \"bold\",\n                      color: '#2B64D2'\n                  }}>Done</NavLink>\n            </div>\n\n            <div className={styles.content}>\n                <Route exact path=\"/homeowneractivejobs/active\" component={Active}/>\n                <Route path=\"/homeowneractivejobs/unassigned\" component={Unassigned}/>\n                <Route path=\"/homeowneractivejobs/done\" component={Done}/>\n            </div>\n            <div>\n            <Drawer\n              className={styles.rectangle33}\n              variant=\"persistent\"\n              anchor=\"right\"\n              open={open}\n              classes={{\n                paper: classes.drawerPaper,\n              }}>\n              <h1 className={styles.pending}> Pending Requests \n                <button onClick={handleDrawerClose} className={styles.hidebutton}>\n                  Hide\n                </button>\n              </h1>\n              {loading?<LoadingView/>:renderPendingJobs()}\n            </Drawer>\n                {/* <box className={styles.rectangle33}>\n                    <h1 className={styles.pending}> Pending Requests</h1>\n                    {renderPendingJobs()}\n                </box> */}\n            </div>\n        </div>\n)};\n\nexport default ContractorActiveJobsPage;\nexport {ContractorActiveJobsPage};"]},"metadata":{},"sourceType":"module"}