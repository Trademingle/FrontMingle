{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ProfileView/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from '../MyProfile/profile.module.css';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport { Grid } from '@material-ui/core';\nimport ReviewCard from './reviews';\nimport api from '../api/api';\nimport ProfileFormat from './profile.js';\nimport Done from \"./done.js\";\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView'; // import CancelIcon from '@material-ui/icons/Cancel';\n\nconst Cprofile = props => {\n  _s();\n\n  const [profiles, setProfiles] = useState({\n    serviceTypeList: [],\n    languageList: []\n  });\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  var profileID = {};\n  profileID['id'] = props.match.params.contractorId;\n\n  const getContractorProfiles = () => {\n    api.getContractorProfiles(profileID).then(res => {\n      console.log(\"Profile loaded successfully\");\n      console.log(res);\n      setProfiles(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setOpen(true);\n    });\n  };\n\n  useEffect(() => {\n    getContractorProfiles();\n    window.scrollTo(0, 0);\n  }, []);\n\n  const renderProfiles = () => {\n    let contractorName = profiles.firstName + \" \" + profiles.lastName;\n    let rating = profiles.averageRating;\n    let jobsDone = profiles.jobsCompleted;\n    return /*#__PURE__*/React.createElement(ProfileFormat, {\n      avatar: profiles.downloadurl,\n      name: contractorName,\n      rating: rating,\n      jobsdone: jobsDone,\n      id: profiles.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    });\n  };\n\n  let languages = profiles.languageList.join(', '); //Contractor reviews endpoit connect below\n\n  const [contractorReview, setContractorReview] = useState([]);\n\n  const getContractorReview = () => {\n    api.getContractorReview(profileID).then(res => {\n      console.log(\"Review loaded successfully\");\n      console.log(res);\n      setContractorReview(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getContractorReview();\n  }, []);\n\n  const renderReviews = () => {\n    let i = 0;\n    let reviewsCount = contractorReview.length;\n    let tempJobs = [];\n\n    while (i < reviewsCount) {\n      let review = contractorReview[i];\n      let title = review.clientFirstName + \" \" + review.clientLastName;\n      let reviewDate = review.reviewDate;\n      let reviewBody = review.reviewContent;\n      let avatar = review.downloadurl;\n      let reviewTitle = review.reviewTitle;\n      let reviewRating = review.reviewRating;\n      tempJobs.push( /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ReviewCard, {\n        reviewRating: reviewRating,\n        avatar: avatar,\n        reviewTitle: reviewTitle,\n        clientId: review.clientId,\n        id: review.id,\n        title: title,\n        subheader: reviewDate,\n        body: reviewBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }))); // Proceed to the next message.\n\n      i += 1;\n    }\n\n    return tempJobs;\n  };\n\n  const renderTags = () => {\n    let i = 0;\n    let services = profiles.serviceTypeList;\n    let tagsCount = services.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: services[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 27\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  let reviews = renderReviews();\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.biggyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.secondBigBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.profilebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, renderProfiles()), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mustHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.liability,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, profiles.isInsuranceNumberVerified === true ? /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n    className: styles.Vector,\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 26\n    }\n  }) : null //<CancelIcon className={styles.Vector} style={{height:20, color:'red'}}/>\n  , \"Liability insurance no: \", profiles.insuranceNumber), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.workercompensation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, profiles.isWorkerNumberVerified === true ? /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n    className: styles.Vector,\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 26\n    }\n  }) : null, \"Worker compensation insurance no: \", profiles.workerNumber))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.SecondBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.skillsbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.skills,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"Skills\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, renderTags()))), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.languagebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.planguages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Preferred languages\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, languages))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ThirdBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.skills,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(\"video\", {\n    src: profiles.profile_video,\n    controls: true,\n    height: \"400px\",\n    width: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ThirdBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.FourthBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.skills,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Completed Jobs\"), /*#__PURE__*/React.createElement(Done, {\n    id: props.match.params.contractorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.skills,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Reviews\"), reviews.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n    className: styles.gridContainer,\n    container: true,\n    spacing: reviews.length > 0 ? 4 : 0,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, reviews) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, \"It seems like this contractor doesn't have any reviews\")), /*#__PURE__*/React.createElement(NotFound, {\n    setOpen: setOpen,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Cprofile, \"qUnuB3TNnyqCilf+HhuPP70b4EM=\");\n\n_c = Cprofile;\n\nfunction Tags(props) {\n  if (!props.tagname) return null;\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles2.tagfont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, props.tagname)));\n}\n\n_c2 = Tags;\n;\nexport default Cprofile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cprofile\");\n$RefreshReg$(_c2, \"Tags\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ProfileView/index.js"],"names":["React","useEffect","useState","styles","VerifiedUserIcon","styles2","Grid","ReviewCard","api","ProfileFormat","Done","NotFound","LoadingView","Cprofile","props","profiles","setProfiles","serviceTypeList","languageList","open","setOpen","loading","setLoading","profileID","match","params","contractorId","getContractorProfiles","then","res","console","log","data","catch","err","window","scrollTo","renderProfiles","contractorName","firstName","lastName","rating","averageRating","jobsDone","jobsCompleted","downloadurl","id","languages","join","contractorReview","setContractorReview","getContractorReview","renderReviews","i","reviewsCount","length","tempJobs","review","title","clientFirstName","clientLastName","reviewDate","reviewBody","reviewContent","avatar","reviewTitle","reviewRating","push","clientId","renderTags","services","tagsCount","tempTags","tag","reviews","biggyBox","secondBigBox","profilebox","mustHide","liability","isInsuranceNumberVerified","Vector","height","insuranceNumber","workercompensation","isWorkerNumberVerified","workerNumber","hr1","SecondBox","skillsbox","skills","servicetagbox","languagebox","planguages","ThirdBox","profile_video","FourthBox","gridContainer","Tags","tagname","tagfont"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from '../MyProfile/profile.module.css'; \nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport { Grid } from '@material-ui/core'\nimport ReviewCard from './reviews'\nimport api from '../api/api';\nimport ProfileFormat from './profile.js';\nimport Done from \"./done.js\";\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\n\n// import CancelIcon from '@material-ui/icons/Cancel';\n\nconst Cprofile = (props) => {\n    const [profiles, setProfiles] = useState({serviceTypeList:[],languageList:[]});\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    var profileID = {};\n    profileID['id'] = props.match.params.contractorId;\n    const getContractorProfiles = () => {\n        api.getContractorProfiles(profileID).then(res => {\n            console.log(\"Profile loaded successfully\");\n            console.log(res);\n            setProfiles(res.data);\n            setLoading(false);\n        }).catch(err => {console.log(err); setLoading(false); setOpen(true)})\n    }\n\n    useEffect(() => {\n        getContractorProfiles();\n        window.scrollTo(0, 0);\n      },[]);\n\n    const renderProfiles = () => {\n          let contractorName = profiles.firstName + \" \" + profiles.lastName\n          let rating = profiles.averageRating\n          let jobsDone = profiles.jobsCompleted\n        return(\n            <ProfileFormat avatar={profiles.downloadurl} name={contractorName} rating={rating} jobsdone={jobsDone} id={profiles.id}/>\n          );\n    };  \n    let languages = profiles.languageList.join(', ')\n    //Contractor reviews endpoit connect below\n    const [contractorReview, setContractorReview] = useState([]);\n    const getContractorReview = () => {\n        api.getContractorReview(profileID).then(res => {\n            console.log(\"Review loaded successfully\");\n            console.log(res);\n            setContractorReview(res.data);\n        }).catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        getContractorReview();\n      },[]);\n\n    const renderReviews = () => {\n    let i = 0;\n    let reviewsCount = contractorReview.length;\n    let tempJobs = [];\n    while (i < reviewsCount) {\n        let review = contractorReview[i]\n        let title = review.clientFirstName + \" \" + review.clientLastName\n        let reviewDate = review.reviewDate\n        let reviewBody = review.reviewContent\n        let avatar = review.downloadurl\n        let reviewTitle = review.reviewTitle\n        let reviewRating= review.reviewRating\n        tempJobs.push(\n        <Grid item xs={12} sm={6} md={4}  >\n            <ReviewCard reviewRating={reviewRating} avatar={avatar} reviewTitle={reviewTitle} clientId={review.clientId} id={review.id} title={title} subheader={reviewDate} body={reviewBody} />\n        </Grid>\n        );\n        // Proceed to the next message.\n        i += 1;\n        }\n        return tempJobs;\n    }; \n    const renderTags = () => {\n        let i = 0;\n        let services = profiles.serviceTypeList;\n        let tagsCount = services.length;\n        let tempTags = [];\n        while (i < tagsCount) {\n            tempTags.push(<Tags className={styles2.tag} tagname={services[i]} />);\n            i += 1;\n        };\n        return tempTags;\n    };\n\n    let reviews = renderReviews();\n    if (loading) {\n        return <LoadingView/>;\n        }\n    return(\n        <div className={styles.biggyBox}>\n            <div className={styles.secondBigBox}>\n                <div className={styles.profilebox}>\n                    {renderProfiles()}\n                </div>  \n                <div className={styles.mustHide}>\n                    <p className={styles.liability}>\n                        {profiles.isInsuranceNumberVerified === true\n                        ?<VerifiedUserIcon className={styles.Vector} style={{height:20}}/>\n                        : null\n                        //<CancelIcon className={styles.Vector} style={{height:20, color:'red'}}/>\n                    }\n                        Liability insurance\n                        no: {profiles.insuranceNumber}\n                    </p>\n                    <p className={styles.workercompensation}>\n                        {profiles.isWorkerNumberVerified === true\n                        ?<VerifiedUserIcon className={styles.Vector} style={{height:20}}/>\n                        :null}                    \n                        Worker compensation insurance\n                        no: {profiles.workerNumber}\n                    </p>\n                </div>\n            </div>\n            <hr className={styles.hr1}/>   \n            <div className={styles.SecondBox}>\n                <div className={styles.skillsbox}>\n                    <h1 className={styles.skills}>Skills</h1>\n                    <box className={styles2.servicetagbox}>\n                        <Grid container spacing={0}>\n                            {renderTags()}\n                        </Grid>\n                    </box>        \n                </div>\n                <div className={styles.languagebox}>\n                    <h1 className={styles.planguages}>Preferred languages</h1>\n                    <p className={styles.languages}>{languages}</p>\n                </div>\n            </div> \n            <hr className={styles.hr1}/>\n            <div className={styles.ThirdBox}>\n                <h1 className={styles.skills}>About</h1>\n                <video src={profiles.profile_video} controls height=\"400px\" width='auto'/>\n            </div>\n            <hr className={styles.hr1}/>\n            <div className={styles.ThirdBox}>\n                <div className ={styles.FourthBox}>\n                    <h1 className={styles.skills}>\n                    Completed Jobs\n                    </h1>\n                    <Done id= {props.match.params.contractorId} />\n                </div>\n                <h1 className={styles.skills}>\n                    Reviews\n                </h1>\n                {reviews.length>0?\n                <Grid className={styles.gridContainer} container  spacing={reviews.length>0?4:0} justify={\"center\"}>\n                    {reviews}\n                </Grid>\n                : <p>It seems like this contractor doesn't have any reviews</p>}\n            </div> \n            <NotFound setOpen={setOpen} open={open}/>\n\n        </div> \n        )\n};\nfunction Tags(props) {\n    if (!props.tagname) return null;\n    return (\n        <Grid item >\n            <box className={styles2.tag}>\n                <p className={styles2.tagfont}>{props.tagname}</p>\n            </box>\n        </Grid>\n    )\n};\n\n\nexport default Cprofile;\n\n"]},"metadata":{},"sourceType":"module"}