{"ast":null,"code":"import _slicedToArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import JobPosting from'./jobpostingCompleted.js';import api from'../api/api';import styles from'./styles.module.css';import{Grid}from'@material-ui/core';import LoadingView from'../ResuableComponents/loadingView';var Done=function Done(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),cCompletedJobs=_useState2[0],setCCompletedJobs=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var getCCompletedJobs=function getCCompletedJobs(){api.getCCompletedJobs().then(function(res){console.log(\"Job loaded successfully\");console.log(res);setCCompletedJobs(res.data[\"completedJobs\"]);//change [] with .get\nsetLoading(false);}).catch(function(err){return console.log(err);});};useEffect(function(){setLoading(true);getCCompletedJobs();},[]);var renderCompletedJobs=function renderCompletedJobs(){var i=0;var completedJobCount=cCompletedJobs.length;if(completedJobCount===0){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"It seems you don't have any Completed Jobs.\"));}else{var tempJobs=[];while(i<completedJobCount){var completedJob=cCompletedJobs[i];var jobTitle=completedJob.title;var jobId=completedJob.id;var contractorName=completedJob.clientFirstName;var location=completedJob.locationDetail;var serviceTypeList=completedJob.serviceTypeList;// var serviceTypeList = str.split(',');\nvar avatar=completedJob.downloadurl[0];var userId=completedJob.clientId;tempJobs.push(/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(JobPosting,{userId:userId,avatar:avatar,complete:1,id:jobId,title:jobTitle,name:contractorName,location:location,serviceList:serviceTypeList})));i+=1;}return tempJobs;}};return/*#__PURE__*/ (// <div className={styles.flex}>\n//     {renderCompletedJobs()}\n// </div>\nReact.createElement(\"div\",{className:styles.gridContainer},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,justify:\"left\"},loading?/*#__PURE__*/React.createElement(LoadingView,null):renderCompletedJobs())));};export default Done;export{Done};","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ContractorActiveJobsPage/done.js"],"names":["React","useEffect","useState","JobPosting","api","styles","Grid","LoadingView","Done","cCompletedJobs","setCCompletedJobs","loading","setLoading","getCCompletedJobs","then","res","console","log","data","catch","err","renderCompletedJobs","i","completedJobCount","length","tempJobs","completedJob","jobTitle","title","jobId","id","contractorName","clientFirstName","location","locationDetail","serviceTypeList","avatar","downloadurl","userId","clientId","push","gridContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport JobPosting from './jobpostingCompleted.js';\nimport api from '../api/api';\nimport styles from './styles.module.css';\nimport { Grid } from '@material-ui/core';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst Done = () => {\n    const [cCompletedJobs, setCCompletedJobs] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const getCCompletedJobs = () => {\n        api.getCCompletedJobs().then(res => {\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setCCompletedJobs(res.data[\"completedJobs\"]); //change [] with .get\n            setLoading(false);\n        }).catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n      setLoading(true);\n        getCCompletedJobs();\n      },[]);\n    const renderCompletedJobs = () => {\n        let i = 0;\n        let completedJobCount = cCompletedJobs.length;\n        if (completedJobCount===0){\n          return(\n            <div>\n              <p>It seems you don't have any Completed Jobs.</p>\n            </div>\n          )\n        }\n        else{\n        let tempJobs = [];\n        while (i < completedJobCount) {\n          let completedJob = cCompletedJobs[i]\n          let jobTitle = completedJob.title\n          let jobId = completedJob.id\n          let contractorName = completedJob.clientFirstName\n          let location = completedJob.locationDetail\n          var serviceTypeList = completedJob.serviceTypeList;\n          // var serviceTypeList = str.split(',');\n          let avatar = completedJob.downloadurl[0]\n          let userId= completedJob.clientId\n          tempJobs.push(\n            <Grid item>\n              <JobPosting userId={userId} avatar={avatar} complete= {1} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={serviceTypeList}/>\n            </Grid>\n          );\n          i += 1;\n        }\n        return tempJobs;}\n      };\n    return(\n        // <div className={styles.flex}>\n        //     {renderCompletedJobs()}\n        // </div>\n        <div className={styles.gridContainer}>\n          <Grid container spacing={2} justify=\"left\">\n              {loading?<LoadingView/>:renderCompletedJobs()}\n          </Grid>\n        </div>\n    )\n\n};\n\nexport default Done;\nexport {Done};"]},"metadata":{},"sourceType":"module"}