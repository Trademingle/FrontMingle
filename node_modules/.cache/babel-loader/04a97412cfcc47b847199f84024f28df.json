{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/Inbox/components/Messenger/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport styles from './messenger.module.css';\nimport { Route } from 'react-router-dom';\nexport default function Messenger(props) {\n  _s();\n\n  const [state, setState] = useState({\n    receiverId: 0,\n    receiverName: ''\n  }); // useEffect(() => {\n  //   loadMessages();\n  // },[state]);\n\n  let updateUserId = data => {\n    setState({\n      receiverId: data.Id,\n      receiverName: data.name\n    });\n  }; //Temporary timer for message loading\n  // const interval = setInterval(function() {\n  //   loadMessages();\n  // }, 10000);\n\n\n  let messagesEnd;\n\n  const scrollToBottom = () => {\n    messagesEnd.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  const onMessageUpdate = () => {\n    scrollToBottom();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.messenger,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: [styles.scrollable, styles.sidebar].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConversationList, {\n    onConversationSelect: updateUserId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scrollContainer\",\n    className: [styles.scrollable, styles.content].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/InboxPage\",\n    render: props => {\n      if (!props.location.state || !('from' in props.location.state)) {\n        props.location.state = state;\n      }\n\n      ;\n      return /*#__PURE__*/React.createElement(MessageList, {\n        name: props.location.state.receiverName,\n        receiver: props.location.state.receiverId,\n        onMessagesUpdate: onMessageUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      float: \"left\",\n      clear: \"both\"\n    },\n    ref: el => {\n      messagesEnd = el;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(Messenger, \"hwzqjzIdZQxTYr+iRGW6PS3aMeI=\");\n\n_c = Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/Inbox/components/Messenger/index.js"],"names":["React","useState","ConversationList","MessageList","styles","Route","Messenger","props","state","setState","receiverId","receiverName","updateUserId","data","Id","name","messagesEnd","scrollToBottom","scrollIntoView","behavior","onMessageUpdate","messenger","scrollable","sidebar","join","content","location","float","clear","el"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,gBAAP,MAA6B,qBAA7B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,KAAR,QAAqB,kBAArB;AAGA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AAEvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC;AACjCS,IAAAA,UAAU,EAAE,CADqB;AAEjCC,IAAAA,YAAY,EAAE;AAFmB,GAAD,CAAlC,CAFuC,CAOvC;AACA;AACA;;AAEA,MAAIC,YAAY,GAAIC,IAAD,IAAS;AAC1BJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,UAAU,EAAEG,IAAI,CAACC,EADV;AAEPH,MAAAA,YAAY,EAAEE,IAAI,CAACE;AAFZ,KAAD,CAAR;AAID,GALD,CAXuC,CAmBvC;AACA;AACA;AACA;;;AAEA,MAAIC,WAAJ;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3BD,IAAAA,WAAW,CAACE,cAAZ,CAA2B;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAA3B;AACD,GAFD;;AAGA,QAAMC,eAAe,GAAG,MAAM;AAE5BH,IAAAA,cAAc;AACf,GAHD;;AAIE,sBACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACiB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAoBE;AAAK,IAAA,SAAS,EAAE,CAACjB,MAAM,CAACkB,UAAR,EAAmBlB,MAAM,CAACmB,OAA1B,EAAmCC,IAAnC,CAAwC,GAAxC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,oBAAoB,EAAEZ,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CApBF,eAwBE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAA0B,IAAA,SAAS,EAAE,CAACR,MAAM,CAACkB,UAAR,EAAoBlB,MAAM,CAACqB,OAA3B,EAAoCD,IAApC,CAAyC,GAAzC,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,MAAM,EAAGjB,KAAD,IAAU;AACzC,UAAI,CAACA,KAAK,CAACmB,QAAN,CAAelB,KAAhB,IAAyB,EAAE,UAAUD,KAAK,CAACmB,QAAN,CAAelB,KAA3B,CAA7B,EAA+D;AAC7DD,QAAAA,KAAK,CAACmB,QAAN,CAAelB,KAAf,GAAuBA,KAAvB;AACD;;AAAA;AACD,0BACE,oBAAC,WAAD;AACA,QAAA,IAAI,EAAED,KAAK,CAACmB,QAAN,CAAelB,KAAf,CAAqBG,YAD3B;AAEA,QAAA,QAAQ,EAAEJ,KAAK,CAACmB,QAAN,CAAelB,KAAf,CAAqBE,UAF/B;AAGA,QAAA,gBAAgB,EAAEU,eAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAYE;AAAK,IAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAC,MAAR;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAZ;AACI,IAAA,GAAG,EAAGC,EAAD,IAAQ;AAAEb,MAAAA,WAAW,GAAGa,EAAd;AAAmB,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CAxBF,CADF;AAkDH;;GAlFuBvB,S;;KAAAA,S","sourcesContent":["import React, { useState} from 'react';\nimport ConversationList from '../ConversationList';\nimport MessageList from '../MessageList';\nimport styles from './messenger.module.css';\nimport {Route } from 'react-router-dom';\n\n\nexport default function Messenger(props) {\n \n  const [state, setState] = useState({\n    receiverId: 0,\n    receiverName: ''\n  })\n\n  // useEffect(() => {\n  //   loadMessages();\n  // },[state]);\n\n  let updateUserId = (data) =>{\n    setState({\n      receiverId: data.Id,\n      receiverName: data.name\n    });\n  }\n\n\n  //Temporary timer for message loading\n  // const interval = setInterval(function() {\n  //   loadMessages();\n  // }, 10000);\n\n  let messagesEnd;\n  const scrollToBottom = () => {\n    messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  }\n  const onMessageUpdate = () => {\n    \n    scrollToBottom()\n  }\n    return (\n      <div className={styles.messenger}>\n        {/* <Toolbar\n          title=\"Messenger\"\n          leftItems={[\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\n          ]}\n          rightItems={[\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\n          ]}\n        /> */}\n\n        {/* <Toolbar\n          title=\"Conversation Title\"\n          rightItems={[\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\n          ]}\n        /> */}\n        \n        <div className={[styles.scrollable,styles.sidebar].join(' ')}>\n          <ConversationList onConversationSelect={updateUserId}/>\n        </div>\n        \n        <div id='scrollContainer' className={[styles.scrollable, styles.content].join(' ')}>\n          <Route path=\"/InboxPage\" render={(props) =>{\n            if (!props.location.state || !('from' in props.location.state)){\n              props.location.state = state\n            };\n            return(\n              <MessageList \n              name={props.location.state.receiverName} \n              receiver={props.location.state.receiverId} \n              onMessagesUpdate={onMessageUpdate} /> \n            )\n          }}/>\n          <div style={{ float:\"left\", clear: \"both\" }}\n              ref={(el) => { messagesEnd = el; }}>\n          </div>\n{/* <Route\n      exact\n      path=\"/InboxPage\"\n      component={MessageList}\n /> */}\n          \n          {/* <MessageList name={state.receiverName} receiver={state.receiverId} routedID={state.routedId}/> */}\n        </div>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}