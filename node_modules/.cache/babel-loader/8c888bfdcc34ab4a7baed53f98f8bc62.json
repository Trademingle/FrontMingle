{"ast":null,"code":"import _objectSpread from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectWithoutProperties from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _taggedTemplateLiteral from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _excluded=[\"label\",\"onDelete\"];var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState}from'react';import useAutocomplete from'@material-ui/lab/useAutocomplete';import NoSsr from'@material-ui/core/NoSsr';import CheckIcon from'@material-ui/icons/Check';import CloseIcon from'@material-ui/icons/Close';import styled from'styled-components';// const Label = styled('label')`\n//   padding: 0 0 4px;\n//   line-height: 1.5;\n//   display: block;\n// `;\nvar InputWrapper=styled('div')(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 300px;\\n  border: 1px solid #000000;\\n  background-color: #ffffff;\\n  border-radius: 4px;\\n  padding: 1px;\\n  display: flex;\\n  flex-wrap: wrap;\\n  flex-direction: left;\\n\\n  &:hover {\\n    border-color: #40a9ff;\\n  }\\n\\n  &.focused {\\n    border-color: #40a9ff;\\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\\n  }\\n\\n  & input {\\n    font-size: 14px;\\n    height: 40px;\\n    box-sizing: border-box;\\n    padding: 4px 6px;\\n    width: 0;\\n    min-width: 30px;\\n    flex-grow: 1;\\n    border: 0;\\n    margin: 0;\\n    outline: 0;\\n  }\\n\"])));var Tag=styled(function(_ref){var label=_ref.label,onDelete=_ref.onDelete,props=_objectWithoutProperties(_ref,_excluded);return/*#__PURE__*/React.createElement(\"div\",props,/*#__PURE__*/React.createElement(\"span\",null,label),/*#__PURE__*/React.createElement(CloseIcon,{onClick:onDelete}));})(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  height: 24px;\\n  margin: 2px;\\n  line-height: 18px;\\n  background-color: #ffffff;\\n  border: 2px solid #2B64D2;\\n  border-radius: 38px;\\n  box-sizing: content-box;\\n  padding: 0 4px 0 10px;\\n  outline: 0;\\n  overflow: hidden;\\n  color:#2B64D2;\\n\\n  &:focus {\\n    border-color: #40a9ff;\\n    background-color: #e6f7ff;\\n  }\\n\\n  & span {\\n    overflow: hidden;\\n    white-space: nowrap;\\n    text-overflow: ellipsis;\\n  }\\n\\n  & svg {\\n    font-size: 14px;\\n    cursor: pointer;\\n    padding: 4px;\\n  }\\n\"])));var Listbox=styled('ul')(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 300px;\\n  margin: 2px 0 0;\\n  padding: 0;\\n  position: absolute;\\n  list-style: none;\\n  background-color: #fff;\\n  overflow: auto;\\n  max-height: 250px;\\n  border-radius: 4px;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\\n  z-index: 1;\\n\\n  & li {\\n    padding: 5px 12px;\\n    display: flex;\\n\\n    & span {\\n      flex-grow: 1;\\n    }\\n\\n    & svg {\\n      color: transparent;\\n    }\\n  }\\n\\n  & li[aria-selected='true'] {\\n    background-color: #fafafa;\\n    font-weight: 600;\\n\\n    & svg {\\n      color: #1890ff;\\n    }\\n  }\\n\\n  & li[data-focus='true'] {\\n    background-color: #e6f7ff;\\n    cursor: pointer;\\n\\n    & svg {\\n      color: #000;\\n    }\\n  }\\n\"])));// const choosingList = [[{ title: \"English\" },\n// { title: \"Nepali\" },\n// { title: \"Hindi\" },\n// { title: \"Spanish\" },\n// { title: \"French\" },\n// { title: \"Chinese\" },\n// { title: \"Russian\" },\n// { title: \"Portugese\" },\n// { title: \"Inodnesian\" },\n// { title: \"Italian\" },\n// { title: \"Japanese\" },\n// { title: \"Marathi\" },\n// { title: \"Bengali\" },\n// { title: \"Tamil\" },\n// { title: \"Urdu\" },\n// { title: \"Sewdish\" },\n// { title: \"Korean\" },\n// { title: \"Irish\" },\n// { title: \"Finnish\" },\n// { title: \"Dutch\" },\n// { title: \"Romanian\" },\n// { title: \"Slovak\" },\n// { title: \"Ukrainian\"}, ],\n// [{ title: \"Electrical\"},\n// { title: \"Plumbing\" },\n// { title: \"Carpentry\" },\n// { title: \"Alarm Systems\" },\n// { title: \"Roofing\" },\n// { title: \"Painting\" },\n// { title: \"Construction\" },\n// { title: \"Others\" }]]; \nexport default function CustomizedHook(props){// const selected = props.information[props.type].map((value)=>{\n//   return {title:value}\n// })\n// const languages = all_languages.map((item)=>{\n//   return {title:item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()}\n// })\n// const services = service_types.map((item)=>{\n//   return {title:item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()}\n// })\n// const all_options = {'services':services, languages:languages}\n// const options_list = all_options[props.type]\nvar selected_option;var _iterator=_createForOfIteratorHelper(props.options),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var option=_step.value;if(option.title===props.selected){// debugger;\nselected_option=option;}}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _useAutocomplete=useAutocomplete({id:'customized-hook-demo'+props.options.length+props.type,multiple:true,options:props.options,getOptionLabel:function getOptionLabel(option){return option.title;},defaultValue:[selected_option]// defaultValue: [choosingList[index][0]]\n}),getRootProps=_useAutocomplete.getRootProps,getInputProps=_useAutocomplete.getInputProps,getTagProps=_useAutocomplete.getTagProps,getListboxProps=_useAutocomplete.getListboxProps,getOptionProps=_useAutocomplete.getOptionProps,groupedOptions=_useAutocomplete.groupedOptions,value=_useAutocomplete.value,focused=_useAutocomplete.focused,setAnchorEl=_useAutocomplete.setAnchorEl;// if (props.options != options){\n//   debugger;\n//   setOptions(props.options)\n// }\nreturn/*#__PURE__*/React.createElement(NoSsr,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",getRootProps(),/*#__PURE__*/React.createElement(InputWrapper,{ref:setAnchorEl,style:{paddingLeft:25,width:228},className:focused?'focused':''},value.map(function(option,index){var optionProps=getTagProps({index:index});var currOnDelete=optionProps.onDelete;var newOnDelete=function newOnDelete(event){// debugger;\ncurrOnDelete(event);if('type'in props){var newArr=_toConsumableArray(value);newArr.splice(index,1);props.information[props.type]=newArr.map(function(val){return val.title;});props.setInformation(_objectSpread({},props.information));}};optionProps.onDelete=newOnDelete;return/*#__PURE__*/React.createElement(Tag,Object.assign({label:option?option.title:'N/A'},optionProps));}),/*#__PURE__*/React.createElement(\"input\",Object.assign({},getInputProps(),{placeholder:props.placeholder})))),groupedOptions.length>0?/*#__PURE__*/React.createElement(Listbox,getListboxProps(),groupedOptions.map(function(option,index){var optionProps=getOptionProps({option:option,index:index});var currOnClick=optionProps.onClick;var newOnClick=function newOnClick(event){currOnClick(event);if('type'in props){props.information[props.type]=[].concat(_toConsumableArray(value.map(function(val){return val.title;})),[event.target.innerText]);props.setInformation(_objectSpread({},props.information));}};optionProps.onClick=newOnClick;return/*#__PURE__*/React.createElement(\"li\",optionProps,/*#__PURE__*/React.createElement(\"span\",null,option.title),/*#__PURE__*/React.createElement(CheckIcon,{fontSize:\"small\"}));})):null));}","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/SearchResults/search.js"],"names":["React","useEffect","useState","useAutocomplete","NoSsr","CheckIcon","CloseIcon","styled","InputWrapper","Tag","label","onDelete","props","Listbox","CustomizedHook","selected_option","options","option","title","selected","id","length","type","multiple","getOptionLabel","defaultValue","getRootProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","value","focused","setAnchorEl","paddingLeft","width","map","index","optionProps","currOnDelete","newOnDelete","event","newArr","splice","information","val","setInformation","placeholder","currOnClick","onClick","newOnClick","target","innerText"],"mappings":"y+BAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAA0C,OAA1C,CACA,MAAOC,CAAAA,eAAP,KAA4B,kCAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,0BAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA;AACA;AACA;AACA;AACA;AAEA,GAAMC,CAAAA,YAAY,CAAGD,MAAM,CAAC,KAAD,CAAT,umBAAlB,CAiCA,GAAME,CAAAA,GAAG,CAAGF,MAAM,CAAC,kBAAGG,CAAAA,KAAH,MAAGA,KAAH,CAAUC,QAAV,MAAUA,QAAV,CAAuBC,KAAvB,6DACjB,0BAASA,KAAT,cACE,gCAAOF,KAAP,CADF,cAEE,oBAAC,SAAD,EAAW,OAAO,CAAEC,QAApB,EAFF,CADiB,EAAD,CAAT,ymBAAT,CAsCA,GAAME,CAAAA,OAAO,CAAGN,MAAM,CAAC,IAAD,CAAT,suBAAb,CA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,cAAe,SAASO,CAAAA,cAAT,CAAwBF,KAAxB,CAA+B,CAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,GAAIG,CAAAA,eAAJ,CAb4C,yCAcvBH,KAAK,CAACI,OAdiB,YAc5C,+CAAmC,IAAxBC,CAAAA,MAAwB,aACjC,GAAIA,MAAM,CAACC,KAAP,GAAiBN,KAAK,CAACO,QAA3B,CAAoC,CACtC;AACIJ,eAAe,CAAGE,MAAlB,CACD,CACF,CAnB2C,qDAqB5C,qBAUId,eAAe,CAAC,CAClBiB,EAAE,CAAE,uBAAwBR,KAAK,CAACI,OAAN,CAAcK,MAAtC,CAA+CT,KAAK,CAACU,IADvC,CAElBC,QAAQ,CAAE,IAFQ,CAGlBP,OAAO,CAAEJ,KAAK,CAACI,OAHG,CAIlBQ,cAAc,CAAE,wBAACP,MAAD,QAAYA,CAAAA,MAAM,CAACC,KAAnB,EAJE,CAKlBO,YAAY,CAAE,CAACV,eAAD,CACd;AANkB,CAAD,CAVnB,CACEW,YADF,kBACEA,YADF,CAEEC,aAFF,kBAEEA,aAFF,CAGEC,WAHF,kBAGEA,WAHF,CAIEC,eAJF,kBAIEA,eAJF,CAKEC,cALF,kBAKEA,cALF,CAMEC,cANF,kBAMEA,cANF,CAOEC,KAPF,kBAOEA,KAPF,CAQEC,OARF,kBAQEA,OARF,CASEC,WATF,kBASEA,WATF,CAmBA;AACA;AACA;AACA;AACA,mBACE,oBAAC,KAAD,mBACE,4CACE,0BAAUR,YAAY,EAAtB,cAEE,oBAAC,YAAD,EAAc,GAAG,CAAEQ,WAAnB,CAAgC,KAAK,CAAE,CAACC,WAAW,CAAC,EAAb,CAAiBC,KAAK,CAAC,GAAvB,CAAvC,CAAoE,SAAS,CAAEH,OAAO,CAAG,SAAH,CAAe,EAArG,EACGD,KAAK,CAACK,GAAN,CAAU,SAACpB,MAAD,CAASqB,KAAT,CAAmB,CAC5B,GAAMC,CAAAA,WAAW,CAAGX,WAAW,CAAC,CAAEU,KAAK,CAALA,KAAF,CAAD,CAA/B,CACA,GAAME,CAAAA,YAAY,CAAGD,WAAW,CAAC5B,QAAjC,CACA,GAAM8B,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAU,CAC5B;AACAF,YAAY,CAACE,KAAD,CAAZ,CACA,GAAI,QAAU9B,CAAAA,KAAd,CAAoB,CAClB,GAAM+B,CAAAA,MAAM,oBAAOX,KAAP,CAAZ,CACAW,MAAM,CAACC,MAAP,CAAcN,KAAd,CAAoB,CAApB,EACA1B,KAAK,CAACiC,WAAN,CAAkBjC,KAAK,CAACU,IAAxB,EAAgCqB,MAAM,CAACN,GAAP,CAAW,SAAAS,GAAG,QAAGA,CAAAA,GAAG,CAAC5B,KAAP,EAAd,CAAhC,CACAN,KAAK,CAACmC,cAAN,kBAAyBnC,KAAK,CAACiC,WAA/B,GACD,CACF,CATD,CAUAN,WAAW,CAAC5B,QAAZ,CAAuB8B,WAAvB,CACA,mBAAO,oBAAC,GAAD,gBAAK,KAAK,CAAExB,MAAM,CAACA,MAAM,CAACC,KAAR,CAAc,KAAhC,EAA2CqB,WAA3C,EAAP,CACA,CAfD,CADH,cAmBE,6CAAWZ,aAAa,EAAxB,EAA4B,WAAW,CAAEf,KAAK,CAACoC,WAA/C,GAnBF,CAFF,CADF,CAyBGjB,cAAc,CAACV,MAAf,CAAwB,CAAxB,cACC,oBAAC,OAAD,CAAaQ,eAAe,EAA5B,CACGE,cAAc,CAACM,GAAf,CAAmB,SAACpB,MAAD,CAASqB,KAAT,CAAmB,CACrC,GAAMC,CAAAA,WAAW,CAAGT,cAAc,CAAC,CAAEb,MAAM,CAANA,MAAF,CAAUqB,KAAK,CAALA,KAAV,CAAD,CAAlC,CACA,GAAMW,CAAAA,WAAW,CAAGV,WAAW,CAACW,OAAhC,CACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACT,KAAD,CAAU,CAC3BO,WAAW,CAACP,KAAD,CAAX,CACA,GAAI,QAAU9B,CAAAA,KAAd,CAAoB,CAClBA,KAAK,CAACiC,WAAN,CAAkBjC,KAAK,CAACU,IAAxB,+BAAoCU,KAAK,CAACK,GAAN,CAAU,SAAAS,GAAG,QAAGA,CAAAA,GAAG,CAAC5B,KAAP,EAAb,CAApC,GAAgEwB,KAAK,CAACU,MAAN,CAAaC,SAA7E,GACAzC,KAAK,CAACmC,cAAN,kBAAyBnC,KAAK,CAACiC,WAA/B,GACD,CACF,CAND,CAOAN,WAAW,CAACW,OAAZ,CAAsBC,UAAtB,CACA,mBAAO,yBAAQZ,WAAR,cACL,gCAAOtB,MAAM,CAACC,KAAd,CADK,cAEL,oBAAC,SAAD,EAAW,QAAQ,CAAC,OAApB,EAFK,CAAP,CAID,CAfA,CADH,CADD,CAmBG,IA5CN,CADF,CADF,CAkDD","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\n\n// const Label = styled('label')`\n//   padding: 0 0 4px;\n//   line-height: 1.5;\n//   display: block;\n// `;\n\nconst InputWrapper = styled('div')`\n  width: 300px;\n  border: 1px solid #000000;\n  background-color: #ffffff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: left;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 40px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n  <div {...props}>\n    <span>{label}</span>\n    <CloseIcon onClick={onDelete} />\n  </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 18px;\n  background-color: #ffffff;\n  border: 2px solid #2B64D2;\n  border-radius: 38px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n  color:#2B64D2;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 14px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  width: 300px;\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\n// const choosingList = [[{ title: \"English\" },\n// { title: \"Nepali\" },\n// { title: \"Hindi\" },\n// { title: \"Spanish\" },\n// { title: \"French\" },\n// { title: \"Chinese\" },\n// { title: \"Russian\" },\n// { title: \"Portugese\" },\n// { title: \"Inodnesian\" },\n// { title: \"Italian\" },\n// { title: \"Japanese\" },\n// { title: \"Marathi\" },\n// { title: \"Bengali\" },\n// { title: \"Tamil\" },\n// { title: \"Urdu\" },\n// { title: \"Sewdish\" },\n// { title: \"Korean\" },\n// { title: \"Irish\" },\n// { title: \"Finnish\" },\n// { title: \"Dutch\" },\n// { title: \"Romanian\" },\n// { title: \"Slovak\" },\n// { title: \"Ukrainian\"}, ],\n// [{ title: \"Electrical\"},\n// { title: \"Plumbing\" },\n// { title: \"Carpentry\" },\n// { title: \"Alarm Systems\" },\n// { title: \"Roofing\" },\n// { title: \"Painting\" },\n// { title: \"Construction\" },\n// { title: \"Others\" }]]; \n\n\nexport default function CustomizedHook(props) {  \n  // const selected = props.information[props.type].map((value)=>{\n  //   return {title:value}\n  // })\n  // const languages = all_languages.map((item)=>{\n  //   return {title:item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()}\n  // })\n  // const services = service_types.map((item)=>{\n  //   return {title:item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()}\n  // })\n  \n  // const all_options = {'services':services, languages:languages}\n  // const options_list = all_options[props.type]\n  let selected_option;\n  for (const option of props.options){\n    if (option.title === props.selected){\n  // debugger;\n      selected_option = option;\n    }\n  }\n\n  const {\n    getRootProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl,\n  } = useAutocomplete({\n    id: 'customized-hook-demo'+ props.options.length + props.type,\n    multiple: true,\n    options: props.options,\n    getOptionLabel: (option) => option.title,\n    defaultValue: [selected_option]\n    // defaultValue: [choosingList[index][0]]\n  });\n  \n  // if (props.options != options){\n  //   debugger;\n  //   setOptions(props.options)\n  // }\n  return (\n    <NoSsr>\n      <div >\n        <div  {...getRootProps()}>\n          {/* <Label {...getInputLabelProps()}>Customized hook</Label> */}\n          <InputWrapper ref={setAnchorEl} style={{paddingLeft:25, width:228}} className={focused ? 'focused' : ''}>\n            {value.map((option, index) => {\n              const optionProps = getTagProps({ index })\n              const currOnDelete = optionProps.onDelete;\n              const newOnDelete = (event) =>{\n                // debugger;\n                currOnDelete(event);\n                if ('type' in props){\n                  const newArr = [...value]\n                  newArr.splice(index,1)\n                  props.information[props.type] = newArr.map(val=> val.title)\n                  props.setInformation({...props.information});\n                }\n              }\n              optionProps.onDelete = newOnDelete;\n              return(<Tag label={option?option.title:'N/A'} {...optionProps} />\n            )}\n            )}\n\n            <input {...getInputProps()} placeholder={props.placeholder}/>\n          </InputWrapper>\n        </div>\n        {groupedOptions.length > 0 ? (\n          <Listbox {...getListboxProps()}>\n            {groupedOptions.map((option, index) => {\n              const optionProps = getOptionProps({ option, index })\n              const currOnClick = optionProps.onClick;\n              const newOnClick = (event) =>{\n                currOnClick(event);\n                if ('type' in props){\n                  props.information[props.type] = [...value.map(val=> val.title), event.target.innerText]\n                  props.setInformation({...props.information});\n                }\n              }\n              optionProps.onClick = newOnClick\n              return(<li {...optionProps}>\n                <span>{option.title}</span>\n                <CheckIcon fontSize=\"small\" />\n              </li>)\n            })}\n          </Listbox>\n        ) : null}\n      </div>\n    </NoSsr>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}