{"ast":null,"code":"import _classCallCheck from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _regeneratorRuntime from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import CloseOutlinedIcon from'@material-ui/icons/CloseOutlined';// import {\n//   GoogleMap,\n//   useLoadScript,\n//   Marker,\n//   InfoWindow,\n//   useJsApiLoader\n// } from \"@react-google-maps/api\";\nimport React,{Component}from'react';import{Map,GoogleApiWrapper,InfoWindow,Marker}from'google-maps-react';// import {Map as GoogleMapReact, Marker}  from 'google-maps-react';\nimport usePlacesAutocomplete,{getGeocode,getLatLng}from\"use-places-autocomplete\";import{Combobox,ComboboxInput,ComboboxList,ComboboxOption}from\"@reach/combobox\";import Styles from'./maps.module.css';import\"@reach/combobox/styles.css\";import Slider from'./slider';// const libraries = [\"places\"];\n// const mapContainerStyle = {\n//   height: \"270px\",\n//   width: \"800px\",\n//   // position: 'flex',\n//   // zIndex: '-1',\n//   borderColor: 'red',\n//   border: '10px'\n// };\n// const options = {\n//   disableDefaultUI: true,\n//   zoomControl: true,\n//   streetViewControl:false,\n//   zoomControlOptions: false,\n//   zoomControl: false,\n// };\n// const center = {\n//   lat: 43.6532,\n//   lng: -79.3832,\n// };\n// const container = {\n//   marginTop: '10%',\n//   marginRight: '28%',\n//   marginLeft: '28%',\n//   marginBottom: '-80%',\n//   // height: \"590px\",\n//   // width: \"750px\",\n//   border: '2px solid grey'\n// };\n// export default function App(props) {\n//   // const { isLoaded, loadError } = useLoadScript({\n//   //   googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n//   //   libraries,\n//   // });\n//   // TODO: Nandu update below\n//   let Location = props.Location;\n//   let setLocation = props.setLocation;\n//   const [markers, setMarkers] = React.useState([]);\n//   const [selected, setSelected] = React.useState(true);\n//   // const onMapClick = React.useCallback((e) => {\n//   //   debugger;\n//   //   setMarkers([\n//   //     ...markers,\n//   //     {\n//   //       lat: e.latLng.lat(),\n//   //       lng: e.latLng.lng(),\n//   //       time: new Date(),\n//   //     },\n//   //   ]);\n//   // }, []);\n//   const onMapClick = (e) => {\n//     debugger;\n//     setMarkers([\n//       ...markers,\n//       {\n//         key:'key'+e.lat.toString(),\n//         lat: e.lat,\n//         lng: e.lng,\n//         time: new Date(),\n//       },\n//     ]);\n//   }\n//   const mapRef = React.useRef();\n//   const onMapLoad = React.useCallback((map) => {\n//     mapRef.current = map;\n//   }, []);\n//   const panTo = React.useCallback(({ lat, lng }) => {\n//     mapRef.current.panTo({ lat, lng });\n//     mapRef.current.setZoom(14);\n//   }, []);\n//   // if (loadError) return \"Error\";\n//   // if (!isLoaded) return \"Loading...\";\n//   return (\n//    //hard coded the search and address, not useing material ui \n//     <div style={{height:800,width:1000, overflow:'hidden'}}>\n//        <CloseOutlinedIcon style={{ height: 40, width: 40 }} className={Styles.cross} onClick={props.close}/>\n//        <div className={Styles.topT}>\n//         <h1 className={Styles.wantSearchText}>Where do you want to search?</h1>\n//         <h1 className={Styles.addressText}>Address, City Or Province</h1>\n//       </div>\n//       <Search panTo={panTo} />\n//       <GoogleMapReact\n//         id=\"map\"\n//         mapContainerStyle={mapContainerStyle}\n//         zoom={9}\n//         center={center}\n//         options={options}\n//         onClick={onMapClick}\n//         onLoad={onMapLoad}\n//       >\n//         {markers.map(marker => (\n//           <Marker\n//             {...marker}\n//             onRightClick={() => console.log('marker click')}\n//           />\n//         ))}\n//         {/* {selected ? (\n//           <InfoWindow\n//             position={{ lat: selected.lat, lng: selected.lng }}\n//             onCloseClick={() => {\n//               setSelected(null);\n//             }}\n//           >\n//             <div>\n//               <h2>\n//                 <span role=\"img\" aria-label=\"bear\">\n//                 </span>{\" \"}\n//                 Alert\n//               </h2>\n//               <p>Spotted {formatRelative(selected.time, new Date())}</p>\n//             </div> \n//           </InfoWindow>\n//         ) : null} */}\n//       </GoogleMapReact>\n//       <div >\n//         <h1 className={Styles.bottomL}></h1>\n//         <div className={Styles.slider}>\n//           <Slider close={props.close}/>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nfunction Search(_ref){var panTo=_ref.panTo;var _usePlacesAutocomplet=usePlacesAutocomplete({requestOptions:{location:{lat:function lat(){return 43.6532;},lng:function lng(){return-79.3832;}},radius:100*1000}}),ready=_usePlacesAutocomplet.ready,value=_usePlacesAutocomplet.value,_usePlacesAutocomplet2=_usePlacesAutocomplet.suggestions,status=_usePlacesAutocomplet2.status,data=_usePlacesAutocomplet2.data,setValue=_usePlacesAutocomplet.setValue,clearSuggestions=_usePlacesAutocomplet.clearSuggestions;// https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\nvar handleInput=function handleInput(e){setValue(e.target.value);};var handleSelect=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address){var results,_yield$getLatLng,lat,lng;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setValue(address,false);clearSuggestions();_context.prev=2;_context.next=5;return getGeocode({address:address});case 5:results=_context.sent;_context.next=8;return getLatLng(results[0]);case 8:_yield$getLatLng=_context.sent;lat=_yield$getLatLng.lat;lng=_yield$getLatLng.lng;panTo({lat:lat,lng:lng});_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(\"Error: \",_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function handleSelect(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:Styles.search},/*#__PURE__*/React.createElement(Combobox,{onSelect:handleSelect},/*#__PURE__*/React.createElement(ComboboxInput,{value:value,onChange:handleInput,disabled:!ready,placeholder:\"Search your location\"}),/*#__PURE__*/React.createElement(ComboboxList,{style:{zIndex:1000000,background:'white'}},status===\"OK\"&&data.map(function(_ref3){var id=_ref3.id,description=_ref3.description;return/*#__PURE__*/React.createElement(ComboboxOption,{key:id,value:description,style:{zIndex:1000000}});}))));}var mapStyles={width:'100%',height:'100%'};export var MapContainer=/*#__PURE__*/function(_Component){_inherits(MapContainer,_Component);var _super=_createSuper(MapContainer);function MapContainer(){var _this;_classCallCheck(this,MapContainer);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={showingInfoWindow:false,// Hides or shows the InfoWindow\nactiveMarker:{},// Shows the active marker upon click\nselectedPlace:{}// Shows the InfoWindow to the selected place upon a marker\n};_this.onMarkerClick=function(props,marker,e){return _this.setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});};_this.onClose=function(props){if(_this.state.showingInfoWindow){_this.setState({showingInfoWindow:false,activeMarker:null});}};return _this;}_createClass(MapContainer,[{key:\"render\",value:// onMapClick = (e) => {\n//     debugger;\n//     setMarkers([\n//       ...markers,\n//       {\n//         key:'key'+e.lat.toString(),\n//         lat: e.lat,\n//         lng: e.lng,\n//         time: new Date(),\n//       },\n//     ]);\n//   }\nfunction render(){return/*#__PURE__*/React.createElement(\"div\",{style:{height:800,width:1000,overflow:'hidden'}},/*#__PURE__*/React.createElement(CloseOutlinedIcon,{style:{height:40,width:40},className:Styles.cross,onClick:this.props.close}),/*#__PURE__*/React.createElement(\"div\",{className:Styles.topT},/*#__PURE__*/React.createElement(\"h1\",{className:Styles.wantSearchText},\"Where do you want to search?\"),/*#__PURE__*/React.createElement(\"h1\",{className:Styles.addressText},\"Address, City Or Province\")),/*#__PURE__*/React.createElement(Search,{panTo:this.props.panTo}),/*#__PURE__*/React.createElement(Map,{google:this.props.google,zoom:14,style:mapStyles,initialCenter:{lat:43.8532,lng:-79.3832}// onClick={onMapClick}\n},/*#__PURE__*/React.createElement(Marker,{onClick:this.onMarkerClick,name:'Kenyatta International Convention Centre'}),/*#__PURE__*/React.createElement(InfoWindow,{marker:this.state.activeMarker,visible:this.state.showingInfoWindow,onClose:this.onClose},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h4\",null,this.state.selectedPlace.name)))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",{className:Styles.bottomL}),/*#__PURE__*/React.createElement(\"div\",{className:Styles.slider},/*#__PURE__*/React.createElement(Slider,{close:this.props.close}))));}}]);return MapContainer;}(Component);export default GoogleApiWrapper({apiKey:'AIzaSyBQbOVpM2UKKRF82lw8OVr2KhKKysfjZSU'})(MapContainer);","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/Maps/index.js"],"names":["CloseOutlinedIcon","React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","usePlacesAutocomplete","getGeocode","getLatLng","Combobox","ComboboxInput","ComboboxList","ComboboxOption","Styles","Slider","Search","panTo","requestOptions","location","lat","lng","radius","ready","value","suggestions","status","data","setValue","clearSuggestions","handleInput","e","target","handleSelect","address","results","console","log","search","zIndex","background","map","id","description","mapStyles","width","height","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","props","marker","setState","onClose","overflow","cross","close","topT","wantSearchText","addressText","google","name","bottomL","slider","apiKey"],"mappings":"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","sourcesContent":["import CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\n// import {\n//   GoogleMap,\n//   useLoadScript,\n//   Marker,\n//   InfoWindow,\n//   useJsApiLoader\n// } from \"@react-google-maps/api\";\n\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper,InfoWindow, Marker } from 'google-maps-react';\n\n// import {Map as GoogleMapReact, Marker}  from 'google-maps-react';\nimport usePlacesAutocomplete, {\n  getGeocode,\n  getLatLng,\n} from \"use-places-autocomplete\";\nimport {\n  Combobox,\n  ComboboxInput,\n  ComboboxList,\n  ComboboxOption,\n} from \"@reach/combobox\";\nimport Styles from './maps.module.css'\nimport \"@reach/combobox/styles.css\";\nimport Slider from './slider'\n\n// const libraries = [\"places\"];\n// const mapContainerStyle = {\n\n//   height: \"270px\",\n//   width: \"800px\",\n//   // position: 'flex',\n//   // zIndex: '-1',\n//   borderColor: 'red',\n//   border: '10px'\n// };\n// const options = {\n//   disableDefaultUI: true,\n//   zoomControl: true,\n//   streetViewControl:false,\n//   zoomControlOptions: false,\n//   zoomControl: false,\n  \n// };\n// const center = {\n//   lat: 43.6532,\n//   lng: -79.3832,\n// };\n\n// const container = {\n//   marginTop: '10%',\n//   marginRight: '28%',\n//   marginLeft: '28%',\n//   marginBottom: '-80%',\n//   // height: \"590px\",\n//   // width: \"750px\",\n//   border: '2px solid grey'\n// };\n// export default function App(props) {\n//   // const { isLoaded, loadError } = useLoadScript({\n//   //   googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n//   //   libraries,\n//   // });\n//   // TODO: Nandu update below\n//   let Location = props.Location;\n//   let setLocation = props.setLocation;\n//   const [markers, setMarkers] = React.useState([]);\n//   const [selected, setSelected] = React.useState(true);\n\n//   // const onMapClick = React.useCallback((e) => {\n//   //   debugger;\n//   //   setMarkers([\n//   //     ...markers,\n//   //     {\n//   //       lat: e.latLng.lat(),\n//   //       lng: e.latLng.lng(),\n//   //       time: new Date(),\n//   //     },\n//   //   ]);\n\n//   // }, []);\n\n//   const onMapClick = (e) => {\n//     debugger;\n//     setMarkers([\n//       ...markers,\n//       {\n//         key:'key'+e.lat.toString(),\n//         lat: e.lat,\n//         lng: e.lng,\n//         time: new Date(),\n//       },\n//     ]);\n\n//   }\n\n//   const mapRef = React.useRef();\n//   const onMapLoad = React.useCallback((map) => {\n//     mapRef.current = map;\n//   }, []);\n\n//   const panTo = React.useCallback(({ lat, lng }) => {\n//     mapRef.current.panTo({ lat, lng });\n//     mapRef.current.setZoom(14);\n//   }, []);\n\n//   // if (loadError) return \"Error\";\n//   // if (!isLoaded) return \"Loading...\";\n//   return (\n//    //hard coded the search and address, not useing material ui \n//     <div style={{height:800,width:1000, overflow:'hidden'}}>\n//        <CloseOutlinedIcon style={{ height: 40, width: 40 }} className={Styles.cross} onClick={props.close}/>\n//        <div className={Styles.topT}>\n//         <h1 className={Styles.wantSearchText}>Where do you want to search?</h1>\n//         <h1 className={Styles.addressText}>Address, City Or Province</h1>\n//       </div>\n    \n      \n//       <Search panTo={panTo} />\n      \n//       <GoogleMapReact\n//         id=\"map\"\n//         mapContainerStyle={mapContainerStyle}\n      \n//         zoom={9}\n//         center={center}\n//         options={options}\n//         onClick={onMapClick}\n//         onLoad={onMapLoad}\n//       >\n//         {markers.map(marker => (\n//           <Marker\n//             {...marker}\n//             onRightClick={() => console.log('marker click')}\n//           />\n//         ))}\n//         {/* {selected ? (\n//           <InfoWindow\n//             position={{ lat: selected.lat, lng: selected.lng }}\n//             onCloseClick={() => {\n//               setSelected(null);\n//             }}\n//           >\n//             <div>\n//               <h2>\n//                 <span role=\"img\" aria-label=\"bear\">\n                \n//                 </span>{\" \"}\n//                 Alert\n//               </h2>\n//               <p>Spotted {formatRelative(selected.time, new Date())}</p>\n//             </div> \n//           </InfoWindow>\n//         ) : null} */}\n//       </GoogleMapReact>\n//       <div >\n//         <h1 className={Styles.bottomL}></h1>\n//         <div className={Styles.slider}>\n//           <Slider close={props.close}/>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\nfunction Search({ panTo }) {\n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions,\n  } = usePlacesAutocomplete({\n    requestOptions: {\n      location: { lat: () => 43.6532, lng: () => -79.3832 },\n      radius: 100 * 1000,\n    },\n  });\n\n  // https://developers.google.com/maps/documentation/javascript/reference/places-autocomplete-service#AutocompletionRequest\n\n  const handleInput = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSelect = async (address) => {\n    setValue(address, false);\n    clearSuggestions();\n\n    try {\n      const results = await getGeocode({ address });\n      const { lat, lng } = await getLatLng(results[0]);\n      panTo({ lat, lng });\n    } catch (error) {\n      console.log(\"Error: \", error);\n    }\n  };\n\n  return (\n    \n    <div className={Styles.search} >\n    \n      <Combobox onSelect={handleSelect}>\n        <ComboboxInput\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"Search your location\"\n        />\n      \n          <ComboboxList style={{zIndex:1000000, background:'white'}}>\n            {status === \"OK\" &&\n              data.map(({ id, description }) => (\n                <ComboboxOption key={id} value={description} style={{zIndex:1000000}}/>\n              ))}\n          </ComboboxList>\n      </Combobox>\n    \n    </div>\n  );\n}\n\n\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,  // Hides or shows the InfoWindow\n    activeMarker: {},          // Shows the active marker upon click\n    selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\n  };\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  // onMapClick = (e) => {\n  //     debugger;\n  //     setMarkers([\n  //       ...markers,\n  //       {\n  //         key:'key'+e.lat.toString(),\n  //         lat: e.lat,\n  //         lng: e.lng,\n  //         time: new Date(),\n  //       },\n  //     ]);\n  //   }\n\n  render() {\n    return (\n      <div style={{height:800,width:1000, overflow:'hidden'}}>\n       <CloseOutlinedIcon style={{ height: 40, width: 40 }} className={Styles.cross} onClick={this.props.close}/>\n       <div className={Styles.topT}>\n        <h1 className={Styles.wantSearchText}>Where do you want to search?</h1>\n        <h1 className={Styles.addressText}>Address, City Or Province</h1>\n       </div>\n    \n      \n      <Search panTo={this.props.panTo} />\n      \n      <Map\n        google={this.props.google}\n        zoom={14}\n        style={mapStyles}\n        initialCenter={\n          {\n            lat: 43.8532,\n            lng: -79.3832,\n          }\n        }\n        // onClick={onMapClick}\n      >\n        <Marker\n          onClick={this.onMarkerClick}\n          name={'Kenyatta International Convention Centre'}\n        />\n{/* //        {markers.map(marker => (\n//           <Marker\n//             {...marker}\n//             onRightClick={() => console.log('marker click')}\n//           />\n//         ))} */}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n      </Map>\n      <div >\n         <h1 className={Styles.bottomL}></h1>\n         <div className={Styles.slider}>\n           <Slider close={this.props.close}/>\n         </div>\n       </div>\n     </div>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyBQbOVpM2UKKRF82lw8OVr2KhKKysfjZSU'\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}