{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/MyProfileClient/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from '../ProfileViewClient/profile.module.css';\nimport api from '../api/api';\nimport ProfileFormat from './profile.js';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst ClientProfile = props => {\n  _s();\n\n  function onChange() {\n    getProfiles();\n  }\n\n  const [profiles, setProfiles] = useState({\n    languageList: []\n  });\n  const [loading, setLoading] = useState(false);\n  var profileID = {};\n  profileID['id'] = localStorage.getItem('user_id');\n\n  const getProfiles = () => {\n    api.getProfiles(profileID).then(res => {\n      console.log(\"Profile loaded successfully\");\n      console.log(res);\n      setProfiles(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getProfiles();\n    window.scrollTo(0, 0);\n  }, []);\n\n  const renderProfiles = () => {\n    let firstName = profiles.firstName;\n    let lastName = profiles.lastName;\n    let rating = profiles.averageRating;\n    let jobsDone = profiles.jobsCompleted;\n    let services = profiles.serviceList;\n    let languages = profiles.languageList;\n    return /*#__PURE__*/React.createElement(ProfileFormat, {\n      onChange: onChange,\n      avatar: profiles.downloadurl,\n      name: firstName + \" \" + lastName,\n      firstName: firstName,\n      lastName: lastName,\n      rating: rating,\n      jobsdone: jobsDone,\n      insuranceNumber: profiles.insuranceNumber,\n      isInsuranceNumberVerified: profiles.isInsuranceNumberVerified,\n      isWorkerNumberVerified: profiles.isWorkerNumberVerified,\n      workerNumber: profiles.workerNumber,\n      services: services,\n      languages: languages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    });\n  };\n\n  let languages = profiles.languageList.join(', ');\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.profileMainBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.profilebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, renderProfiles()), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.SecondBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.languagebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.planguages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Preferred languages: \\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, languages)), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.languagebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.planguages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Phone Number: \\xA0\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"9876543210\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(ClientProfile, \"LIObCCdoJ8gbbBcJP3+C/+Rgr/A=\");\n\n_c = ClientProfile;\nexport default ClientProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientProfile\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/MyProfileClient/index.js"],"names":["React","useEffect","useState","styles","api","ProfileFormat","LoadingView","ClientProfile","props","onChange","getProfiles","profiles","setProfiles","languageList","loading","setLoading","profileID","localStorage","getItem","then","res","console","log","data","catch","err","window","scrollTo","renderProfiles","firstName","lastName","rating","averageRating","jobsDone","jobsCompleted","services","serviceList","languages","downloadurl","insuranceNumber","isInsuranceNumberVerified","isWorkerNumberVerified","workerNumber","join","profileMainBox","profilebox","hr1","SecondBox","languagebox","planguages","hr2"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from '../ProfileViewClient/profile.module.css';\nimport api from '../api/api';\nimport ProfileFormat from './profile.js';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst ClientProfile = (props) => {\n    function onChange(){\n        getProfiles()\n    }\n    const [profiles, setProfiles] = useState({languageList:[]});\n    const [loading, setLoading] = useState(false);\n    var profileID = {};\n    profileID['id'] = localStorage.getItem('user_id');\n    const getProfiles = () => {\n        api.getProfiles(profileID).then(res => {\n            console.log(\"Profile loaded successfully\");\n            console.log(res);\n            setProfiles(res.data);\n            setLoading(false);\n        }).catch(err => {console.log(err);setLoading(false);})\n    }\n    useEffect(() => {\n        setLoading(true);\n        getProfiles();\n        window.scrollTo(0, 0);\n      },[]);\n\n    const renderProfiles = () => {\n        let firstName = profiles.firstName\n        let lastName = profiles.lastName\n        let rating = profiles.averageRating;\n        let jobsDone = profiles.jobsCompleted;\n        let services = profiles.serviceList;\n        let languages = profiles.languageList\n        return(\n            <ProfileFormat \n                onChange={onChange} \n                avatar={profiles.downloadurl} \n                name={firstName +\" \"+ lastName}\n                firstName={firstName}\n                lastName={lastName}\n                rating={rating} \n                jobsdone={jobsDone}\n                insuranceNumber={profiles.insuranceNumber}\n                isInsuranceNumberVerified={profiles.isInsuranceNumberVerified}\n                isWorkerNumberVerified={profiles.isWorkerNumberVerified}\n                workerNumber={profiles.workerNumber}\n                services={services}\n                languages={languages}\n            />\n          );\n        };   \n    let languages = profiles.languageList.join(', ')\n    if (loading) {\n        return <LoadingView/>;\n        }\n    return(\n        <div className={styles.profileMainBox}>\n            <div className={styles.profilebox}>\n                {renderProfiles()}\n            </div>  \n            <hr className={styles.hr1}/>   \n            <div className={styles.SecondBox}>\n                <div className={styles.languagebox}>\n                    <h1 className={styles.planguages}>Preferred languages: &nbsp;</h1>\n                    <p className={styles.languages}>{languages}</p>\n                </div>\n                <div className={styles.languagebox}>\n                    <h1 className={styles.planguages}>Phone Number: &nbsp;</h1>\n                    <p className={styles.languages}>9876543210</p>\n                </div>\n            </div> \n            <hr className={styles.hr2}/>\n        </div> \n    )};\n\nexport default ClientProfile;\n\n"]},"metadata":{},"sourceType":"module"}