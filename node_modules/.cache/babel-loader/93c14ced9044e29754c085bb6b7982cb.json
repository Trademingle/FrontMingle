{"ast":null,"code":"import _slicedToArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import styles from'./styles.module.css';import JobPosting from'./jobposting.js';import api from'../api/api';import{Grid}from'@material-ui/core';import LoadingView from'../ResuableComponents/loadingView';var Active=function Active(){var _useState=useState({serviceTypeList:[]}),_useState2=_slicedToArray(_useState,2),cactiveJobs=_useState2[0],setCActiveJobs=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var getCActiveJobs=function getCActiveJobs(){api.getCActiveJobs().then(function(res){console.log(\"Job loaded successfully\");console.log(res);setCActiveJobs(res.data);//change [] with .get\nsetLoading(false);}).catch(function(err){return console.log(err);});};useEffect(function(){setLoading(true);getCActiveJobs();},[]);var renderActiveJobs=function renderActiveJobs(){var i=0;var activeJobCount=cactiveJobs.length;if(activeJobCount===0){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"It seems you don't have any Active Jobs.\"));}else{var tempJobs=[];while(i<activeJobCount){var activeJob=cactiveJobs[i];var jobTitle=activeJob.title;var jobId=activeJob.id;var contractorName=activeJob.clientFirstName;var location=activeJob.locationDetail;var serviceType=activeJob.serviceTypeList;var avatar=activeJob.downloadurl[0];var userId=activeJob.clientId;tempJobs.push(/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(JobPosting,{avatar:avatar,complete:0,id:jobId,title:jobTitle,name:contractorName,location:location,serviceList:serviceType,userId:userId})));i+=1;}return tempJobs;};};return/*#__PURE__*/React.createElement(\"div\",{className:styles.gridContainer},/*#__PURE__*/React.createElement(Grid,{container:true,spacing:2,justify:\"left\"},loading?/*#__PURE__*/React.createElement(LoadingView,null):renderActiveJobs()));};export default Active;export{Active};","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/ContractorActiveJobsPage/active.js"],"names":["React","useEffect","useState","styles","JobPosting","api","Grid","LoadingView","Active","serviceTypeList","cactiveJobs","setCActiveJobs","loading","setLoading","getCActiveJobs","then","res","console","log","data","catch","err","renderActiveJobs","i","activeJobCount","length","tempJobs","activeJob","jobTitle","title","jobId","id","contractorName","clientFirstName","location","locationDetail","serviceType","avatar","downloadurl","userId","clientId","push","gridContainer"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './styles.module.css';  \nimport JobPosting from './jobposting.js';\nimport api from '../api/api';\nimport { Grid } from '@material-ui/core'\nimport LoadingView from '../ResuableComponents/loadingView';\n\n\nconst Active = () => {\n    const [cactiveJobs, setCActiveJobs] = useState({serviceTypeList:[]});\n    const [loading, setLoading] = useState(false);\n    const getCActiveJobs = () => {\n      api.getCActiveJobs().then(res => {\n          console.log(\"Job loaded successfully\");\n          console.log(res);\n          setCActiveJobs(res.data); //change [] with .get\n          setLoading(false);\n      }).catch(err => console.log(err))\n    }\n    useEffect(() => {\n      setLoading(true);\n      getCActiveJobs();\n    },[]);\n    const renderActiveJobs = () => {\n      let i = 0;\n      let activeJobCount = cactiveJobs.length;\n      if (activeJobCount===0){\n        return(\n          <div>\n            <p>It seems you don't have any Active Jobs.</p>\n          </div>\n        )\n      }\n      else{\n        let tempJobs = [];\n        while (i < activeJobCount) {\n          let activeJob = cactiveJobs[i]\n          let jobTitle = activeJob.title\n          let jobId = activeJob.id\n          let contractorName = activeJob.clientFirstName\n          let location = activeJob.locationDetail\n          var serviceType = activeJob.serviceTypeList;\n          let avatar = activeJob.downloadurl[0]\n          let userId = activeJob.clientId\n          tempJobs.push(\n            <Grid item>\n              <JobPosting avatar={avatar} complete= {0} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={serviceType} userId={userId}/>\n            </Grid>\n          );\n          i += 1;\n        }\n        return tempJobs\n      };\n    };\n    return(\n      <div className={styles.gridContainer}>\n        <Grid container spacing={2} justify=\"left\">\n          {loading?<LoadingView/>:renderActiveJobs()}\n        </Grid>\n      </div>\n    )\n};\n\n\nexport default Active;\nexport {Active};\n"]},"metadata":{},"sourceType":"module"}