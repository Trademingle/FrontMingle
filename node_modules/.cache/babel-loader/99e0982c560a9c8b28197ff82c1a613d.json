{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/PostingPage_Unassigned/body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from '../PostingPage/posting.module.css';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'; // import { makeStyles , useTheme} from '@material-ui/core/styles';\n\nimport api from '../api/api';\nimport { useHistory } from 'react-router-dom';\nimport ImageViewer from '../ImageViewer';\nimport SimpleMenu from './dropDown';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport swal from 'sweetalert';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 160,\n    maxWidth: 160\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  buttonForm: {\n    position: 'absolute',\n    margin: '20px 180px',\n    cursor: 'pointer',\n    borderRadius: '2px',\n    border: '1px solid #2b64d2',\n    '&:hover': {\n      background: \"#2b64d2\",\n      color: 'white'\n    }\n  }\n}));\nexport default function ClientReview(props) {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const handleOnClick = event => {\n    event.preventDefault();\n    history.goBack();\n  }; //code to implement assign job in posting page\n\n\n  const [jobsId, setjobsId] = React.useState('');\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = event => {\n    setjobsId(event.target.value);\n  };\n\n  var data = {};\n\n  const handleOnSubmit = event => {\n    data.contractorId = jobsId;\n    data.id = props.id;\n    api.assignUnassignedJobs(data).then(res => {\n      swal({\n        title: \"Assigned!\",\n        text: \"Job has been assigned, please wait for contractor to accept!\",\n        icon: \"success\",\n        button: \"OK\"\n      });\n    }).catch(err => console.log(err));\n  };\n\n  const [unassignedJob, setUnassignedJob] = useState({\n    downloadurl: [],\n    serviceTypeList: [],\n    languageList: []\n  });\n  var contractorID = {};\n  contractorID[\"id\"] = props.id;\n\n  const getUnassignedJob = () => {\n    api.unassignedJob(contractorID).then(res => {\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setUnassignedJob(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setOpen(true);\n    });\n  };\n\n  useEffect(() => {\n    getUnassignedJob();\n  }, []);\n  const ts = moment(unassignedJob.datePosted);\n  let timeVal;\n\n  if (moment().diff(ts, 'minutes') < 60) {\n    timeVal = String(moment().diff(ts, 'minutes')) + 'm';\n  } else if (moment().diff(ts, 'hours') < 24) {\n    timeVal = String(moment().diff(ts, 'hours')) + 'h';\n  } else if (moment().diff(ts, 'days') < 24) {\n    timeVal = String(moment().diff(ts, 'days')) + 'd';\n  } else {\n    timeVal = String(moment().diff(ts, 'weeks')) + 'w';\n  } //getting the recently contacted contractors list\n\n\n  const [contractorList, setContractorList] = useState({});\n\n  const getContractorList = () => {\n    api.getChats().then(res => {\n      console.log(\"Chats loaded successfully\");\n      console.log(res);\n      setContractorList(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getContractorList();\n  }, []);\n\n  const rendercontractorList = () => {\n    let i = 0;\n    let contractorListCount = contractorList.length;\n    let tempJobs = [];\n\n    while (i < contractorListCount) {\n      let contractor = contractorList[i];\n      let name = contractor.firstName + ' ' + contractor.lastName;\n      let contractorId = contractor.id;\n      tempJobs.push( /*#__PURE__*/React.createElement(MenuItem, {\n        value: contractorId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, name));\n      i += 1;\n    }\n\n    return tempJobs;\n  }; //\n\n\n  const renderTitle = () => {\n    let jobTitle = unassignedJob.title;\n    let name = unassignedJob.clientFirstName;\n    let jobDetails = unassignedJob.jobDetails;\n    let locationDetail = unassignedJob.locationDetail;\n    let imagesList = unassignedJob.downloadurl;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.headerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n      style: {\n        height: 25,\n        cursor: \"pointer\"\n      },\n      onClick: handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.header1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }, \" \", jobTitle, \" \"), /*#__PURE__*/React.createElement(SimpleMenu, {\n      id: props.id,\n      jobDetails: jobDetails,\n      languages: unassignedJob.languageList,\n      services: unassignedJob.serviceTypeList,\n      jobTitle: jobTitle,\n      location: locationDetail,\n      className: styles.simpleMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 21\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 52\n      }\n    }, \"\\u2022\"), \" \", locationDetail)), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Posted \", timeVal, \" ago\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ImageViewer, {\n      imagesList: imagesList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.paragraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(InputLabel, {\n      id: \"inputLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, \"Select Contractor\"), /*#__PURE__*/React.createElement(Select, {\n      labelId: \"selectLabel\",\n      id: \"assignForm\",\n      value: jobsId,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }\n    }, \"None\")), rendercontractorList()), /*#__PURE__*/React.createElement(FormHelperText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, \"Assign Job to a Contractor\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: handleOnSubmit,\n      className: classes.buttonForm,\n      style: {\n        height: 30,\n        width: 120\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, \"Assign\")), /*#__PURE__*/React.createElement(\"hr\", {\n      className: styles.hr1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: styles.header2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"About the job\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.about,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, jobDetails), /*#__PURE__*/React.createElement(\"hr\", {\n      className: styles.hr2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  function Tags(props) {\n    if (!props.tagname) return null;\n    return /*#__PURE__*/React.createElement(\"box\", {\n      className: styles2.tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles2.tagfont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    }, props.tagname));\n  }\n\n  ;\n\n  const renderSTags = () => {\n    let i = 0;\n    let services = unassignedJob.serviceTypeList;\n    let tagsCount = services.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: services[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 27\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  const renderLTags = () => {\n    let i = 0;\n    let lang = unassignedJob.languageList;\n\n    for (var j = 0; j < lang.length; j++) {\n      let temp = lang[j].toLowerCase();\n      lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n    }\n\n    let tagsCount = lang.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: lang[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 27\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.posting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"box\", {\n    className: styles.postingbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, renderTitle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.skillsbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, \"Required Skills\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, renderSTags()), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, \"Required Languages\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, renderLTags()))), /*#__PURE__*/React.createElement(NotFound, {\n    setOpen: setOpen,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(ClientReview, \"G3Vb+dR61FZjR6DGff7ggt6n15Y=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = ClientReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientReview\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/PostingPage_Unassigned/body.js"],"names":["React","useEffect","useState","styles","ArrowBackIcon","api","useHistory","ImageViewer","SimpleMenu","styles2","swal","moment","makeStyles","InputLabel","MenuItem","FormHelperText","FormControl","Select","NotFound","LoadingView","useStyles","theme","formControl","margin","spacing","minWidth","maxWidth","selectEmpty","marginTop","buttonForm","position","cursor","borderRadius","border","background","color","ClientReview","props","classes","history","handleOnClick","event","preventDefault","goBack","jobsId","setjobsId","open","setOpen","loading","setLoading","handleChange","target","value","data","handleOnSubmit","contractorId","id","assignUnassignedJobs","then","res","title","text","icon","button","catch","err","console","log","unassignedJob","setUnassignedJob","downloadurl","serviceTypeList","languageList","contractorID","getUnassignedJob","ts","datePosted","timeVal","diff","String","contractorList","setContractorList","getContractorList","getChats","rendercontractorList","i","contractorListCount","length","tempJobs","contractor","name","firstName","lastName","push","renderTitle","jobTitle","clientFirstName","jobDetails","locationDetail","imagesList","headerDiv","height","header1","simpleMenu","frame","location","row","paragraph","width","hr1","header2","about","hr2","Tags","tagname","tag","tagfont","renderSTags","services","tagsCount","tempTags","renderLTags","lang","j","temp","toLowerCase","charAt","toUpperCase","substr","posting","postingbox","skillsbox","servicetagbox"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from '../PostingPage/posting.module.css'; \nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n// import { makeStyles , useTheme} from '@material-ui/core/styles';\nimport api from '../api/api';\nimport { useHistory} from 'react-router-dom';\nimport ImageViewer from '../ImageViewer';\nimport SimpleMenu from './dropDown';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport swal from 'sweetalert';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 160,\n      maxWidth:160,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    buttonForm:{\n        position:'absolute',\n        margin: '20px 180px',\n        cursor:'pointer',\n        borderRadius:'2px',\n        border: '1px solid #2b64d2',\n        '&:hover': {\n            background: \"#2b64d2\",\n            color: 'white',\n        },\n    },\n\n  }));\n\nexport default function  ClientReview(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const handleOnClick = (event) => {\n        event.preventDefault();\n        history.goBack()\n    }\n    //code to implement assign job in posting page\n    const [jobsId, setjobsId] = React.useState('');\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const handleChange = (event) => {\n        setjobsId(event.target.value);\n    };\n    var data={}\n    const handleOnSubmit = (event) =>{\n        data.contractorId= jobsId\n        data.id= props.id\n        api.assignUnassignedJobs(data).then(res => {\n            swal({\n                title: \"Assigned!\",\n                text: \"Job has been assigned, please wait for contractor to accept!\",\n                icon: \"success\",\n                button: \"OK\",\n              });\n        }).catch(err => console.log(err))\n    }\n    const [unassignedJob, setUnassignedJob] = useState({downloadurl:[],serviceTypeList:[],languageList:[]});\n    var contractorID= {};\n    contractorID[\"id\"] = props.id;\n\n    const getUnassignedJob = () => {\n        api.unassignedJob(contractorID).then(res => {\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setUnassignedJob(res.data); \n            setLoading(false);\n        }).catch(err => {console.log(err); setLoading(false); setOpen(true)})\n    }\n\n    useEffect(() => {\n        getUnassignedJob();\n      },[]);\n\n    const ts = moment(unassignedJob.datePosted);\n    let timeVal;\n    if (moment().diff(ts, 'minutes')<60){\n        timeVal = String(moment().diff(ts, 'minutes')) + 'm' \n    }else if(moment().diff(ts, 'hours')<24){\n        timeVal = String(moment().diff(ts, 'hours')) + 'h' \n    }else if(moment().diff(ts, 'days')<24){\n        timeVal = String(moment().diff(ts, 'days')) + 'd' \n    }else{\n        timeVal = String(moment().diff(ts, 'weeks')) + 'w' \n    }\n    //getting the recently contacted contractors list\n    const [contractorList, setContractorList] = useState({});\n    const getContractorList = () => {\n        api.getChats().then(res => {\n            console.log(\"Chats loaded successfully\");\n            console.log(res);\n            setContractorList(res.data);\n          }).catch(err => console.log(err))\n    }\n    useEffect(() => {\n        setLoading(true);\n        getContractorList();\n    },[]);\n    const rendercontractorList = () => {\n        let i = 0;\n        let contractorListCount = contractorList.length;\n        let tempJobs = [];\n        while (i < contractorListCount) {\n            let contractor = contractorList[i]\n            let name = contractor.firstName + ' ' + contractor.lastName\n            let contractorId = contractor.id\n            tempJobs.push(\n                <MenuItem value={contractorId}>{name}</MenuItem>\n            );\n\n            i += 1;\n        }\n        return tempJobs;\n    };\n    //\n    const renderTitle = () => {\n        let jobTitle = unassignedJob.title\n        let name = unassignedJob.clientFirstName\n        let jobDetails = unassignedJob.jobDetails\n        let locationDetail = unassignedJob.locationDetail\n        let imagesList = unassignedJob.downloadurl\n        return(\n            <div>\n                <div className={styles.headerDiv}>\n                    <ArrowBackIcon  style={{height:25, cursor:\"pointer\"}} onClick={handleOnClick}/>\n                    <h1 className={styles.header1}> {jobTitle} </h1>\n                    <SimpleMenu \n                        id={props.id} \n                        jobDetails={jobDetails} \n                        languages={unassignedJob.languageList} \n                        services={unassignedJob.serviceTypeList}\n                        jobTitle={jobTitle}\n                        location={locationDetail}\n                        className={styles.simpleMenu}\n                    />\n                </div>\n                <box className={styles.frame}>\n                    <p className={styles.name}>{name}</p>\n                    <p className={styles.location}><span>&#8226;</span> {locationDetail}</p>\n                </box> \n                <box className={styles.frame}>\n                    <p className={styles.location}>Posted {timeVal} ago</p>\n                </box> \n                <div className={styles.row}>\n                    <ImageViewer imagesList={imagesList}/>\n                </div> \n                <div className={styles.paragraph}>\n                    {/* <form>\n                        <label for=\"SubmitContractorId\">Assign Job to:</label>\n                        <input id= \"SubmitContractorId\" placeholder=\"Enter Contractor ID\" defaultValue={userId.contractorId} onKeyUp={keyPressed} />\n                        <button style={{width:60,height:20}} onClick={handleOnSubmit}>Assign</button>\n                    </form> */}\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"inputLabel\">Select Contractor</InputLabel>\n                        <Select\n                            labelId=\"selectLabel\"\n                            id=\"assignForm\"\n                            value={jobsId}\n                            onChange={handleChange}\n                            >\n                            <MenuItem value=\"\">\n                                <em>None</em>\n                            </MenuItem>\n                            {rendercontractorList()}\n                        </Select>\n                        <FormHelperText>Assign Job to a Contractor</FormHelperText>\n                        <button onClick={handleOnSubmit} className={classes.buttonForm} style={{height:30, width:120}}>Assign</button>\n                    </FormControl>\n                    <hr className={styles.hr1}/>  \n\n                    <h2 className={styles.header2}>About the job</h2>\n                    <p className={styles.about}>{jobDetails}</p>\n                    <hr className={styles.hr2}/>  \n                </div> \n            </div>\n        )};\n    function Tags(props) {\n        if (!props.tagname) return null;\n        return (\n            <box className={styles2.tag}>\n                <p className={styles2.tagfont}>{props.tagname}</p>\n            </box>\n        )\n    };\n    const renderSTags = () => {\n        let i = 0;\n        let services = unassignedJob.serviceTypeList;\n        let tagsCount = services.length;\n        let tempTags = [];\n        while (i < tagsCount) {\n            tempTags.push(<Tags className={styles2.tag} tagname={services[i]} />);\n            i += 1;\n        };\n        return tempTags;\n    };\n    const renderLTags = () => {\n        let i = 0;\n        let lang = unassignedJob.languageList;\n        for(var j = 0 ; j < lang.length ; j++){\n            let temp= lang[j].toLowerCase()\n            lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n        }\n        let tagsCount = lang.length;\n        let tempTags = [];\n        while (i < tagsCount) {\n            tempTags.push(<Tags className={styles2.tag} tagname={lang[i]} />);\n            i += 1;\n        };\n        return tempTags;\n    };\n    if (loading) {\n        return <LoadingView/>;\n        }\n    return (   \n        <div className={styles.posting}>\n            <box className={styles.postingbox}>\n                {renderTitle()}\n                <div className={styles.skillsbox}>\n                    <h1 className={styles.header2}>Required Skills</h1>\n                    <box className={styles2.servicetagbox}>\n                        {renderSTags()}\n                    </box>        \n                    <h1 className={styles.header2}>Required Languages</h1>\n                    <box className={styles2.servicetagbox}>\n                        {renderLTags()}\n                    </box> \n                </div>\n            </box>\n            <NotFound setOpen={setOpen} open={open}/>\n\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}