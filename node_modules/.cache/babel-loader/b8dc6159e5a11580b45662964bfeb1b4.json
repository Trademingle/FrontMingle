{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/HomeOwnerActiveJobsPage/active.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './styles.module.css';\nimport JobPosting from '../ContractorActiveJobsPage/jobposting';\nimport api from '../api/api';\nimport { Grid } from '@material-ui/core';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst Active = () => {\n  _s();\n\n  const [activeJobs, setActiveJobs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getActiveJobs = () => {\n    api.getActiveJobs().then(res => {\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setActiveJobs(res.data); //change [] with .get\n\n      setLoading(false);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getActiveJobs();\n  }, []);\n\n  const renderActiveJobs = () => {\n    let i = 0;\n    let activeJobCount = activeJobs.length;\n\n    if (activeJobCount === 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, \"It seems you don't have any Active Jobs.\"));\n    } else {\n      let tempJobs = [];\n\n      while (i < activeJobCount) {\n        let activeJob = activeJobs[i];\n        let jobTitle = activeJob.title;\n        let jobId = activeJob.id;\n        let contractorName = activeJob.contractorFirstName;\n        let location = activeJob.locationDetail;\n        var serviceTypeList = activeJob.serviceTypeList;\n        let avatar = activeJob.downloadurl[0];\n        let userId = activeJob.contractorId;\n        tempJobs.push( /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(JobPosting, {\n          userId: userId,\n          avatar: avatar,\n          complete: 0,\n          id: jobId,\n          title: jobTitle,\n          name: contractorName,\n          location: location,\n          serviceList: serviceTypeList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }\n        }))); //   // Proceed to the next message.\n\n        i += 1;\n      }\n\n      return tempJobs;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    justify: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, loading ? /*#__PURE__*/React.createElement(LoadingView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 22\n    }\n  }) : renderActiveJobs()));\n};\n\n_s(Active, \"PRPwVotMBrSVd/sF9s7PR+tuPc4=\");\n\n_c = Active;\nexport default Active;\nexport { Active };\n\nvar _c;\n\n$RefreshReg$(_c, \"Active\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/HomeOwnerActiveJobsPage/active.js"],"names":["React","useEffect","useState","styles","JobPosting","api","Grid","LoadingView","Active","activeJobs","setActiveJobs","loading","setLoading","getActiveJobs","then","res","console","log","data","catch","err","renderActiveJobs","i","activeJobCount","length","tempJobs","activeJob","jobTitle","title","jobId","id","contractorName","contractorFirstName","location","locationDetail","serviceTypeList","avatar","downloadurl","userId","contractorId","push","gridContainer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState} from 'react';\nimport styles from './styles.module.css';  \nimport JobPosting from '../ContractorActiveJobsPage/jobposting';\nimport api from '../api/api';\nimport { Grid } from '@material-ui/core';\nimport LoadingView from '../ResuableComponents/loadingView';\n\n\nconst Active = () => {\n    const [activeJobs, setActiveJobs] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    const getActiveJobs = () => {\n        api.getActiveJobs().then(res => {\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setActiveJobs(res.data); //change [] with .get\n            setLoading(false);\n        }).catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n      setLoading(true);\n        getActiveJobs();\n      },[]);\n    const renderActiveJobs = () => {\n        let i = 0;\n        let activeJobCount = activeJobs.length;\n        if (activeJobCount===0){\n          return(\n            <div>\n              <p>It seems you don't have any Active Jobs.</p>\n            </div>\n          )\n        }\n        else{\n        let tempJobs = [];\n        while (i < activeJobCount) {\n          let activeJob = activeJobs[i]\n          let jobTitle = activeJob.title\n          let jobId = activeJob.id\n          let contractorName = activeJob.contractorFirstName\n          let location = activeJob.locationDetail\n          var serviceTypeList = activeJob.serviceTypeList;\n          let avatar = activeJob.downloadurl[0]\n          let userId = activeJob.contractorId\n          tempJobs.push(\n            <Grid item>\n              <JobPosting userId={userId} avatar={avatar} complete= {0} id={jobId} title={jobTitle} name={contractorName} location={location} serviceList={serviceTypeList}/>\n            </Grid>\n          );\n    \n        //   // Proceed to the next message.\n          i += 1;\n        }\n        return tempJobs;}\n      };\n    return(\n      <div className={styles.gridContainer}>\n        <Grid container spacing={2} justify=\"left\">\n            {loading?<LoadingView/>:renderActiveJobs()}\n        </Grid>\n      </div>\n    )\n\n};\n\n\nexport default Active;\nexport {Active};\n"]},"metadata":{},"sourceType":"module"}