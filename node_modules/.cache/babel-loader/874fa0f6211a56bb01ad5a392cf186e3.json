{"ast":null,"code":"import _slicedToArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import styles from'../ProfileViewClient/profile.module.css';import api from'../api/api';import ProfileFormat from'./profile.js';import LoadingView from'../ResuableComponents/loadingView';var ClientProfile=function ClientProfile(props){function onChange(){getProfiles();}var _useState=useState({languageList:[]}),_useState2=_slicedToArray(_useState,2),profiles=_useState2[0],setProfiles=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var profileID={};profileID['id']=localStorage.getItem('user_id');var getProfiles=function getProfiles(){api.getProfiles(profileID).then(function(res){console.log(\"Profile loaded successfully\");console.log(res);setProfiles(res.data);setLoading(false);}).catch(function(err){console.log(err);setLoading(false);});};useEffect(function(){setLoading(true);getProfiles();window.scrollTo(0,0);},[]);var renderProfiles=function renderProfiles(){var firstName=profiles.firstName;var lastName=profiles.lastName;var rating=profiles.averageRating;var jobsDone=profiles.jobsCompleted;var services=profiles.serviceList;var languages=profiles.languageList;return/*#__PURE__*/React.createElement(ProfileFormat,{onChange:onChange,avatar:profiles.downloadurl,name:firstName+\" \"+lastName,firstName:firstName,lastName:lastName,rating:rating,jobsdone:jobsDone,insuranceNumber:profiles.insuranceNumber,isInsuranceNumberVerified:profiles.isInsuranceNumberVerified,isWorkerNumberVerified:profiles.isWorkerNumberVerified,workerNumber:profiles.workerNumber,services:services,languages:languages});};var languages=profiles.languageList.join(', ');if(loading){return/*#__PURE__*/React.createElement(LoadingView,null);}return/*#__PURE__*/React.createElement(\"div\",{className:styles.profileMainBox},/*#__PURE__*/React.createElement(\"div\",{className:styles.profilebox},renderProfiles()),/*#__PURE__*/React.createElement(\"hr\",{className:styles.hr1}),/*#__PURE__*/React.createElement(\"div\",{className:styles.SecondBox},/*#__PURE__*/React.createElement(\"div\",{className:styles.languagebox},/*#__PURE__*/React.createElement(\"h1\",{className:styles.planguages},\"Preferred languages: \\xA0\"),/*#__PURE__*/React.createElement(\"p\",{className:styles.languages},languages)),/*#__PURE__*/React.createElement(\"div\",{className:styles.languagebox},/*#__PURE__*/React.createElement(\"h1\",{className:styles.planguages},\"Phone Number: \\xA0\"),/*#__PURE__*/React.createElement(\"p\",{className:styles.languages},\"9876543210\"))),/*#__PURE__*/React.createElement(\"hr\",{className:styles.hr2}));};export default ClientProfile;","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/MyProfileClient/index.js"],"names":["React","useEffect","useState","styles","api","ProfileFormat","LoadingView","ClientProfile","props","onChange","getProfiles","languageList","profiles","setProfiles","loading","setLoading","profileID","localStorage","getItem","then","res","console","log","data","catch","err","window","scrollTo","renderProfiles","firstName","lastName","rating","averageRating","jobsDone","jobsCompleted","services","serviceList","languages","downloadurl","insuranceNumber","isInsuranceNumberVerified","isWorkerNumberVerified","workerNumber","join","profileMainBox","profilebox","hr1","SecondBox","languagebox","planguages","hr2"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from '../ProfileViewClient/profile.module.css';\nimport api from '../api/api';\nimport ProfileFormat from './profile.js';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst ClientProfile = (props) => {\n    function onChange(){\n        getProfiles()\n    }\n    const [profiles, setProfiles] = useState({languageList:[]});\n    const [loading, setLoading] = useState(false);\n    var profileID = {};\n    profileID['id'] = localStorage.getItem('user_id');\n    const getProfiles = () => {\n        api.getProfiles(profileID).then(res => {\n            console.log(\"Profile loaded successfully\");\n            console.log(res);\n            setProfiles(res.data);\n            setLoading(false);\n        }).catch(err => {console.log(err);setLoading(false);})\n    }\n    useEffect(() => {\n        setLoading(true);\n        getProfiles();\n        window.scrollTo(0, 0);\n      },[]);\n\n    const renderProfiles = () => {\n        let firstName = profiles.firstName\n        let lastName = profiles.lastName\n        let rating = profiles.averageRating;\n        let jobsDone = profiles.jobsCompleted;\n        let services = profiles.serviceList;\n        let languages = profiles.languageList\n        return(\n            <ProfileFormat \n                onChange={onChange} \n                avatar={profiles.downloadurl} \n                name={firstName +\" \"+ lastName}\n                firstName={firstName}\n                lastName={lastName}\n                rating={rating} \n                jobsdone={jobsDone}\n                insuranceNumber={profiles.insuranceNumber}\n                isInsuranceNumberVerified={profiles.isInsuranceNumberVerified}\n                isWorkerNumberVerified={profiles.isWorkerNumberVerified}\n                workerNumber={profiles.workerNumber}\n                services={services}\n                languages={languages}\n            />\n          );\n        };   \n    let languages = profiles.languageList.join(', ')\n    if (loading) {\n        return <LoadingView/>;\n        }\n    return(\n        <div className={styles.profileMainBox}>\n            <div className={styles.profilebox}>\n                {renderProfiles()}\n            </div>  \n            <hr className={styles.hr1}/>   \n            <div className={styles.SecondBox}>\n                <div className={styles.languagebox}>\n                    <h1 className={styles.planguages}>Preferred languages: &nbsp;</h1>\n                    <p className={styles.languages}>{languages}</p>\n                </div>\n                <div className={styles.languagebox}>\n                    <h1 className={styles.planguages}>Phone Number: &nbsp;</h1>\n                    <p className={styles.languages}>9876543210</p>\n                </div>\n            </div> \n            <hr className={styles.hr2}/>\n        </div> \n    )};\n\nexport default ClientProfile;\n\n"]},"metadata":{},"sourceType":"module"}