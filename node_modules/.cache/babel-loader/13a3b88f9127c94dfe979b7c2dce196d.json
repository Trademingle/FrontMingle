{"ast":null,"code":"import _slicedToArray from\"/Users/nandupokhrel/Desktop/BookTrades/trademingle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import styles from'./review.module.css';import CustomizedHook from\"./searchHooks\";import GoogleMaps from'../LocationTextField';// const keyPressed = (event) => {\n//   debugger\n//   if (event.key == 'Enter'){\n//     event.target.value='';\n// }}\nvar AddListingOne=function AddListingOne(props){var keyPressed=function keyPressed(event){// debugger\nif(event.target.id==='job_title'&&event.target.value!==props.data.title){props.data.title=event.target.value;}else if(event.target.id==='job_location'){props.data.locationDetail=event.target.value;}else if(event.target.id==='job_description'){props.data.jobDetails=event.target.value;}};var _useState=useState({}),_useState2=_slicedToArray(_useState,2),information=_useState2[0],setInformation=_useState2[1];props.data.locationDetail=information.address;props.data.jobLatitude=information.lat;props.data.jobLongitude=information.long;return/*#__PURE__*/React.createElement(\"box\",{className:styles.biggestbox},/*#__PURE__*/React.createElement(\"box\",{className:styles.ratingbox2},/*#__PURE__*/React.createElement(\"div\",{className:styles.titlebigbox},/*#__PURE__*/React.createElement(\"box\",{className:styles.titlebox},/*#__PURE__*/React.createElement(\"h2\",{className:styles.h2},\"Job title\"),/*#__PURE__*/React.createElement(\"p\",{className:styles.description},\"Give your listing a descriptive name.\"),/*#__PURE__*/React.createElement(\"input\",{id:\"job_title\",className:styles.titletextbox,placeholder:\"E.g. Fence painting\",defaultValue:props.data.title,onKeyUp:keyPressed})),/*#__PURE__*/React.createElement(\"box\",{className:styles.locationbox},/*#__PURE__*/React.createElement(\"h2\",{className:styles.h2},\"Job location\"),/*#__PURE__*/React.createElement(\"p\",{className:styles.description},\"As you type, addresses will appear. You can also select from your saved addresses.\"),/*#__PURE__*/React.createElement(\"div\",{className:styles.locationtextbox},/*#__PURE__*/React.createElement(GoogleMaps,{id:\"job_location\",information:information,setLocation:setInformation})))),/*#__PURE__*/React.createElement(\"box\",{className:styles.skillsBox},/*#__PURE__*/React.createElement(\"h2\",{className:styles.h2},\"Skills \"),/*#__PURE__*/React.createElement(\"p\",{className:styles.description},\"Add the skills related to the job.\"),/*#__PURE__*/React.createElement(CustomizedHook,{information:props.data,type:\"serviceTypeList\",width:\"99%\"})),/*#__PURE__*/React.createElement(\"box\",{className:styles.descBox},/*#__PURE__*/React.createElement(\"h2\",{className:styles.h2},\"Description\"),/*#__PURE__*/React.createElement(\"p\",{className:styles.description},\"Include any details you think are important for contractors to know about your job.\"),/*#__PURE__*/React.createElement(\"textarea\",{id:\"job_description\",className:styles.textbox,defaultValue:props.data.jobDetails,onKeyUp:keyPressed}))));};function get_input_data(){var job_title_=document.getElementById(\"job_title\").value;return job_title_;}export default AddListingOne;export{get_input_data};","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/AddListing/AddListingOne.js"],"names":["React","useState","styles","CustomizedHook","GoogleMaps","AddListingOne","props","keyPressed","event","target","id","value","data","title","locationDetail","jobDetails","information","setInformation","address","jobLatitude","lat","jobLongitude","long","biggestbox","ratingbox2","titlebigbox","titlebox","h2","description","titletextbox","locationbox","locationtextbox","skillsBox","descBox","textbox","get_input_data","job_title_","document","getElementById"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport styles from './review.module.css'\nimport CustomizedHook from \"./searchHooks\";\nimport GoogleMaps from '../LocationTextField';\n\n// const keyPressed = (event) => {\n//   debugger\n//   if (event.key == 'Enter'){\n//     event.target.value='';\n// }}\n\nconst AddListingOne = (props) => {\n  const keyPressed = (event) => {\n    // debugger\n    if (event.target.id === 'job_title' && event.target.value !== props.data.title){\n      props.data.title = event.target.value;\n    }\n    else if (event.target.id === 'job_location'){\n      props.data.locationDetail = event.target.value;\n    }\n    else if (event.target.id === 'job_description'){\n      props.data.jobDetails = event.target.value;\n    }\n  }\n  let [information, setInformation] = useState({})\n  props.data.locationDetail = information.address;\n  props.data.jobLatitude = information.lat;\n  props.data.jobLongitude = information.long;\n  return (\n    <box className={styles.biggestbox}>\n      <box className={styles.ratingbox2}>\n        <div className={styles.titlebigbox}>\n          <box className={styles.titlebox}>\n            <h2 className={styles.h2}>Job title</h2>\n            <p className={styles.description}>Give your listing a descriptive name.</p>\n            <input id= \"job_title\" className={styles.titletextbox} placeholder=\"E.g. Fence painting\" defaultValue={props.data.title} onKeyUp={keyPressed}/>\n          </box>\n          <box className={styles.locationbox}>\n            <h2 className={styles.h2}>Job location</h2>\n            <p className={styles.description}>As you type, addresses will appear. You can also select from your saved addresses.</p>\n            {/* <input id=\"job_location\" className={styles.locationtextbox} placeholder=\"E.g. 123 Leslie Street\" defaultValue={props.data.locationDetail} onKeyUp={keyPressed}/> */}\n            <div className={styles.locationtextbox}><GoogleMaps id='job_location' information={information} setLocation={setInformation}/></div>\n          </box>\n        </div>\n        <box className={styles.skillsBox}>\n            <h2 className={styles.h2}>Skills </h2>\n            <p className={styles.description}>Add the skills related to the job.</p>\n            {/* <input type=\"list\" id=\"skills\" className={styles.skillstextbox} /> */}\n            <CustomizedHook information={props.data} type='serviceTypeList' width=\"99%\"/> \n        </box>\n        <box className={styles.descBox}>\n          <h2 className={styles.h2}>Description</h2>\n          <p className={styles.description}>Include any details you think are important for contractors to know about your job.</p>\n          <textarea id=\"job_description\" className={styles.textbox} defaultValue={props.data.jobDetails} onKeyUp={keyPressed}/>\n        </box>\n      </box>\n    </box>\n  )\n};\n\nfunction get_input_data() {\n  var job_title_ = document.getElementById(\"job_title\").value;\n  return(job_title_);\n}\n\nexport default AddListingOne;\nexport {get_input_data};"]},"metadata":{},"sourceType":"module"}