{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/MyProfile/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from './profile.module.css';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport { Grid } from '@material-ui/core';\nimport ReviewCard from '../ProfileView/reviews';\nimport api from '../api/api';\nimport Profile from './profile.js';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst Cprofile = props => {\n  _s();\n\n  function onChange() {\n    getProfiles();\n  }\n\n  var profileId = {};\n  profileId['id'] = localStorage.getItem('user_id');\n  const [profiles, setProfiles] = useState({\n    serviceTypeList: [],\n    languageList: []\n  });\n  const [loading, setLoading] = useState(false);\n\n  const getProfiles = () => {\n    api.getProfiles(profileId).then(res => {\n      console.log(\"Profile loaded successfully\");\n      console.log(res);\n      setProfiles(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getProfiles();\n  }, []);\n\n  const renderTags = () => {\n    if (localStorage.getItem(\"usertype\") === \"Client\") {\n      return null;\n    } else {\n      let i = 0;\n      let services = profiles.serviceTypeList;\n      let tagsCount = services.length;\n      let tempTags = [];\n\n      while (i < tagsCount) {\n        tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n          className: styles2.tag,\n          tagname: services[i],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 31\n          }\n        }));\n        i += 1;\n      }\n\n      ;\n      return tempTags;\n    }\n  };\n\n  const renderSkills = () => {\n    if (localStorage.getItem(\"usertype\") === \"Client\") {\n      return null;\n    } else {\n      return \"Skills\";\n    }\n  };\n\n  const renderProfiles = () => {\n    let firstName = profiles.firstName;\n    let lastName = profiles.lastName;\n    let rating = profiles.averageRating;\n    let jobsDone = profiles.jobsCompleted;\n    let services = profiles.serviceTypeList;\n    let languages = profiles.languageList;\n    return /*#__PURE__*/React.createElement(Profile, {\n      onChange: onChange,\n      avatar: profiles.downloadurl,\n      firstName: firstName,\n      lastName: lastName,\n      rating: rating,\n      jobsdone: jobsDone,\n      insuranceNumber: profiles.insuranceNumber,\n      isInsuranceNumberVerified: profiles.isInsuranceNumberVerified,\n      isWorkerNumberVerified: profiles.isWorkerNumberVerified,\n      workerNumber: profiles.workerNumber,\n      services: services,\n      languages: languages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    });\n  };\n\n  let languages = profiles.languageList.join(', '); //Contractor reviews endpoit connect below\n\n  const [contractorReview, setContractorReview] = useState([]);\n\n  const getContractorReview = () => {\n    api.getContractorReview(profileId).then(res => {\n      console.log(\"Review loaded successfully\");\n      console.log(res);\n      setContractorReview(res.data);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    getContractorReview();\n  }, []);\n\n  const renderReviews = () => {\n    let i = 0;\n    let reviewsCount = contractorReview.length;\n    let tempJobs = [];\n\n    while (i < reviewsCount) {\n      let review = contractorReview[i];\n      let title = review.clientFirstName + \" \" + review.clientLastName;\n      let reviewDate = review.reviewDate;\n      let reviewBody = review.reviewContent;\n      let reviewTitle = review.reviewTitle;\n      let reviewRating = review.reviewRating;\n      tempJobs.push( /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ReviewCard, {\n        reviewRating: reviewRating,\n        clientId: review.clientId,\n        greviewTitle: reviewTitle,\n        title: title,\n        subheader: reviewDate,\n        body: reviewBody,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      })));\n      i += 1;\n    }\n\n    return tempJobs;\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.biggyBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.secondBigBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.profilebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, renderProfiles()), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.mustHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, profiles.isInsuranceNumberVerified === true && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.liability,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n    className: styles.Vector,\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  }), \"Liability insurance no: \", profiles.insuranceNumber) : profiles.isInsuranceNumberVerified === false && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.liability,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 22\n    }\n  }, \"Liability insurance no: \", profiles.insuranceNumber) : null, profiles.isWorkerNumberVerified === true && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.workercompensation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(VerifiedUserIcon, {\n    className: styles.Vector,\n    style: {\n      height: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }), \"Worker compensation insurance no: \", profiles.workerNumber) : profiles.isWorkerNumberVerified === false && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.workercompensation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 22\n    }\n  }, \"Worker compensation insurance no: \", profiles.workerNumber) : null)), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.SecondBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.skillsbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.skills,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, renderSkills()), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, renderTags())), profiles.isInsuranceNumberVerified === true && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.languagebox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.planguages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, \"Preferred languages\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, languages)) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.planguages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"Preferred languages\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.languages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, languages))), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ThirdBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.skills,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }, \"About\"), /*#__PURE__*/React.createElement(\"video\", {\n    src: profiles.profile_video,\n    controls: true,\n    height: \"400px\",\n    width: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  })) : null, localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ThirdBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.skills,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, \"Reviews\"), contractorReview.length > 0 ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    className: styles.gridContainer,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, renderReviews()) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, \"It seems like you don't have any reviews\")) : null);\n};\n\n_s(Cprofile, \"+o28VXbSdUvYej5rWeTOwbBefD0=\");\n\n_c = Cprofile;\n\nfunction Tags(props) {\n  if (!props.tagname) return null;\n  return /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: styles2.tagfont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, props.tagname));\n}\n\n_c2 = Tags;\n;\nexport default Cprofile;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Cprofile\");\n$RefreshReg$(_c2, \"Tags\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/MyProfile/index.js"],"names":["React","useEffect","useState","styles","VerifiedUserIcon","styles2","Grid","ReviewCard","api","Profile","LoadingView","Cprofile","props","onChange","getProfiles","profileId","localStorage","getItem","profiles","setProfiles","serviceTypeList","languageList","loading","setLoading","then","res","console","log","data","catch","err","renderTags","i","services","tagsCount","length","tempTags","push","tag","renderSkills","renderProfiles","firstName","lastName","rating","averageRating","jobsDone","jobsCompleted","languages","downloadurl","insuranceNumber","isInsuranceNumberVerified","isWorkerNumberVerified","workerNumber","join","contractorReview","setContractorReview","getContractorReview","renderReviews","reviewsCount","tempJobs","review","title","clientFirstName","clientLastName","reviewDate","reviewBody","reviewContent","reviewTitle","reviewRating","clientId","biggyBox","secondBigBox","profilebox","mustHide","liability","Vector","height","workercompensation","hr1","SecondBox","skillsbox","skills","servicetagbox","languagebox","planguages","ThirdBox","profile_video","hr2","gridContainer","Tags","tagname","tagfont"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,WAASC,QAAT,GAAmB;AACfC,IAAAA,WAAW;AACd;;AACD,MAAIC,SAAS,GAAG,EAAhB;AACAA,EAAAA,SAAS,CAAC,IAAD,CAAT,GAAkBC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAlB;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC;AAACkB,IAAAA,eAAe,EAAC,EAAjB;AAAoBC,IAAAA,YAAY,EAAC;AAAjC,GAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrB,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMY,WAAW,GAAG,MAAM;AACtBN,IAAAA,GAAG,CAACM,WAAJ,CAAgBC,SAAhB,EAA2BS,IAA3B,CAAgCC,GAAG,IAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,MAAAA,WAAW,CAACM,GAAG,CAACG,IAAL,CAAX;AACAL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KALD,EAKGM,KALH,CAKSC,GAAG,IAAI;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAAiBP,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB,KALrD;AAMH,GAPD;;AASAtB,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAT,IAAAA,WAAW;AACZ,GAHM,EAGL,EAHK,CAAT;;AAIA,QAAMiB,UAAU,GAAG,MAAM;AACrB,QAAGf,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,QAAxC,EAAiD;AAC7C,aAAO,IAAP;AAAa,KADjB,MAEI;AACA,UAAIe,CAAC,GAAG,CAAR;AACA,UAAIC,QAAQ,GAAGf,QAAQ,CAACE,eAAxB;AACA,UAAIc,SAAS,GAAGD,QAAQ,CAACE,MAAzB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AACA,aAAOJ,CAAC,GAAGE,SAAX,EAAsB;AAClBE,QAAAA,QAAQ,CAACC,IAAT,eAAc,oBAAC,IAAD;AAAM,UAAA,SAAS,EAAEhC,OAAO,CAACiC,GAAzB;AAA8B,UAAA,OAAO,EAAEL,QAAQ,CAACD,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AACAA,QAAAA,CAAC,IAAI,CAAL;AACH;;AAAA;AACD,aAAOI,QAAP;AAAiB;AACpB,GAbL;;AAcA,QAAMG,YAAY,GAAG,MAAM;AACvB,QAAGvB,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,QAAxC,EAAiD;AAC7C,aAAO,IAAP;AAAa,KADjB,MAEI;AACA,aAAQ,QAAR;AAAkB;AACrB,GALL;;AAMA,QAAMuB,cAAc,GAAG,MAAM;AACvB,QAAIC,SAAS,GAAGvB,QAAQ,CAACuB,SAAzB;AACA,QAAIC,QAAQ,GAAGxB,QAAQ,CAACwB,QAAxB;AACA,QAAIC,MAAM,GAAGzB,QAAQ,CAAC0B,aAAtB;AACA,QAAIC,QAAQ,GAAG3B,QAAQ,CAAC4B,aAAxB;AACA,QAAIb,QAAQ,GAAGf,QAAQ,CAACE,eAAxB;AACA,QAAI2B,SAAS,GAAG7B,QAAQ,CAACG,YAAzB;AACF,wBACI,oBAAC,OAAD;AACI,MAAA,QAAQ,EAAER,QADd;AAEI,MAAA,MAAM,EAAEK,QAAQ,CAAC8B,WAFrB;AAGI,MAAA,SAAS,EAAEP,SAHf;AAII,MAAA,QAAQ,EAAEC,QAJd;AAKI,MAAA,MAAM,EAAEC,MALZ;AAMI,MAAA,QAAQ,EAAEE,QANd;AAOI,MAAA,eAAe,EAAE3B,QAAQ,CAAC+B,eAP9B;AAQI,MAAA,yBAAyB,EAAE/B,QAAQ,CAACgC,yBARxC;AASI,MAAA,sBAAsB,EAAEhC,QAAQ,CAACiC,sBATrC;AAUI,MAAA,YAAY,EAAEjC,QAAQ,CAACkC,YAV3B;AAWI,MAAA,QAAQ,EAAEnB,QAXd;AAYI,MAAA,SAAS,EAAEc,SAZf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAgBC,GAvBL;;AAwBA,MAAIA,SAAS,GAAG7B,QAAQ,CAACG,YAAT,CAAsBgC,IAAtB,CAA2B,IAA3B,CAAhB,CAjEwB,CAkExB;;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CrD,QAAQ,CAAC,EAAD,CAAxD;;AACA,QAAMsD,mBAAmB,GAAG,MAAM;AAC9BhD,IAAAA,GAAG,CAACgD,mBAAJ,CAAwBzC,SAAxB,EAAmCS,IAAnC,CAAwCC,GAAG,IAAI;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA8B,MAAAA,mBAAmB,CAAC9B,GAAG,CAACG,IAAL,CAAnB;AACH,KAJD,EAIGC,KAJH,CAISC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAJhB;AAKH,GAND;;AAQA7B,EAAAA,SAAS,CAAC,MAAM;AACZuD,IAAAA,mBAAmB;AACpB,GAFM,EAEL,EAFK,CAAT;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC5B,QAAIzB,CAAC,GAAG,CAAR;AACA,QAAI0B,YAAY,GAAGJ,gBAAgB,CAACnB,MAApC;AACA,QAAIwB,QAAQ,GAAG,EAAf;;AACA,WAAO3B,CAAC,GAAG0B,YAAX,EAAyB;AACrB,UAAIE,MAAM,GAAGN,gBAAgB,CAACtB,CAAD,CAA7B;AACA,UAAI6B,KAAK,GAAGD,MAAM,CAACE,eAAP,GAAyB,GAAzB,GAA+BF,MAAM,CAACG,cAAlD;AACA,UAAIC,UAAU,GAAGJ,MAAM,CAACI,UAAxB;AACA,UAAIC,UAAU,GAAGL,MAAM,CAACM,aAAxB;AACA,UAAIC,WAAW,GAAGP,MAAM,CAACO,WAAzB;AACA,UAAIC,YAAY,GAAGR,MAAM,CAACQ,YAA1B;AAEAT,MAAAA,QAAQ,CAACtB,IAAT,eACA,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAA0B,QAAA,EAAE,EAAE,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAY,QAAA,YAAY,EAAE+B,YAA1B;AAAwC,QAAA,QAAQ,EAAER,MAAM,CAACS,QAAzD;AAAmE,QAAA,YAAY,EAAEF,WAAjF;AAA8F,QAAA,KAAK,EAAEN,KAArG;AAA4G,QAAA,SAAS,EAAEG,UAAvH;AAAmI,QAAA,IAAI,EAAEC,UAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADA;AAKAjC,MAAAA,CAAC,IAAI,CAAL;AACH;;AACD,WAAO2B,QAAP;AACC,GApBD;;AAqBA,MAAIrC,OAAJ,EAAa;AACT,wBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AACL,sBACI;AAAK,IAAA,SAAS,EAAEnB,MAAM,CAACmE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEnE,MAAM,CAACoE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEpE,MAAM,CAACqE,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKhC,cAAc,EADnB,CADJ,eAII;AAAK,IAAA,SAAS,EAAErC,MAAM,CAACsE,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvD,QAAQ,CAACgC,yBAAT,KAAuC,IAAvC,IAA+ClC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAApF,gBACA;AAAG,IAAA,SAAS,EAAEd,MAAM,CAACuE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEvE,MAAM,CAACwE,MAApC;AAA4C,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,8BAC6F1D,QAAQ,CAAC+B,eADtG,CADA,GAIA/B,QAAQ,CAACgC,yBAAT,KAAuC,KAAvC,IAAgDlC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAArF,gBACA;AAAG,IAAA,SAAS,EAAEd,MAAM,CAACuE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAC4BxD,QAAQ,CAAC+B,eADrC,CADA,GAIA,IATL,EAWK/B,QAAQ,CAACiC,sBAAT,KAAoC,IAApC,IAA4CnC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAAjF,gBACA;AAAG,IAAA,SAAS,EAAEd,MAAM,CAAC0E,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,gBAAD;AAAkB,IAAA,SAAS,EAAE1E,MAAM,CAACwE,MAApC;AAA4C,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,wCACuG1D,QAAQ,CAACkC,YADhH,CADA,GAIAlC,QAAQ,CAACiC,sBAAT,KAAoC,KAApC,IAA6CnC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAAlF,gBACA;AAAG,IAAA,SAAS,EAAEd,MAAM,CAAC0E,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACsC3D,QAAQ,CAACkC,YAD/C,CADA,GAIA,IAnBL,CAJJ,CADJ,eA4BI;AAAI,IAAA,SAAS,EAAEjD,MAAM,CAAC2E,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BJ,eA6BI;AAAK,IAAA,SAAS,EAAE3E,MAAM,CAAC4E,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE5E,MAAM,CAAC6E,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAE7E,MAAM,CAAC8E,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B1C,YAAY,EAA3C,CADJ,eAEI;AAAK,IAAA,SAAS,EAAElC,OAAO,CAAC6E,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKnD,UAAU,EADf,CAFJ,CADJ,EAOKb,QAAQ,CAACgC,yBAAT,KAAuC,IAAvC,IAA+ClC,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAApF,gBACA;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACgF,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAEhF,MAAM,CAACiF,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADH,eAEG;AAAG,IAAA,SAAS,EAAEjF,MAAM,CAAC4C,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,SAAjC,CAFH,CADA,gBAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAE5C,MAAM,CAACiF,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADH,eAEG;AAAG,IAAA,SAAS,EAAEjF,MAAM,CAAC4C,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCA,SAAjC,CAFH,CAZL,CA7BJ,eAgDI;AAAI,IAAA,SAAS,EAAE5C,MAAM,CAAC2E,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhDJ,EAiDK9D,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAArC,gBACA;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACkF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAElF,MAAM,CAAC8E,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADH,eAEG;AAAO,IAAA,GAAG,EAAE/D,QAAQ,CAACoE,aAArB;AAAoC,IAAA,QAAQ,MAA5C;AAA6C,IAAA,MAAM,EAAC,OAApD;AAA4D,IAAA,KAAK,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAGG;AAAI,IAAA,SAAS,EAAEnF,MAAM,CAACoF,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHH,CADA,GAKM,IAtDX,EAuDKvE,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAArC,gBACA;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACkF,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG;AAAI,IAAA,SAAS,EAAElF,MAAM,CAAC8E,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADH,EAII3B,gBAAgB,CAACnB,MAAjB,GAAwB,CAAxB,gBACD,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAEhC,MAAM,CAACqF,aAA9C;AAA6D,IAAA,OAAO,EAAC,QAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK/B,aAAa,EADlB,CADC,gBAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDARL,CADA,GAUM,IAjEX,CADJ;AAqEH,CA7KD;;GAAM9C,Q;;KAAAA,Q;;AAgLN,SAAS8E,IAAT,CAAc7E,KAAd,EAAqB;AACjB,MAAI,CAACA,KAAK,CAAC8E,OAAX,EAAoB,OAAO,IAAP;AACpB,sBACI;AAAK,IAAA,SAAS,EAAErF,OAAO,CAACiC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAG,IAAA,SAAS,EAAEjC,OAAO,CAACsF,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC/E,KAAK,CAAC8E,OAAtC,CADJ,CADJ;AAKH;;MAPQD,I;AAOR;AAGD,eAAe9E,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './profile.module.css'; \nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport { Grid } from '@material-ui/core';\nimport ReviewCard from '../ProfileView/reviews';\nimport api from '../api/api';\nimport Profile from './profile.js';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nconst Cprofile = (props) => {\n    function onChange(){\n        getProfiles()\n    }\n    var profileId = {};\n    profileId['id'] = localStorage.getItem('user_id');\n    const [profiles, setProfiles] = useState({serviceTypeList:[],languageList:[]});\n    const [loading, setLoading] = useState(false);\n    const getProfiles = () => {\n        api.getProfiles(profileId).then(res => {\n            console.log(\"Profile loaded successfully\");\n            console.log(res);\n            setProfiles(res.data);\n            setLoading(false);\n        }).catch(err => {console.log(err);setLoading(false);})\n    }\n\n    useEffect(() => {\n        setLoading(true);\n        getProfiles();\n      },[]);\n    const renderTags = () => {\n        if(localStorage.getItem(\"usertype\") === \"Client\"){\n            return(null)}\n        else{\n            let i = 0;\n            let services = profiles.serviceTypeList;\n            let tagsCount = services.length;\n            let tempTags = [];\n            while (i < tagsCount) {\n                tempTags.push(<Tags className={styles2.tag} tagname={services[i]} />);\n                i += 1;\n            };\n            return tempTags;}\n        };\n    const renderSkills = () => {\n        if(localStorage.getItem(\"usertype\") === \"Client\"){\n            return(null)}\n        else{\n            return (\"Skills\")}\n        };\n    const renderProfiles = () => {\n          let firstName = profiles.firstName\n          let lastName = profiles.lastName\n          let rating = profiles.averageRating;\n          let jobsDone = profiles.jobsCompleted;\n          let services = profiles.serviceTypeList;\n          let languages = profiles.languageList\n        return(\n            <Profile \n                onChange={onChange} \n                avatar={profiles.downloadurl} \n                firstName={firstName} \n                lastName={lastName} \n                rating={rating} \n                jobsdone={jobsDone}\n                insuranceNumber={profiles.insuranceNumber}\n                isInsuranceNumberVerified={profiles.isInsuranceNumberVerified}\n                isWorkerNumberVerified={profiles.isWorkerNumberVerified}\n                workerNumber={profiles.workerNumber}\n                services={services}\n                languages={languages}\n            />\n          );\n        };   \n    let languages = profiles.languageList.join(', ')\n    //Contractor reviews endpoit connect below\n    const [contractorReview, setContractorReview] = useState([]);\n    const getContractorReview = () => {\n        api.getContractorReview(profileId).then(res => {\n            console.log(\"Review loaded successfully\");\n            console.log(res);\n            setContractorReview(res.data);\n        }).catch(err => console.log(err))\n    }\n\n    useEffect(() => {\n        getContractorReview();\n      },[]);\n\n    const renderReviews = () => {\n    let i = 0;\n    let reviewsCount = contractorReview.length;\n    let tempJobs = [];\n    while (i < reviewsCount) {\n        let review = contractorReview[i]\n        let title = review.clientFirstName + \" \" + review.clientLastName\n        let reviewDate = review.reviewDate\n        let reviewBody = review.reviewContent\n        let reviewTitle = review.reviewTitle\n        let reviewRating = review.reviewRating\n\n        tempJobs.push(\n        <Grid item xs={12} sm={6} md={4} >\n            <ReviewCard reviewRating={reviewRating} clientId={review.clientId} greviewTitle={reviewTitle} title={title} subheader={reviewDate} body={reviewBody} />\n        </Grid>\n        );\n        i += 1;\n    }\n    return tempJobs;\n    }; \n    if (loading) {\n        return <LoadingView/>;\n        }\n    return(\n        <div className={styles.biggyBox}>\n            <div className={styles.secondBigBox}>\n                <div className={styles.profilebox}>\n                    {renderProfiles()}\n                </div>  \n                <div className={styles.mustHide}>\n                    {profiles.isInsuranceNumberVerified === true && localStorage.getItem('usertype') === 'Contractor' \n                    ?<p className={styles.liability}>\n                        <VerifiedUserIcon className={styles.Vector} style={{height:20}}/>Liability insurance no: {profiles.insuranceNumber}\n                    </p>\n                    :profiles.isInsuranceNumberVerified === false && localStorage.getItem('usertype') === 'Contractor' \n                    ?<p className={styles.liability}>\n                        Liability insurance no: {profiles.insuranceNumber}\n                    </p>\n                    :null\n                    }\n                    {profiles.isWorkerNumberVerified === true && localStorage.getItem('usertype') === 'Contractor' \n                    ?<p className={styles.workercompensation}>\n                        <VerifiedUserIcon className={styles.Vector} style={{height:20}}/>Worker compensation insurance no: {profiles.workerNumber}\n                    </p>\n                    :profiles.isWorkerNumberVerified === false && localStorage.getItem('usertype') === 'Contractor' \n                    ?<p className={styles.workercompensation}>\n                        Worker compensation insurance no: {profiles.workerNumber}\n                    </p>\n                    :null\n                    }\n                </div>\n            </div>\n            <hr className={styles.hr1}/>   \n            <div className={styles.SecondBox}>\n                <div className={styles.skillsbox}>\n                    <h1 className={styles.skills}>{renderSkills()}</h1>\n                    <box className={styles2.servicetagbox}>\n                        {renderTags()}\n                    </box>       \n                </div>\n                {profiles.isInsuranceNumberVerified === true && localStorage.getItem('usertype') === 'Contractor' \n                ?<div className={styles.languagebox}>\n                    <h1 className={styles.planguages}>Preferred languages</h1>\n                    <p className={styles.languages}>{languages}</p>\n                </div>\n                :<div>\n                    <h1 className={styles.planguages}>Preferred languages</h1>\n                    <p className={styles.languages}>{languages}</p>\n                    </div>\n                }\n\n            </div> \n            <hr className={styles.hr1}/>\n            {localStorage.getItem('usertype') === 'Contractor' \n            ?<div className={styles.ThirdBox}>\n                <h1 className={styles.skills}>About</h1>\n                <video src={profiles.profile_video} controls height=\"400px\" width='auto'/>\n                <hr className={styles.hr2}/>\n            </div>:null}\n            {localStorage.getItem('usertype') === 'Contractor' \n            ?<div className={styles.ThirdBox}>\n                <h1 className={styles.skills}>\n                    Reviews\n                </h1>\n                {contractorReview.length>0?\n                <Grid container spacing={4} className={styles.gridContainer} justify=\"center\">\n                    {renderReviews()}\n                </Grid>\n                : <p>It seems like you don't have any reviews</p>}\n            </div>:null}\n        </div> \n    )\n};\n\n\nfunction Tags(props) {\n    if (!props.tagname) return null;\n    return (\n        <box className={styles2.tag}>\n            <p className={styles2.tagfont}>{props.tagname}</p>\n        </box>\n    )\n};\n\n\nexport default Cprofile;\n \n\n"]},"metadata":{},"sourceType":"module"}