{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/SignUp/SignUpFlow/languageSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\nimport api from '../../api/api'; // const Label = styled('label')`\n//   padding: 0 0 4px;\n//   line-height: 1.5;\n//   display: block;\n// `;\n\nconst InputWrapper = styled('div')`\n  width: 80%;\n  border: 1px solid #000000;\n  background-color: #ffffff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: left;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 40px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n_c = InputWrapper;\nconst Tag = styled(({\n  label,\n  onDelete,\n  ...props\n}) => /*#__PURE__*/React.createElement(\"div\", Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }\n}, label), /*#__PURE__*/React.createElement(CloseIcon, {\n  onClick: onDelete,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n})))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 18px;\n  background-color: #ffffff;\n  border: 2px solid #2B64D2;\n  border-radius: 38px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n  color:#2B64D2;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 14px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n_c2 = Tag;\nconst Listbox = styled('ul')`\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n_c3 = Listbox;\nexport default function CustomizedHook(props) {\n  _s();\n\n  const generateLanguages = () => {\n    return api.languages.map(function (item) {\n      return {\n        title: item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()\n      };\n    });\n  };\n\n  const {\n    getRootProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl\n  } = useAutocomplete({\n    id: 'customized-hook-demo',\n    multiple: true,\n    options: generateLanguages(),\n    getOptionLabel: option => option.title\n  });\n  return /*#__PURE__*/React.createElement(NoSsr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(InputWrapper, {\n    ref: setAnchorEl,\n    style: {\n      paddingLeft: 50,\n      width: '90%',\n      height: 'auto',\n      borderRadius: '49px/90px',\n      textAlign: 'left'\n    },\n    className: focused ? 'focused' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, value.map((option, index) => /*#__PURE__*/React.createElement(Tag, Object.assign({\n    label: option.title\n  }, getTagProps({\n    index\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    placeholder: props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  })))), groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(Listbox, Object.assign({}, getListboxProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }), groupedOptions.map((option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    const currOnClick = optionProps.onClick;\n\n    const newOnClick = event => {\n      currOnClick(event); // debugger;\n\n      if ('type' in props) {\n        props.information[props.type] = [...value.map(val => val.title), event.target.innerText];\n      }\n    };\n\n    optionProps.onClick = newOnClick;\n    return /*#__PURE__*/React.createElement(\"li\", Object.assign({}, optionProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, option.title), /*#__PURE__*/React.createElement(CheckIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }));\n  })) : null));\n}\n\n_s(CustomizedHook, \"BpGswFHzK3WzZUvCDtbF58FFlJw=\", false, function () {\n  return [useAutocomplete];\n});\n\n_c4 = CustomizedHook;\nconst choosingList = [{\n  title: 'Nepali'\n}, {\n  title: 'Hindi'\n}, {\n  title: 'Arabic'\n}, {\n  title: 'English'\n}, {\n  title: 'French'\n}, {\n  title: 'Montana'\n}, {\n  title: 'Spanish'\n}, {\n  title: 'Bengali'\n}];\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InputWrapper\");\n$RefreshReg$(_c2, \"Tag\");\n$RefreshReg$(_c3, \"Listbox\");\n$RefreshReg$(_c4, \"CustomizedHook\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/BookTrades-Web/src/components/SignUp/SignUpFlow/languageSearch.js"],"names":["React","useAutocomplete","NoSsr","CheckIcon","CloseIcon","styled","api","InputWrapper","Tag","label","onDelete","props","Listbox","CustomizedHook","generateLanguages","languages","map","item","title","charAt","toUpperCase","slice","toLowerCase","getRootProps","getInputProps","getTagProps","getListboxProps","getOptionProps","groupedOptions","value","focused","setAnchorEl","id","multiple","options","getOptionLabel","option","paddingLeft","width","height","borderRadius","textAlign","index","placeholder","length","optionProps","currOnClick","onClick","newOnClick","event","information","type","val","target","innerText","choosingList"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,GAAP,MAAgB,eAAhB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAAC,KAAD,CAAQ;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/BA;KAAME,Y;AAiCN,MAAMC,GAAG,GAAGH,MAAM,CAAC,CAAC;AAAEI,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmB,KAAGC;AAAtB,CAAD,kBACjB,6CAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOF,KAAP,CADF,eAEE,oBAAC,SAAD;AAAW,EAAA,OAAO,EAAEC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADgB,CAKf;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApCA;MAAMF,G;AAsCN,MAAMI,OAAO,GAAGP,MAAM,CAAC,IAAD,CAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA1CA;MAAMO,O;AA4CN,eAAe,SAASC,cA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","sourcesContent":["import React from 'react';\nimport useAutocomplete from '@material-ui/lab/useAutocomplete';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport styled from 'styled-components';\nimport api from '../../api/api';\n\n// const Label = styled('label')`\n//   padding: 0 0 4px;\n//   line-height: 1.5;\n//   display: block;\n// `;\n\nconst InputWrapper = styled('div')`\n  width: 80%;\n  border: 1px solid #000000;\n  background-color: #ffffff;\n  border-radius: 4px;\n  padding: 1px;\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: left;\n\n  &:hover {\n    border-color: #40a9ff;\n  }\n\n  &.focused {\n    border-color: #40a9ff;\n    box-shadow: 0 0 0 2px rgba(24, 144, 255, 0.2);\n  }\n\n  & input {\n    font-size: 14px;\n    height: 40px;\n    box-sizing: border-box;\n    padding: 4px 6px;\n    width: 0;\n    min-width: 30px;\n    flex-grow: 1;\n    border: 0;\n    margin: 0;\n    outline: 0;\n  }\n`;\n\nconst Tag = styled(({ label, onDelete, ...props }) => (\n  <div {...props}>\n    <span>{label}</span>\n    <CloseIcon onClick={onDelete} />\n  </div>\n))`\n  display: flex;\n  align-items: center;\n  height: 24px;\n  margin: 2px;\n  line-height: 18px;\n  background-color: #ffffff;\n  border: 2px solid #2B64D2;\n  border-radius: 38px;\n  box-sizing: content-box;\n  padding: 0 4px 0 10px;\n  outline: 0;\n  overflow: hidden;\n  color:#2B64D2;\n\n  &:focus {\n    border-color: #40a9ff;\n    background-color: #e6f7ff;\n  }\n\n  & span {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n\n  & svg {\n    font-size: 14px;\n    cursor: pointer;\n    padding: 4px;\n  }\n`;\n\nconst Listbox = styled('ul')`\n  margin: 2px 0 0;\n  padding: 0;\n  position: absolute;\n  list-style: none;\n  background-color: #fff;\n  overflow: auto;\n  max-height: 250px;\n  border-radius: 4px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);\n  z-index: 1;\n\n  & li {\n    padding: 5px 12px;\n    display: flex;\n\n    & span {\n      flex-grow: 1;\n    }\n\n    & svg {\n      color: transparent;\n    }\n  }\n\n  & li[aria-selected='true'] {\n    background-color: #fafafa;\n    font-weight: 600;\n\n    & svg {\n      color: #1890ff;\n    }\n  }\n\n  & li[data-focus='true'] {\n    background-color: #e6f7ff;\n    cursor: pointer;\n\n    & svg {\n      color: #000;\n    }\n  }\n`;\n\nexport default function CustomizedHook(props) {\n\n  const generateLanguages = () => {\n    return api.languages.map(function(item) {\n      return {title: item.charAt(0).toUpperCase() + item.slice(1).toLowerCase()};\n    });\n  }\n\n  const {\n    getRootProps,\n    getInputProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    groupedOptions,\n    value,\n    focused,\n    setAnchorEl,\n  } = useAutocomplete({\n    id: 'customized-hook-demo',\n    multiple: true,\n    options: generateLanguages(),\n    getOptionLabel: (option) => option.title,\n  });\n\n  return (\n    <NoSsr>\n      <div >\n        <div  {...getRootProps()}>\n          {/* <Label {...getInputLabelProps()}>Customized hook</Label> */}\n          <InputWrapper ref={setAnchorEl} style={{paddingLeft:50, \n            width:'90%',\n             height:'auto',\n             borderRadius: '49px/90px',\n             textAlign: 'left'\n             }} className={focused ? 'focused' : ''}>\n            {value.map((option, index) => (\n              <Tag label={option.title} {...getTagProps({ index })} />\n            ))}\n\n            <input {...getInputProps()} placeholder={props.placeholder}/>\n          </InputWrapper>\n        </div>\n        {groupedOptions.length > 0 ? (\n          <Listbox {...getListboxProps()}>\n          {groupedOptions.map((option, index) => {\n            const optionProps = getOptionProps({ option, index })\n            const currOnClick = optionProps.onClick;\n            const newOnClick = (event) =>{\n              currOnClick(event);\n              // debugger;\n              if ('type' in props){\n                props.information[props.type] = [...value.map(val=> val.title), event.target.innerText]\n              }\n            }\n            optionProps.onClick = newOnClick\n            return(<li {...optionProps}>\n              <span>{option.title}</span>\n              <CheckIcon fontSize=\"small\" />\n            </li>)\n          })}\n          </Listbox>\n        ) : null}\n      </div>\n    </NoSsr>\n  );\n}\n\nconst choosingList = [\n  { title: 'Nepali'},\n  { title: 'Hindi'},\n  { title: 'Arabic'},\n  { title: 'English'},\n  { title: 'French'},\n  { title: 'Montana'},\n  { title: 'Spanish'},\n  { title: 'Bengali'},\n];\n"]},"metadata":{},"sourceType":"module"}