{"ast":null,"code":"var _jsxFileName = \"/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/PostingPage_Active/body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styles from '../PostingPage/posting.module.css';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory } from 'react-router-dom'; // import { makeStyles , useTheme} from '@material-ui/core/styles';\n\nimport api from '../api/api';\nimport ImageViewer from '../ImageViewer';\nimport swal from 'sweetalert';\nimport SimpleMenu from './dropDown';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport moment from 'moment';\nimport MessageButton from '../ResuableComponents/messageButton';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\nexport default function ActiveBody(props) {\n  _s();\n\n  const history = useHistory();\n\n  const handleOnClick = event => {\n    event.preventDefault();\n    history.goBack();\n  };\n\n  const [singleActiveJob, setSingleActiveJob] = useState({\n    downloadurl: [],\n    serviceTypeList: [],\n    languageList: []\n  });\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  var jobId = {}; // debugger\n\n  jobId[\"id\"] = props.id;\n\n  const getSingleActiveJob = () => {\n    api.getSingleActiveJob(jobId).then(res => {\n      // debugger\n      console.log(\"Job loaded successfully\");\n      console.log(res);\n      setSingleActiveJob(res.data);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n      setOpen(true);\n    });\n  };\n\n  useEffect(() => {\n    setLoading(true);\n    getSingleActiveJob();\n  }, []);\n  let jobDetails = singleActiveJob.jobDetails;\n  let imagesList = singleActiveJob.downloadurl;\n\n  const handleLink = event => {\n    event.preventDefault();\n\n    if (localStorage.getItem('usertype') === 'Contractor') {\n      history.push({\n        pathname: '/ClientProfile/' + singleActiveJob.clientId.toString()\n      });\n    } else {\n      history.push({\n        pathname: '/profile/' + singleActiveJob.contractorId.toString()\n      });\n    }\n\n    ;\n  };\n\n  const ts = moment(singleActiveJob.dateAccepted);\n  let timeVal;\n\n  if (moment().diff(ts, 'minutes') < 60) {\n    timeVal = String(moment().diff(ts, 'minutes')) + 'm';\n  } else if (moment().diff(ts, 'hours') < 24) {\n    timeVal = String(moment().diff(ts, 'hours')) + 'h';\n  } else if (moment().diff(ts, 'days') < 24) {\n    timeVal = String(moment().diff(ts, 'days')) + 'd';\n  } else {\n    timeVal = String(moment().diff(ts, 'weeks')) + 'w';\n  }\n\n  const renderTitle = () => {\n    let jobTitle = singleActiveJob.title;\n    let locationDetail = singleActiveJob.locationDetail;\n    let name = \"\";\n    let userID = \"\";\n\n    if (localStorage.getItem('usertype') == 'Contractor') {\n      name = singleActiveJob.clientFirstName + \" \" + singleActiveJob.clientLastName;\n      userID = singleActiveJob.clientId;\n    } else {\n      name = singleActiveJob.contractorFirstName + \" \" + singleActiveJob.contractorLastName;\n      userID = singleActiveJob.contractorId;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.headerDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIcon, {\n      style: {\n        height: 25,\n        cursor: \"pointer\"\n      },\n      onClick: handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.header1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \" \", jobTitle, \" \"), /*#__PURE__*/React.createElement(SimpleMenu, {\n      id: props.id,\n      contractorId: userID,\n      name: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.name,\n      onClick: handleLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, name), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 56\n      }\n    }, \"\\u2022\"), \" \", locationDetail)), /*#__PURE__*/React.createElement(\"box\", {\n      className: styles.frame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.location,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"Accepted \", timeVal, \" ago\")));\n  }; //returns the length of the array and item inside them\n\n\n  var userId = {};\n\n  const handleOnSubmit = event => {\n    userId.id = props.id;\n    api.editJob(userId).then(res => {\n      swal({\n        title: \"Unassigned!\",\n        text: \"Job has been unassigned!\",\n        icon: \"success\",\n        button: \"OK\"\n      });\n    }).catch(err => console.log(err));\n  };\n\n  function Tags(props) {\n    if (!props.tagname) return null;\n    return /*#__PURE__*/React.createElement(\"box\", {\n      className: styles2.tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles2.tagfont,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, props.tagname));\n  }\n\n  ;\n\n  const renderTags = () => {\n    let i = 0;\n    let services = singleActiveJob.serviceTypeList;\n    let tagsCount = services.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: services[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 27\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  const renderLTags = () => {\n    let i = 0;\n    let lang = singleActiveJob.languageList;\n\n    for (var j = 0; j < lang.length; j++) {\n      let temp = lang[j].toLowerCase();\n      lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n    }\n\n    let tagsCount = lang.length;\n    let tempTags = [];\n\n    while (i < tagsCount) {\n      tempTags.push( /*#__PURE__*/React.createElement(Tags, {\n        className: styles2.tag,\n        tagname: lang[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 27\n        }\n      }));\n      i += 1;\n    }\n\n    ;\n    return tempTags;\n  };\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(LoadingView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.posting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"box\", {\n    className: styles.postingbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, renderTitle(), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImageViewer, {\n    imagesList: imagesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })), localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(MessageButton, {\n    name: singleActiveJob.clientFirstName,\n    contractorId: singleActiveJob.clientId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 50\n    }\n  })) : localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Client' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(MessageButton, {\n    name: singleActiveJob.contractorFirstName,\n    contractorId: singleActiveJob.contractorId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 50\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paragraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, \"About the job\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.about,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  }, jobDetails), /*#__PURE__*/React.createElement(\"hr\", {\n    className: styles.hr2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.skillsbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  }, \"Required Skills\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, renderTags()), /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.header2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }, \"Required Languages\"), /*#__PURE__*/React.createElement(\"box\", {\n    className: styles2.servicetagbox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 25\n    }\n  }, renderLTags())))), /*#__PURE__*/React.createElement(NotFound, {\n    setOpen: setOpen,\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(ActiveBody, \"sBdK45hoLlH25RuGsltss47M36o=\", false, function () {\n  return [useHistory];\n});\n\n_c = ActiveBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveBody\");","map":{"version":3,"sources":["/Users/nandupokhrel/Desktop/BookTrades/trademingle/src/components/PostingPage_Active/body.js"],"names":["React","useEffect","useState","styles","ArrowBackIcon","useHistory","api","ImageViewer","swal","SimpleMenu","styles2","moment","MessageButton","NotFound","LoadingView","ActiveBody","props","history","handleOnClick","event","preventDefault","goBack","singleActiveJob","setSingleActiveJob","downloadurl","serviceTypeList","languageList","open","setOpen","loading","setLoading","jobId","id","getSingleActiveJob","then","res","console","log","data","catch","err","jobDetails","imagesList","handleLink","localStorage","getItem","push","pathname","clientId","toString","contractorId","ts","dateAccepted","timeVal","diff","String","renderTitle","jobTitle","title","locationDetail","name","userID","clientFirstName","clientLastName","contractorFirstName","contractorLastName","headerDiv","height","cursor","header1","frame","location","userId","handleOnSubmit","editJob","text","icon","button","Tags","tagname","tag","tagfont","renderTags","i","services","tagsCount","length","tempTags","renderLTags","lang","j","temp","toLowerCase","charAt","toUpperCase","substr","posting","postingbox","row","message","paragraph","hr1","header2","about","hr2","skillsbox","servicetagbox"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,UAAT,QAA0B,kBAA1B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AAEA,eAAe,SAAUC,UAAV,CAAqBC,KAArB,EAA4B;AAAA;;AACvC,QAAMC,OAAO,GAAGZ,UAAU,EAA1B;;AACA,QAAMa,aAAa,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAACI,MAAR;AACH,GAHD;;AAKA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCrB,QAAQ,CAAC;AAACsB,IAAAA,WAAW,EAAC,EAAb;AAAgBC,IAAAA,eAAe,EAAC,EAAhC;AAAmCC,IAAAA,YAAY,EAAC;AAAhD,GAAD,CAAtD;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB1B,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAAC2B,OAAD,EAAUC,UAAV,IAAwB5B,QAAQ,CAAC,KAAD,CAAtC;AACA,MAAI6B,KAAK,GAAE,EAAX,CAVuC,CAWvC;;AACAA,EAAAA,KAAK,CAAC,IAAD,CAAL,GAAcf,KAAK,CAACgB,EAApB;;AACA,QAAMC,kBAAkB,GAAG,MAAM;AAC7B3B,IAAAA,GAAG,CAAC2B,kBAAJ,CAAuBF,KAAvB,EAA8BG,IAA9B,CAAmCC,GAAG,IAAI;AACtC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAZ,MAAAA,kBAAkB,CAACY,GAAG,CAACG,IAAL,CAAlB;AACAR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAND,EAMGS,KANH,CAMSC,GAAG,IAAI;AAACJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AAAkBV,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmBF,MAAAA,OAAO,CAAC,IAAD,CAAP;AAAc,KANpE;AAOC,GARL;;AASA3B,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,IAAAA,kBAAkB;AACnB,GAHM,EAGL,EAHK,CAAT;AAIE,MAAIQ,UAAU,GAAGnB,eAAe,CAACmB,UAAjC;AACA,MAAIC,UAAU,GAAGpB,eAAe,CAACE,WAAjC;;AACA,QAAMmB,UAAU,GAAIxB,KAAD,IAAU;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIwB,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAAzC,EAAsD;AAClD5B,MAAAA,OAAO,CAAC6B,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAE,oBAAoBzB,eAAe,CAAC0B,QAAhB,CAAyBC,QAAzB;AADrB,OAAb;AAGC,KAJL,MAKQ;AACJhC,MAAAA,OAAO,CAAC6B,IAAR,CAAa;AACTC,QAAAA,QAAQ,EAAE,cAAczB,eAAe,CAAC4B,YAAhB,CAA6BD,QAA7B;AADf,OAAb;AAEO;;AAAA;AACV,GAXH;;AAYE,QAAME,EAAE,GAAGxC,MAAM,CAACW,eAAe,CAAC8B,YAAjB,CAAjB;AACA,MAAIC,OAAJ;;AACA,MAAI1C,MAAM,GAAG2C,IAAT,CAAcH,EAAd,EAAkB,SAAlB,IAA6B,EAAjC,EAAoC;AAChCE,IAAAA,OAAO,GAAGE,MAAM,CAAC5C,MAAM,GAAG2C,IAAT,CAAcH,EAAd,EAAkB,SAAlB,CAAD,CAAN,GAAuC,GAAjD;AACH,GAFD,MAEM,IAAGxC,MAAM,GAAG2C,IAAT,CAAcH,EAAd,EAAkB,OAAlB,IAA2B,EAA9B,EAAiC;AACnCE,IAAAA,OAAO,GAAGE,MAAM,CAAC5C,MAAM,GAAG2C,IAAT,CAAcH,EAAd,EAAkB,OAAlB,CAAD,CAAN,GAAqC,GAA/C;AACH,GAFK,MAEA,IAAGxC,MAAM,GAAG2C,IAAT,CAAcH,EAAd,EAAkB,MAAlB,IAA0B,EAA7B,EAAgC;AAClCE,IAAAA,OAAO,GAAGE,MAAM,CAAC5C,MAAM,GAAG2C,IAAT,CAAcH,EAAd,EAAkB,MAAlB,CAAD,CAAN,GAAoC,GAA9C;AACH,GAFK,MAED;AACDE,IAAAA,OAAO,GAAGE,MAAM,CAAC5C,MAAM,GAAG2C,IAAT,CAAcH,EAAd,EAAkB,OAAlB,CAAD,CAAN,GAAqC,GAA/C;AACH;;AACH,QAAMK,WAAW,GAAG,MAAM;AACpB,QAAIC,QAAQ,GAAGnC,eAAe,CAACoC,KAA/B;AACA,QAAIC,cAAc,GAAGrC,eAAe,CAACqC,cAArC;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,MAAM,GAAC,EAAX;;AACA,QAAIjB,YAAY,CAACC,OAAb,CAAqB,UAArB,KAAoC,YAAxC,EAAqD;AACjDe,MAAAA,IAAI,GAAGtC,eAAe,CAACwC,eAAhB,GAAkC,GAAlC,GAAwCxC,eAAe,CAACyC,cAA/D;AACAF,MAAAA,MAAM,GAACvC,eAAe,CAAC0B,QAAvB;AACD,KAHH,MAIM;AACFY,MAAAA,IAAI,GAAGtC,eAAe,CAAC0C,mBAAhB,GAAsC,GAAtC,GAA4C1C,eAAe,CAAC2C,kBAAnE;AACAJ,MAAAA,MAAM,GAACvC,eAAe,CAAC4B,YAAvB;AACD;;AACH,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE/C,MAAM,CAAC+D,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AAAgB,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,EAAR;AAAYC,QAAAA,MAAM,EAAC;AAAnB,OAAvB;AAAsD,MAAA,OAAO,EAAElD,aAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAI,MAAA,SAAS,EAAEf,MAAM,CAACkE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiCZ,QAAjC,MAFJ,eAGI,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAEzC,KAAK,CAACgB,EAAtB;AAA0B,MAAA,YAAY,EAAE6B,MAAxC;AAAgD,MAAA,IAAI,EAAED,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,eAMI;AAAK,MAAA,SAAS,EAAEzD,MAAM,CAACmE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAEnE,MAAM,CAACyD,IAArB;AAA2B,MAAA,OAAO,EAAEjB,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDiB,IAAjD,CADJ,eAEI;AAAG,MAAA,SAAS,EAAEzD,MAAM,CAACoE,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B,OAAqDZ,cAArD,CAFJ,CANJ,eAUI;AAAK,MAAA,SAAS,EAAExD,MAAM,CAACmE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAEnE,MAAM,CAACoE,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyClB,OAAzC,SADJ,CAVJ,CADJ;AAgBD,GA7BL,CAnDqC,CAiFnC;;;AACJ,MAAImB,MAAM,GAAC,EAAX;;AACA,QAAMC,cAAc,GAAItD,KAAD,IAAU;AAC7BqD,IAAAA,MAAM,CAACxC,EAAP,GAAWhB,KAAK,CAACgB,EAAjB;AACA1B,IAAAA,GAAG,CAACoE,OAAJ,CAAYF,MAAZ,EAAoBtC,IAApB,CAAyBC,GAAG,IAAI;AAC5B3B,MAAAA,IAAI,CAAC;AACDkD,QAAAA,KAAK,EAAE,aADN;AAEDiB,QAAAA,IAAI,EAAE,0BAFL;AAGDC,QAAAA,IAAI,EAAE,SAHL;AAIDC,QAAAA,MAAM,EAAE;AAJP,OAAD,CAAJ;AAMH,KAPD,EAOGtC,KAPH,CAOSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAPhB;AAQH,GAVD;;AAWA,WAASsC,IAAT,CAAc9D,KAAd,EAAqB;AACjB,QAAI,CAACA,KAAK,CAAC+D,OAAX,EAAoB,OAAO,IAAP;AACpB,wBACI;AAAK,MAAA,SAAS,EAAErE,OAAO,CAACsE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAEtE,OAAO,CAACuE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCjE,KAAK,CAAC+D,OAAtC,CADJ,CADJ;AAKH;;AAAA;;AACD,QAAMG,UAAU,GAAG,MAAM;AACrB,QAAIC,CAAC,GAAG,CAAR;AACA,QAAIC,QAAQ,GAAG9D,eAAe,CAACG,eAA/B;AACA,QAAI4D,SAAS,GAAGD,QAAQ,CAACE,MAAzB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,WAAOJ,CAAC,GAAGE,SAAX,EAAsB;AAClBE,MAAAA,QAAQ,CAACzC,IAAT,eAAc,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEpC,OAAO,CAACsE,GAAzB;AAA8B,QAAA,OAAO,EAAEI,QAAQ,CAACD,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACAA,MAAAA,CAAC,IAAI,CAAL;AACH;;AAAA;AACD,WAAOI,QAAP;AACH,GAVD;;AAWA,QAAMC,WAAW,GAAG,MAAM;AACtB,QAAIL,CAAC,GAAG,CAAR;AACA,QAAIM,IAAI,GAAGnE,eAAe,CAACI,YAA3B;;AACA,SAAI,IAAIgE,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGD,IAAI,CAACH,MAAzB,EAAkCI,CAAC,EAAnC,EAAsC;AAClC,UAAIC,IAAI,GAAEF,IAAI,CAACC,CAAD,CAAJ,CAAQE,WAAR,EAAV;AACAH,MAAAA,IAAI,CAACC,CAAD,CAAJ,GAAUC,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,KAA+BH,IAAI,CAACI,MAAL,CAAY,CAAZ,CAAzC;AACH;;AACD,QAAIV,SAAS,GAAGI,IAAI,CAACH,MAArB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,WAAOJ,CAAC,GAAGE,SAAX,EAAsB;AAClBE,MAAAA,QAAQ,CAACzC,IAAT,eAAc,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAEpC,OAAO,CAACsE,GAAzB;AAA8B,QAAA,OAAO,EAAES,IAAI,CAACN,CAAD,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACAA,MAAAA,CAAC,IAAI,CAAL;AACH;;AAAA;AACD,WAAOI,QAAP;AACH,GAdD;;AAeA,MAAI1D,OAAJ,EAAa;AACT,wBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACC;;AACL,sBACI;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAAC6F,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAE7F,MAAM,CAAC8F,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSzC,WAAW,EADpB,eAEI;AAAK,IAAA,SAAS,EAAErD,MAAM,CAAC+F,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAExD,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,EAKKE,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwCD,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,YAA7E,gBACA;AAAK,IAAA,SAAS,EAAE1C,MAAM,CAACgG,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE7E,eAAe,CAACwC,eAArC;AAAsD,IAAA,YAAY,EAAExC,eAAe,CAAC0B,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CADA,GAECJ,YAAY,CAACC,OAAb,CAAqB,cAArB,KAAwCD,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,QAA7E,gBACD;AAAK,IAAA,SAAS,EAAE1C,MAAM,CAACgG,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgC,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE7E,eAAe,CAAC0C,mBAArC;AAA0D,IAAA,YAAY,EAAE1C,eAAe,CAAC4B,YAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhC,CADC,GAED,IATL,eAWI;AAAK,IAAA,SAAS,EAAE/C,MAAM,CAACiG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEjG,MAAM,CAACkG,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAI,IAAA,SAAS,EAAElG,MAAM,CAACmG,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI;AAAG,IAAA,SAAS,EAAEnG,MAAM,CAACoG,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B9D,UAA7B,CAHJ,eAII;AAAI,IAAA,SAAS,EAAEtC,MAAM,CAACqG,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAKI;AAAK,IAAA,SAAS,EAAErG,MAAM,CAACsG,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAEtG,MAAM,CAACmG,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAK,IAAA,SAAS,EAAE5F,OAAO,CAACgG,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKxB,UAAU,EADf,CAFJ,eAKI;AAAI,IAAA,SAAS,EAAE/E,MAAM,CAACmG,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,eAMI;AAAK,IAAA,SAAS,EAAE5F,OAAO,CAACgG,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,WAAW,EADhB,CANJ,CALJ,CAXJ,CADJ,eA6BI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE5D,OAAnB;AAA4B,IAAA,IAAI,EAAED,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,CADJ;AAiCH;;GApKwBZ,U;UACLV,U;;;KADKU,U","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styles from '../PostingPage/posting.module.css'; \nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { useHistory} from 'react-router-dom';\n// import { makeStyles , useTheme} from '@material-ui/core/styles';\nimport api from '../api/api';\nimport ImageViewer from '../ImageViewer';\nimport swal from 'sweetalert';\nimport SimpleMenu from './dropDown';\nimport styles2 from '../ContractorActiveJobsPage/styles.module.css';\nimport moment from 'moment';\nimport MessageButton from '../ResuableComponents/messageButton';\nimport NotFound from '../ResuableComponents/404';\nimport LoadingView from '../ResuableComponents/loadingView';\n\nexport default function  ActiveBody(props) {\n    const history = useHistory();\n    const handleOnClick = (event) => {\n        event.preventDefault();\n        history.goBack()\n    }\n\n    const [singleActiveJob, setSingleActiveJob] = useState({downloadurl:[],serviceTypeList:[],languageList:[]});\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    var jobId= {};\n    // debugger\n    jobId[\"id\"] = props.id;\n    const getSingleActiveJob = () => {\n        api.getSingleActiveJob(jobId).then(res => {\n            // debugger\n            console.log(\"Job loaded successfully\");\n            console.log(res);\n            setSingleActiveJob(res.data); \n            setLoading(false);\n        }).catch(err => {console.log(err); setLoading(false); setOpen(true)})\n        }\n    useEffect(() => {\n        setLoading(true);\n        getSingleActiveJob();\n      },[]);\n      let jobDetails = singleActiveJob.jobDetails\n      let imagesList = singleActiveJob.downloadurl\n      const handleLink = (event) =>{\n        event.preventDefault();\n        if (localStorage.getItem('usertype') === 'Contractor'){\n            history.push({\n                pathname: '/ClientProfile/' + singleActiveJob.clientId.toString(),\n                });\n            }\n            else{\n            history.push({\n                pathname: '/profile/' + singleActiveJob.contractorId.toString(),\n                })};\n        }\n        const ts = moment(singleActiveJob.dateAccepted);\n        let timeVal;\n        if (moment().diff(ts, 'minutes')<60){\n            timeVal = String(moment().diff(ts, 'minutes')) + 'm' \n        }else if(moment().diff(ts, 'hours')<24){\n            timeVal = String(moment().diff(ts, 'hours')) + 'h' \n        }else if(moment().diff(ts, 'days')<24){\n            timeVal = String(moment().diff(ts, 'days')) + 'd' \n        }else{\n            timeVal = String(moment().diff(ts, 'weeks')) + 'w' \n        }\n      const renderTitle = () => {\n            let jobTitle = singleActiveJob.title\n            let locationDetail = singleActiveJob.locationDetail\n            let name = \"\"\n            let userID=\"\"\n            if (localStorage.getItem('usertype') == 'Contractor'){\n                name = singleActiveJob.clientFirstName + \" \" + singleActiveJob.clientLastName\n                userID=singleActiveJob.clientId\n              }\n              else{\n                name = singleActiveJob.contractorFirstName + \" \" + singleActiveJob.contractorLastName\n                userID=singleActiveJob.contractorId\n              }\n            return(\n                <div>\n                    <div className={styles.headerDiv}>\n                        <ArrowBackIcon  style={{height:25, cursor:\"pointer\"}} onClick={handleOnClick}/>\n                        <h1 className={styles.header1}> {jobTitle} </h1>\n                        <SimpleMenu id={props.id} contractorId={userID} name={name}/>\n                    </div>\n                    <box className={styles.frame}>\n                        <p className={styles.name} onClick={handleLink}>{name}</p>\n                        <p className={styles.location}><span>&#8226;</span> {locationDetail}</p>\n                    </box> \n                    <box className={styles.frame}>\n                        <p className={styles.location}>Accepted {timeVal} ago</p>\n                    </box>\n                </div>\n            )\n          };\n        //returns the length of the array and item inside them\n    var userId={}\n    const handleOnSubmit = (event) =>{\n        userId.id= props.id\n        api.editJob(userId).then(res => {\n            swal({\n                title: \"Unassigned!\",\n                text: \"Job has been unassigned!\",\n                icon: \"success\",\n                button: \"OK\",\n              });\n        }).catch(err => console.log(err))\n    }\n    function Tags(props) {\n        if (!props.tagname) return null;\n        return (\n            <box className={styles2.tag}>\n                <p className={styles2.tagfont}>{props.tagname}</p>\n            </box>\n        )\n    };\n    const renderTags = () => {\n        let i = 0;\n        let services = singleActiveJob.serviceTypeList;\n        let tagsCount = services.length;\n        let tempTags = [];\n        while (i < tagsCount) {\n            tempTags.push(<Tags className={styles2.tag} tagname={services[i]} />);\n            i += 1;\n        };\n        return tempTags;\n    };\n    const renderLTags = () => {\n        let i = 0;\n        let lang = singleActiveJob.languageList;\n        for(var j = 0 ; j < lang.length ; j++){\n            let temp= lang[j].toLowerCase()\n            lang[j] = temp.charAt(0).toUpperCase() + temp.substr(1);\n        }\n        let tagsCount = lang.length;\n        let tempTags = [];\n        while (i < tagsCount) {\n            tempTags.push(<Tags className={styles2.tag} tagname={lang[i]} />);\n            i += 1;\n        };\n        return tempTags;\n    };\n    if (loading) {\n        return <LoadingView/>;\n        }\n    return (   \n        <div className={styles.posting}>\n            <box className={styles.postingbox}>\n                    {renderTitle()}\n                <div className={styles.row}>\n                    <ImageViewer imagesList={imagesList}/>\n                </div>\n                {localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Contractor' \n                ?<div className={styles.message}><MessageButton name={singleActiveJob.clientFirstName} contractorId={singleActiveJob.clientId}/></div>\n                : localStorage.getItem('access-token') && localStorage.getItem('usertype') === 'Client'\n                ?<div className={styles.message}><MessageButton name={singleActiveJob.contractorFirstName} contractorId={singleActiveJob.contractorId}/></div>\n                :null\n                }\n                <div className={styles.paragraph}>\n                    <hr className={styles.hr1}/>  \n                    <h2 className={styles.header2}>About the job</h2>\n                    <p className={styles.about}>{jobDetails}</p>\n                    <hr className={styles.hr2}/>\n                    <div className={styles.skillsbox}>\n                        <h1 className={styles.header2}>Required Skills</h1>\n                        <box className={styles2.servicetagbox}>\n                            {renderTags()}\n                        </box>     \n                        <h1 className={styles.header2}>Required Languages</h1>\n                        <box className={styles2.servicetagbox}>\n                            {renderLTags()}\n                        </box>    \n                    </div>\n                </div> \n            </box>\n            <NotFound setOpen={setOpen} open={open}/>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}